{"version":3,"sources":["assets/resources/bzier/scripts/BezierData.js","assets/resources/bzier/scripts/Bezier.js","assets/resources/code/Drag.js","assets/resources/bzier/scripts/Enum.js","assets/resources/bzier/scripts/EventListener.js","assets/resources/code/LineItem.js","assets/resources/bzier/scripts/NodeEvents.js","assets/resources/code/WindowDrag.js","assets/resources/bzier/scripts/drawBezier.js","assets/resources/code/editor.js","assets/resources/code/fishConst.js","assets/resources/code/fish_MovieClip.js","assets/resources/code/fish_Unit.js","assets/glob.js","assets/resources/code/settingView.js"],"names":["Bezier","require","BezierData","_this","pointPrefab","controlPrefab","bezierCurveLists","bezierCurveData","time","length","points","pointCurveDict","Map","deleteTarget","PointNum","pointParent","currentBezierType","pointCount","resolution","width","glGame","height","init","point","control","parent","startPoint","controlPoint","endPoint","startSpeed","controlSpeed","endSpeed","this","clearAllBezier","initRandCurve","getResolution","params","setResolution","setPointCount","num","setBezierCurveType","type","setDeleteTarget","node","addBezierCurve","curve","push","console","log","getBezierCurveType","getBezierCurveLists","getBezierCurveData","setBezierCurveRunTime","isLastCurve","createCurve","pos","atherData","controlPos","endPos","cc","v2","x","y","start","end","createPoint","lcl","Ident","saveToPointCurveDict","createCurveForImport","speed","createThirdOrderCurve","control2","c1pos","add","position","Math","min","control1","warn","obj","key","has","get","set","deletePoint","location","getPointLocation","deleteCenterPoint","deleteStartPoint","deleteEndPoint","saveBezierPath","i","len","_bezierCurveData$poin","bezier","bezierCurve","Object","values","getPoints","curveLength","getCurveLength","apply","_toConsumableArray","editor","status","forEach","destroy","clear","ident","name","isSelect","arguments","undefined","instantiate","NodeEvents","setMoveTargetNode","count","setPosition","addPointDeleteEvents","addDragEvents","Node","addComponent","Label","string","curveObj","CurveObj","prevCurve","endCurve","nextCurve","startCurve","prevEndCurveObj","_point","deleteCurveFromBezierLists","endCurveObj","startCurveObj","splice","module","exports","pointArr","_pointLists","totalLength","prevPos","currentRunTime","_runTime","_pointArr","factorial","n","j","ComputeBezier","dt","runTime","t","item","index","pow","sqrt","Class","extends","Component","properties","isSelf","default","displayName","tooltip","isEnterCtrl","on","EventType","TOUCH_MOVE","event","opacity","getComponent","Widget","enabled","delta","touch","getDelta","Ctrl","window","BezierCurveType","SecondOrder","ThirdOrder","EventListener","handlers","eventType","method","emit","data","call","off","handler","lab_desc_id","getChildByName","lab_id","MOUSE_ENTER","active","info","FList","groupID","Number","desc","_info","currGIndex","fishLine","lineID","fishName","fishTable","fishTypeId","error","MOUSE_MOVE","convertToNodeSpaceAR","getLocation","MOUSE_LEAVE","moveTargetNode","isMouseDown","isOperate","convertToNodeSpace","isDelete","atDrawingArea","halfW","halfH","isDragMove","mousePos","target","flag","setOperateStatus","bol","MOUSE_DOWN","stopPropagation","getButton","Event","EventMouse","BUTTON_LEFT","game","canvas","style","cursor","MOUSE_UP","BUTTON_RIGHT","isShowPointMenuDeleteAndTime","Events","addCanvasTouchEvents","canvasNode","find","currDownEvent","currentFish","leftClickMenu","Color","RED","bzierData","isAdd","onLoad","dobbClick","dobbClickTime","TOUCH_START","ipcRenderer","send","TOUCH_CANCEL","TOUCH_END","update","graphicsNode","box","Prefab","bezierColor","lineColor","infoWindow","paper","msg","timeInfo","mouseLocation","pointMenu","drawBezier","currPoint","clearCurrFishLine","startDraw","drawStart","setMouseLocation","bind","showPointMenuView","hidePointMenuView","saveDataToFishPointList","zIndex","notice","fileInputBox","EditBox","controlPanel","moveBtn","smoothnessInputBox","runTimeInputBox","resolutionWidthInputBox","resolutionHeightInputBox","initGraphics","initNodeEvents","hideInfoWindow","addPointMenuBtnEvents","initResolution","isImport","initDataFormFishPointList","fishData","posArray","moveList","initDataToFishPointList","path","RestoreFList","RestoreIndex","JSON","parse","stringify","shift","rate","d","getPosArrayAndmoveList","getMaxIndexByTime","sys","localStorage","setItem","getPostFormPath","startPos","drawBezierAll","isStartRun","setCountTimeLabel","setPaperSize","ctx","Graphics","lineWidth","paintingArea","bezierLists","keys","drawThirdOrderBezier","moveTo","strokeColor","quadraticCurveTo","stroke","lineTo","bezierCurveTo","addHideEvents","hideMouseLocation","_this2","showMsg","slider","progress","maxSpeed","toFixed","editbox","str","isNaN","Slider","save","setNoitce","computeBezierActions","saveBezierPathToJson","isBrowser","datas","textFileAsBlob","Blob","downloadLink","document","createElement","download","innerHTML","webkitURL","href","createObjectURL","URL","onclick","destroyClickedElement","display","body","appendChild","click","actionLists","action","setRunTime","prveRunTime","setCurveSmoothness","prvePointCount","playBezierFishLine","editMove","updateBezierFishLine","updateData","showInfoWindow","_this3","setTimeout","startCountTime","stopCountTime","cuttTime","children","isEnd","lengthEnd","evt","concat","setCurveType","_name","tmpData","JsonAsset","arr","_i","currentTarget","systemEvent","SystemEvent","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","currBezierID","addPoint","subPoint","currAtl","GFishList","clickFishTableTypeFishId","atlasPath","fishTableExcelPath","file","tmpList","importJson","jsonString","OutSettingData","initOrReFreshOutSettingView","show","creatorFishForResView","base64Image","img","Image","src","onload","texture","Texture2D","initWithElement","handleLoadedTexture","Sprite","spriteFrame","SpriteFrame","url","loader","load","frame","newFrame","setTexture","openedFishRes","tmparr","_i2","fileList","fileServerUrl","code","fishTableTest","SearchFList","updateGroupToCanteinerAndFishLineToCanvas","groupLen","newD","indexOf","group","list","fishID","currLineItem","searchList","updateFishLineToCanvas","searchLen","line","randomNum","Min","Max","Range","Rand","random","round","jsonstring","cb","resFileList","getAtlasAll","_i3","fileName","split","loadingAtlas","alert","getFishResConfig","keyCode","macro","KEY","f12","f10","ctrl","z","btn_revoke","btn_redo","s","f1","isCreator","showCreatorFishGroupView","f2","f3","f5","f6","isShowBg","f8","escape","space","runGroupFish","f9","h","hideOrShowFish","g","a","json","q","startGroupIndex","atlasList","showCreatFishView","chooseFishingLine","fishLineCanteinerContent","fishGroupCanteiner","chooseFishID","bg","lastItemNode","_i4","settingIcing","getFishToCanvas","tmpGroupId","copyToGroup","copyLineFIshID","optionCopyLinePasterOtherGroup_groupID","Oldheight","cgi","firstKey","dispose","currGItem","childrenCount","addNewLineId","_key","onSlide","isGroupPlay","MOUSE_WHEEL","deskUI","_scrollY","scale","e","ProgressBar","_i5","f","setProgress","_f","isEnterArea","nodeName","pos1","x2","y2","pos2","isR","_i6","_f2","_len","_i7","_f3","_f4","newPoint2","hideOrShowFish2","_newPoint2","str1X","str1Y","str2X","str2Y","_pos","isCreat","_chooseFishingLine","pearssPush","getItem","clickMenu","searchGEditBox","sl","k","searhLineButton","openAbout","closeAbout","creatFishGroupSubmit","optionCopyLine","_batchOperationFishLine","layout","_batchOperationFishLine2","_layout","resGroupId","showTime","frequency","startPX","startPY","endPX","endPY","multiplication_startPX","multiplication_startPY","multiplication_endPX","multiplication_endPY","_i8","_optionCopyLine2","num_str","getOptionCopyLineType","optionCopyLinePasterOtherGroup_time","getCopyLineTimeOffSet","optionCopyLinePasterOtherGroup_fishTypeId","getCopyLinefishTypeId","copyFishLineToLine","optionCopyLineType","optionCopyLineTypeReverseElectionX","optionCopyLineTypeReverseElectionY","_optionCopyLine3","_num_str","optionCopyLinePasterOtherGroup_number","optionCopyLinePasterOtherGroup_fishID","optionCopyLinePasterOtherGroup_type","copyFishLineToGroup","copyLineFIshID_formGroup","optionCopyLinePasterOtherGroup_typ","copyGroupToGroup","_list","sortArr","_len2","_i9","fish","getRunTime","id","sort","b","_i10","_fish","setMoveData","_id","startMove","_i11","_len3","_key2","creatFishData","outJson","ServerOutConfig","ClientOutConfig","EditOutConfig","outPersonaliseJson","saveOutPersonaliseJsonSetting","pop","edgeList","edgeComputingToTime","_i12","p","_i13","resID","resType","outSettingView","lineLayout","groupLayout","_i14","toggle","Toggle","isChecked","line_isOut","_i15","_toggle","_key3","group_isOut","isSave","_i16","newKey","replace","_i17","_toggle2","_key4","_newKey","_i18","_i19","_groupID","_fishLine","_lineID","_line","range","bgContainer","toggleContainer","_i20","clickToggle","newpos","P13","stopAllActions","runAction","fadeTo","menuName","btnName","content","removeAllChildren","filename","filePreFix","sprthis","getAtlasForTexture","getOriginalSize","newFish","addChild","baseFrameRate","frameRate","initResEditorFish","newID","baseFishInfo","runSpeed","_fishTypeId","scheduleOnce","creatFishUnitToDeskUI","lID","initEditorFish","selectFishID","isRef","FContent","_list2","it","_it","lineID2","addFishData","addLine","_i21","_components","_lineID2","FItem","rmID","nouopdate","GContent","groupListData","GItem","searcLen","groupCoint","_key5","groupData","fishGoulpInfomation","newGroupID","tmpAddGroupInfoCgi","desc_editbox","type_editbox","range_editbox","color","HAFEBCAK","getCopuLineNumOffSet","xEditbox_str","yEditbox_str","time_str","clearcopyFishLineArg","formGroupID","toGroupID","copyFishID","timeOffset","rX","rY","offSetX","offSetY","_i22","newFishID","copyItem","setPostReverseWay","startPointChangeEndPoint","setPostOffsexXY","_i23","newLineID","_i24","_i25","_i26","_i27","newPosArray","_i28","_newPosArray","_i29","_i30","_i31","ind","isNoRep","_ind","groupIndex","showResEditView","arg","nodeZIndex","zIndexFish","zIndexBullet","zIndexFreeze","zIndexPartBoom","zIndexAllBoom","zIndexTowerNet","zIndexGoldColumn","zIndexGold","zIndexRotateEffect","zIndexAni","zIndexFunction","zIndexTower","zIndexTip","zIndexAround","zIndexTouch","Boom","Fish15","Fish16","Fish17","Fish18","Fish19","Fish20","Fish22","Fish31","PowGunBullet","dieType0","dieType1","dieType2","dieType3","dieType4","SpecialEffectType","IC","Group","Lightning","CONFIGS","movieClip","movieClipType","Integer","initAtlas","fish_Atlas","initEffect","atlas","payName","max","loop","isHaveZero","isDestroy","callBack","effectIndex","playEffectTime","playEffectSpeed","getSpriteFrame","getSprName","isPlayEffect","initEffectScaleTo","scaleToTime","scaleX","scaleY","delayTime","ceil","MAX_ZINDEX","sequence","scaleTo","callFunc","initEffectScaleAndRotateTo","rotateTime","act","spawn","repeat","rotateBy","initFishMovieClip","fishMoveTimeId","runfrequency","isStart","MaxIndex","mcBaseName","updateFrequency","setFIsh","res","getImg","initSpr","setScale","editScale","setResFIsh","maxW","playFishMovieClip","getSpriteAtlas","frameName","sprFrame","OnDestroy","CONST","extend","whirlpool","fishPath","_bUpdate","timeIndex","isHit","hitTime","delayedPause","initFish","_startTime","serverTime","createTime","abs","_allTime","death","_time","Date","now","setTips","currentEditFish","move","_mousePos","up","fishResInfo","info2","FishName","dieType","isOne","oldAngle","angle","rotateTo","_act","isInFreeze","restype","liveTime","isPlayStartMc","isset","_runTimeALl","allTime","at","startTime","nowTime","getIndexByTime","l_time","currTime","nextTime","isr","timeProgress","lastIndex","getTimeByIndex","c","setAngle","_t","getPos","_x","_y","existTime","one","two","x1","y1","setscale","atan2","PI","oneX","multilevelBezier","getFishData","level","FishRunGap","erxiangshi","cs","bcs","MultiPointBezier","CreateBezierPoints","anchorpoints","pointsAmount","getPOst","v","speed1","speed3","calcBezierLength","pt0","pt1","pt2","ax","ay","bx","by","A","B","C","temp1","temp2","temp3","temp4","timeListTmp","timeList","oldTimeList","actionListTmp","lenTime","getPosFormTime","floor","t2","frist","getArea","tmpTime1","tmpTime2","getPosFormTime_lastIndex","getPosFormTime_currTime","getPosFormTime_nextTime","endList","imgName","atlasPlist","plist","atlasFrame","frames","frameDataObj","rect","GetFrameData","size","GetSizeData","sourceSize","offset","GetOffsetData","rotated","imageUrlStr","error2","newStr","newList_0","slice","newList_1","newList_2","Tools","parseInt","101","fishDesc","deadEvent","shock","effectRotate","priority","chatVoiceType","chatBubble","voiceFile","fixedResource","102","103","104","105","201","202","203","204","205","301","302","303","304","305","306","601","602","603","604","605","606","701","702","703","704","801","802","901","902","903","speed_editbox","runSpeed_editbox","fishID_editbox","groupID_editbox","len2","groupList","closeView"],"mappings":"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J0T,KACI7xB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,qZACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,EACAka,MAAA,EACAC,aAAA,EACAC,SAAA,EACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAxT,UAAA,MAEJ2T,KACI9xB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,qfACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,EACAka,MAAA,EACAC,aAAA,EACAC,SAAA,EACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAxT,UAAA,MAEJ4T,KACI/xB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,qfACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,EACAka,MAAA,EACAC,aAAA,EACAC,SAAA,EACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAxT,UAAA,MAEJ6T,KACIhyB,WAAA,MACAF,SAAA,eACAqxB,SAAA,idACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,EACAka,MAAA,EACAC,aAAA,EACAC,SAAA,EACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAxT,UAAA,MAEJ8T,KACIjyB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,udACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,EACAka,MAAA,EACAC,aAAA,EACAC,SAAA,EACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAxT,UAAA,MAEJ+T,KACIlyB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,61BACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,EACAka,MAAA,EACAC,aAAA,EACAC,SAAA,EACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAxT,UAAA,MAEJgU,KACInyB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,q0BACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,EACAka,MAAA,EACAC,aAAA,EACAC,SAAA,EACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAxT,UAAA,MAEJiU,KACIpyB,WAAA,MACAF,SAAA,eACAqxB,SAAA,q8BACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAxT,UAAA,MAEJkU,KACIryB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,6jCACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAxT,UAAA,MAEJmU,KACItyB,WAAA,MACAF,SAAA,eACAqxB,SAAA,6mBACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,uCACAC,UAAA,EACAC,cAAA,EACAxT,UAAA,MAEJoU,KACIvyB,WAAA,MACAF,SAAA,eACAqxB,SAAA,83BACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,qDACAC,UAAA,EACAC,cAAA,EACAxT,UAAA,MAEJqU,KACIxyB,WAAA,MACAF,SAAA,eACAqxB,SAAA,qrBACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,6EACAC,UAAA,EACAC,cAAA,EACAxT,UAAA,MAEJsU,KACIzyB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,6mBACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,uEACAC,UAAA,EACAC,cAAA,EACAxT,UAAA,MAEJuU,KACI1yB,WAAA,MACAF,SAAA,eACAqxB,SAAA,+qBACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,6CACAC,UAAA,EACAC,cAAA,EACAxT,UAAA,MAEJwU,KACI3yB,WAAA,MACAF,SAAA,eACAqxB,SAAA,qfACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,4BACAC,UAAA,EACAC,cAAA,EACAxT,UAAA,MAEJyU,KACI5yB,WAAA,MACAF,SAAA,gBACAqxB,SAAA,uaACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,sGACAC,UAAA,EACAC,cAAA,EACAxT,UAAA,MAEJ0U,KACI7yB,WAAA,MACAF,SAAA,gBACAqxB,SAAA,iRACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,iCACAC,UAAA,EACAC,cAAA,EACAxT,UAAA,MAEJ2U,KACI9yB,WAAA,MACAF,SAAA,gBACAqxB,SAAA,2TACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,6DACAC,UAAA,EACAC,cAAA,EACAxT,UAAA,MAEJ4U,KACI/yB,WAAA,MACAF,SAAA,gBACAqxB,SAAA,mVACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,uCACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJ6U,KACIhzB,WAAA,MACAF,SAAA,gBACAqxB,SAAA,qQACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,0EACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJ8U,KACIjzB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,mPACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,mDACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJ+U,KACIlzB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,2QACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,uCACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJgV,KACInzB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,iRACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,kCACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJiV,KACIpzB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,mbACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,uEACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJkV,KACIrzB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,2KACApE,MAAA,IACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,6CACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJmV,KACItzB,WAAA,MACAF,SAAA,qBACAqxB,SAAA,mMACApE,MAAA,IACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,wEACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJoV,KACIvzB,WAAA,MACAF,SAAA,eACAqxB,SAAA,yMACApE,MAAA,IACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,mEACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJqV,KACIxzB,WAAA,MACAF,SAAA,2BACAqxB,SAAA,iUACApE,MAAA,IACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,oDACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,MAEJsV,KACIzzB,WAAA,MACAF,SAAA,2BACAqxB,SAAA,+JACApE,MAAA,EACAqE,UAAA,EACAja,WAAA,GACAka,MAAA,EACAC,aAAA,EACAC,SAAA,GACAC,cAAA,EACAC,WAAA,oFACAC,UAAA,GACAC,cAAA,EACAxT,UAAA,0HC9iCRvnB,GAAAkG,OACIC,QAAAnG,GAAAoG,UACAhG,MAAA,WACI,IAAA08B,EAAAz+B,KAAAW,KAAAqJ,eAAA,WAAAA,eAAA,iBACA00B,EAAA1+B,KAAAW,KAAAqJ,eAAA,WAAAA,eAAA,oBACA20B,EAAA3+B,KAAAW,KAAAqJ,eAAA,WAAAA,eAAA,kBACA40B,EAAA5+B,KAAAW,KAAAqJ,eAAA,WAAAA,eAAA,mBACAy0B,EAAA91B,aAAAhH,GAAAiO,SAAAhK,OAAAxG,OAAAkD,MACAq8B,EAAAh2B,aAAAhH,GAAAiO,SAAAhK,OAAAxG,OAAAwL,OACAg0B,EAAAj2B,aAAAhH,GAAAiO,SAAAhK,OAAAxG,OAAAoe,gBAEAihB,EAAAn2B,GAAA,eAAA,SAAAiL,GACInU,OAAAkD,MAAAiI,OAAAgJ,EAAA3N,UAEJ84B,EAAAp2B,GAAA,eAAA,SAAAiL,GACInU,OAAAkqB,SAAA/e,OAAAgJ,EAAA3N,UAEJ+4B,EAAAr2B,GAAA,eAAA,SAAAiL,GACInU,OAAAwL,OAAAL,OAAAgJ,EAAA3N,UAEJg5B,EAAAt2B,GAAA,eAAA,SAAAiL,GACInU,OAAAoe,gBAAAjT,OAAAgJ,EAAA3N,UAEJ,IAAA/B,EAAA,EACAg7B,EAAA,EACA,IAAA,IAAA57B,KAAA7D,OAAAiL,MAAA,CACIxG,IACA,IAAAi7B,EAAA1/B,OAAAiL,MAAApH,GACA,IAAA,IAAA8b,KAAA+f,EAAAn0B,SACIk0B,IAGR7+B,KAAAW,KAAAqJ,eAAA,aAAArB,aAAAhH,GAAAgE,OAAAC,OAAA,6CAAA/B,EACA7D,KAAAW,KAAAqJ,eAAA,aAAArB,aAAAhH,GAAAgE,OAAAC,OAAA,uCAAAi5B,GAEJE,UAAA,WACI/+B,KAAAW,KAAAwJ,QAAA","sourcesContent":["let Bezier = require(\"Bezier\")\r\n\r\nlet BezierData = (function () {\r\n    let _this = {};\r\n\r\n    // ------------------------【私有属性】---------------------------\r\n    // point预制体\r\n    let pointPrefab = null;\r\n    let controlPrefab = null;\r\n\r\n    // 贝塞尔曲线列表\r\n    let bezierCurveLists = [];\r\n    // 曲线点列表\r\n    let bezierCurveData = {\r\n        time: 2,//运行总时长\r\n        length: 0,//曲线总长\r\n        points: [],//曲线点列表\r\n    }\r\n    // // 点 - 曲线 字典\r\n    let pointCurveDict = new Map();\r\n    // 需要删除的目标节点\r\n    let deleteTarget = null;\r\n    // 点计数\r\n    let PointNum = 0;\r\n    // 父节点\r\n    let pointParent = null;\r\n    // 曲线类型\r\n    let currentBezierType = 2;\r\n    // 每段曲线的切割份数\r\n    let pointCount = 100;\r\n\r\n    // 画板分辨率\r\n    let resolution = {\r\n        width: glGame.width,\r\n        height: glGame.height\r\n    }\r\n\r\n\r\n    // ------------------------【公有方法】---------------------------\r\n\r\n\r\n    // 初始化\r\n    _this.init = function (point, control, parent ,startPoint, controlPoint, endPoint,startSpeed,controlSpeed,endSpeed) {\r\n        this.clearAllBezier()\r\n        pointPrefab = point;\r\n        controlPrefab = control;\r\n        pointParent = parent;\r\n        if(startPoint && controlPoint && endPoint){\r\n            initRandCurve(startPoint,controlPoint,endPoint,startSpeed,controlSpeed,endSpeed);\r\n        }\r\n    }\r\n    // 获取分辨率\r\n    _this.getResolution = function (params) {\r\n        return resolution;\r\n    }\r\n    // 设置分辨率\r\n    _this.setResolution = function (width, height) {\r\n        resolution = { width, height };\r\n        return resolution;\r\n    }\r\n\r\n    // 设置曲线切割份数\r\n    _this.setPointCount = function (num) {\r\n        pointCount = num;\r\n    }\r\n    // 设置曲线类型\r\n    _this.setBezierCurveType = function (type) {\r\n        currentBezierType = type;\r\n    }\r\n    // 设置删除的目标节点\r\n    _this.setDeleteTarget = function (node) {\r\n        deleteTarget = node;\r\n    }\r\n    // 添加贝塞尔曲线到列表\r\n    _this.addBezierCurve = function (curve) {\r\n        bezierCurveLists.push(curve);\r\n        console.log(\"bezierCurveLists\", bezierCurveLists);\r\n    }\r\n\r\n    // 获取曲线类型\r\n    _this.getBezierCurveType = function () {\r\n        return currentBezierType;\r\n    }\r\n    // 获取贝塞尔曲线列表\r\n    _this.getBezierCurveLists = function () {\r\n        return bezierCurveLists;\r\n    }\r\n\r\n    // 获取贝塞尔曲线数据\r\n    _this.getBezierCurveData = function () {\r\n        return bezierCurveData;\r\n    }\r\n\r\n\r\n    // 设置贝塞尔曲线运行时长\r\n    _this.setBezierCurveRunTime = function (time) {\r\n        bezierCurveData.time = time;\r\n    }\r\n    // 是否是最后一个曲线\r\n    _this.isLastCurve = function () {\r\n        return bezierCurveLists.length <= 1;\r\n    }\r\n\r\n    // 创建二阶贝塞尔曲线\r\n    _this.createCurve = function (pos,atherData) {\r\n        let controlPos;\r\n        let endPos;\r\n        if(atherData == null){\r\n            controlPos = cc.v2(pos.x - 35,pos.y - 35);\r\n            endPos = pos;\r\n        }else{\r\n            controlPos = atherData.controlPos;\r\n            endPos = atherData.endPos;\r\n        }\r\n        // 把曲线列表最后一个点作为新曲线起点\r\n        let start = bezierCurveLists[bezierCurveLists.length - 1].end;\r\n        let control = createPoint(lcl.Ident.control, controlPos);\r\n        let end = createPoint(lcl.Ident.point, endPos);\r\n        let curve = { start, control, end }\r\n        bezierCurveLists.push(curve);\r\n        this.saveToPointCurveDict(curve);\r\n        console.log(\"创建二阶贝塞尔曲线->\", bezierCurveLists);\r\n    }\r\n    // 创建二阶贝塞尔曲线\r\n    _this.createCurveForImport = function (startPoint,controlPoint,endPoint,startSpeed,controlSpeed,endSpeed) {\r\n        let control = createPoint(lcl.Ident.control, controlPoint);\r\n        let end = createPoint(lcl.Ident.point, endPoint);\r\n        // 把曲线列表最后一个点作为新曲线起点\r\n        let start = bezierCurveLists[bezierCurveLists.length - 1].end;\r\n        start.speed = startSpeed;\r\n        control.speed = controlSpeed;\r\n        end.speed = endSpeed;\r\n        let curve = { start, control, end }\r\n        bezierCurveLists.push(curve);\r\n        this.saveToPointCurveDict(curve);\r\n        console.log(\"创建二阶贝塞尔曲线->\", bezierCurveLists)\r\n    }\r\n\r\n    // 创建三阶贝塞尔曲线\r\n    _this.createThirdOrderCurve = function (pos) {\r\n        // 把曲线列表最后一个点作为新曲线起点\r\n        let start = bezierCurveLists[bezierCurveLists.length - 1].end;\r\n        let control2 = createPoint(lcl.Ident.control, pos);\r\n        //计算偏移点\r\n        let c1pos = cc.v2(200, 200).add(start.position);\r\n        c1pos.x = Math.min(resolution.width/2, c1pos.x);\r\n        c1pos.y = Math.min(resolution.height/2, c1pos.y);\r\n        let control1 = createPoint(lcl.Ident.control, c1pos, false);\r\n        let end = createPoint(lcl.Ident.point, pos);\r\n\r\n        let curve = { start, control1, control2, end }\r\n        bezierCurveLists.push(curve);\r\n        this.saveToPointCurveDict(curve);\r\n        console.warn(\"创建三阶贝塞尔曲线->\", bezierCurveLists)\r\n    }\r\n\r\n    // 存储到曲线字典\r\n    // key - 点, value - 该点所关联的曲线对象Obj, \r\n    // 曲线对象Obj: start字段 为 该点作为起点所在的曲线,  control end类似\r\n    _this.saveToPointCurveDict = function (curve) {\r\n        let obj;\r\n        for (const key in curve) {\r\n            const point = curve[key];\r\n            if (pointCurveDict.has(point)) {\r\n                obj = pointCurveDict.get(point);\r\n            } else {\r\n                obj = {};\r\n            }\r\n            obj[key + \"Curve\"] = curve;\r\n            pointCurveDict.set(point, obj);\r\n        }\r\n        console.log(\"pointCurveDict\", pointCurveDict);\r\n    }\r\n\r\n    // 删除节点\r\n    _this.deletePoint = function () {\r\n        if (pointCurveDict.has(deleteTarget)) {\r\n            let location = getPointLocation(deleteTarget)\r\n            if (location == \"center\") {\r\n                deleteCenterPoint(deleteTarget);\r\n            } else if (location == \"start\") {\r\n                deleteStartPoint(deleteTarget);\r\n            } else if (location == \"end\") {\r\n                deleteEndPoint(deleteTarget);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 保存路径\r\n    _this.saveBezierPath = function () {\r\n        bezierCurveData.length = 0;\r\n        bezierCurveData.points = [];\r\n        // console.warn(\"保存路径bezierLists\", bezierCurveLists);\r\n        for (var i = 0, len = bezierCurveLists.length; i < len; i++) {\r\n            const bezier = bezierCurveLists[i];\r\n            // 创建一个贝塞尔曲线\r\n            // let bezierCurve = new Bezier(bezier.start, bezier.control, bezier.end, 100);\r\n            // console.log(\"consscscds\", Object.values(bezier));\r\n            let bezierCurve = new Bezier(Object.values(bezier), 2);\r\n            // 获取曲线点\r\n            let points = bezierCurve.getPoints(pointCount);\r\n            // 获取曲线长度\r\n            let curveLength = bezierCurve.getCurveLength();\r\n            // 计算路程长度\r\n            bezierCurveData.length += curveLength;\r\n            // 存储曲线点\r\n            bezierCurveData.points.push(...points);\r\n            // console.log(\"points\", points);\r\n        }\r\n        glGame.editor.status(\"保存成功!\");\r\n    }\r\n\r\n    // 清空所有曲线\r\n    _this.clearAllBezier = function () {\r\n        console.log(\"clearAllBezier\");\r\n\r\n        bezierCurveLists = [];\r\n        pointCurveDict.forEach((curve,point) => {\r\n            if (point)\r\n                point.destroy();\r\n        })\r\n        pointCurveDict.clear()\r\n        PointNum = 0;\r\n    }\r\n\r\n    // ------------------------【私有方法】---------------------------\r\n\r\n\r\n    // 创建新节点\r\n    let createPoint = function (ident, pos, isSelect = true) {\r\n        let node;\r\n        let name;\r\n        if (ident == lcl.Ident.point) {\r\n            node = cc.instantiate(pointPrefab);\r\n            node.ident = lcl.Ident.point;\r\n            name = \"point\";\r\n        } else if (ident == lcl.Ident.control) {\r\n            node = cc.instantiate(controlPrefab);\r\n            node.ident = lcl.Ident.control;\r\n            name = \"control\";\r\n            if (isSelect) lcl.NodeEvents.setMoveTargetNode(node);\r\n        }\r\n        let count = PointNum++;\r\n        node.name = name + \"_\" + count;\r\n        node.parent = pointParent;\r\n        node.setPosition(pos);\r\n        lcl.NodeEvents.addPointDeleteEvents(node);\r\n        lcl.NodeEvents.addDragEvents(node);\r\n        // 创建编号\r\n        let num = new cc.Node();\r\n        num.parent = node;\r\n        num.y = 20;\r\n        num.addComponent(cc.Label).string = count\r\n        return node\r\n    }\r\n\r\n    let getRandPos = function () {\r\n        let randX = Math.random() * resolution.width - resolution.width * 0.5;\r\n        let randY = Math.random() * resolution.height - resolution.height * 0.5;\r\n        return cc.v2(randX, randY)\r\n    }\r\n    // 初始化一个随机曲线\r\n    let initRandCurve = function (startPoint,controlPoint,endPoint,startSpeed,controlSpeed,endSpeed) {\r\n        let start = createPoint(lcl.Ident.point, startPoint);\r\n        let control = createPoint(lcl.Ident.control, controlPoint);\r\n        let end = createPoint(lcl.Ident.point, endPoint);\r\n        start.speed = startSpeed;\r\n        control.speed = controlSpeed;\r\n        end.speed = endSpeed;\r\n        lcl.NodeEvents.setMoveTargetNode(null);\r\n        let bezier = { start, control, end }\r\n        BezierData.addBezierCurve(bezier);\r\n        BezierData.saveToPointCurveDict(bezier);\r\n    }\r\n\r\n    // 判断该点是起点,终点或者中间点\r\n    let getPointLocation = function (node) {\r\n        let curveObj = pointCurveDict.get(node);\r\n        if (curveObj) {\r\n            if (curveObj[\"startCurve\"] && curveObj[\"endCurve\"]) {\r\n                return \"center\";\r\n            }\r\n            if (curveObj[\"startCurve\"]) {\r\n                return \"start\";\r\n            }\r\n            if (curveObj[\"endCurve\"]) {\r\n                return \"end\";\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // 删除的是中间点\r\n    let deleteCenterPoint = function (point) {\r\n        console.warn(\"删除的是中间点\");\r\n\r\n        if (pointCurveDict.has(point)) {\r\n            //中间点有前后两个曲线,删除该点就需要合并两个曲线（这里的方案是保留前面的曲线，删除后面的曲线）\r\n            let CurveObj = pointCurveDict.get(point);\r\n            let prevCurve = CurveObj.endCurve;\r\n            let nextCurve = CurveObj.startCurve;\r\n            // 把前一个曲线的终点移动到后一个曲线的终点上\r\n            prevCurve.end = nextCurve.end;\r\n            // 重新赋值该节点下的曲线对象的end曲线\r\n            let prevEndCurveObj = pointCurveDict.get(prevCurve.end);\r\n            prevEndCurveObj.endCurve = prevCurve;\r\n            pointCurveDict.delete(point);\r\n            // 删除后曲线相关的信息\r\n            for (const key in nextCurve) {\r\n                if (key == \"end\") continue;\r\n                const _point = nextCurve[key];\r\n                pointCurveDict.delete(_point)\r\n                _point.destroy();\r\n            }\r\n            // pointCurveDict.delete(nextCurve.start)\r\n            // pointCurveDict.delete(nextCurve.control)\r\n            // nextCurve.start.destroy();\r\n            // nextCurve.control.destroy();\r\n            deleteCurveFromBezierLists(nextCurve);\r\n        }\r\n    }\r\n    // 删除的是起点\r\n    let deleteStartPoint = function (point) {\r\n        console.warn(\"删除的是起点\");\r\n\r\n        if (pointCurveDict.has(point)) {\r\n            //找到该点关联的曲线\r\n            let CurveObj = pointCurveDict.get(point);\r\n            let startCurve = CurveObj.startCurve;\r\n            CurveObj.endCurve = null;\r\n            // 删除曲线及其相关的点\r\n            let endCurveObj = pointCurveDict.get(startCurve.end);\r\n            endCurveObj.endCurve = null;\r\n            for (const key in startCurve) {\r\n                if (key == \"end\") continue;\r\n                const _point = startCurve[key];\r\n                pointCurveDict.delete(_point)\r\n                _point.destroy();\r\n            }\r\n            deleteCurveFromBezierLists(startCurve);\r\n        }\r\n    }\r\n    // 删除的是终点\r\n    let deleteEndPoint = function (point) {\r\n        console.log(\"删除的是终点\");\r\n        if (pointCurveDict.has(point)) {\r\n            PointNum -= 2;\r\n            let CurveObj = pointCurveDict.get(point);\r\n            let endCurve = CurveObj.endCurve;\r\n            CurveObj.startCurve = null;\r\n            // 删除曲线及其相关的点\r\n            let startCurveObj = pointCurveDict.get(endCurve.start);\r\n            startCurveObj.startCurve = null;\r\n            for (const key in endCurve) {\r\n                if (key == \"start\") continue;\r\n                const _point = endCurve[key];\r\n                pointCurveDict.delete(_point)\r\n                _point.destroy();\r\n            }\r\n            // pointCurveDict.delete(endCurve.control)\r\n            // endCurve.control.destroy();\r\n            deleteCurveFromBezierLists(endCurve);\r\n        }\r\n    }\r\n\r\n    //从曲线列表删除曲线\r\n    let deleteCurveFromBezierLists = function (curve) {\r\n        for (var i = 0, len = bezierCurveLists.length; i < len; i++) {\r\n            const _curve = bezierCurveLists[i];\r\n            if (_curve === curve) {\r\n                bezierCurveLists.splice(i, 1);\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    return _this;\r\n}());\r\n\r\nmodule.exports = BezierData;\r\n","const Bezier = function (pointArr, allTime = 2) {\r\n\r\n    let _this = {}\r\n    // 曲线点集合,曲线总长,上一个点,当前时间\r\n    let _pointLists, totalLength, prevPos, currentRunTime;\r\n    // 运行时间\r\n    let _runTime = allTime;\r\n    let _pointArr = pointArr;\r\n    // 重置数据\r\n    let resetData = function () {\r\n        // 点集合\r\n        _pointLists = [];\r\n        // 线段总长度\r\n        totalLength = currentRunTime = 0;\r\n        // 初始位置\r\n        prevPos = {\r\n            x: pointArr[0].x,\r\n            y: pointArr[0].y,\r\n            length: 0,\r\n        }\r\n    }\r\n\r\n    //阶乘\r\n    function factorial(i) {\r\n        let n = 1;\r\n        for (let j = 1; j <= i; j++)\r\n            n *= j;\r\n        return n;\r\n    }\r\n    // ------------------------【核心代码】---------------------------\r\n    let ComputeBezier = function (dt, runTime) {\r\n        // 把时间从 [0,runTime] 映射到 [0,1] 之间\r\n        let t = currentRunTime / runTime;\r\n\r\n        var x = 0, y = 0;\r\n        //控制点数组\r\n        var n = _pointArr.length - 1;\r\n\r\n        _pointArr.forEach((item, index) => {\r\n            if (!index) {\r\n                x += item.x * Math.pow((1 - t), n - index) * Math.pow(t, index)\r\n                y += item.y * Math.pow((1 - t), n - index) * Math.pow(t, index)\r\n            } else {\r\n                //factorial为阶乘函数\r\n                x += factorial(n) / factorial(index) / factorial(n - index) * item.x * Math.pow((1 - t), n - index) * Math.pow(t, index)\r\n                y += factorial(n) / factorial(index) / factorial(n - index) * item.y * Math.pow((1 - t), n - index) * Math.pow(t, index)\r\n            }\r\n        })\r\n\r\n        //  // 二阶贝塞尔曲线公式 (t => [0,1]) \r\n        //  var x = Math.pow(1 - t, 2) * _startPos.x\r\n        //  + 2 * t * (1 - t) * _controlPos.x\r\n        //  + Math.pow(t, 2) * _endPos.x;\r\n         \r\n        //  var y = Math.pow(1 - t, 2) * _startPos.y\r\n        //  + 2 * t * (1 - t) * _controlPos.y\r\n        //  + Math.pow(t, 2) * _endPos.y;\r\n\r\n        // console.log(`x:${x},y:${y}`);\r\n        // 计算两点距离\r\n        let length = Math.sqrt(Math.pow(prevPos.x - x, 2) + Math.pow(prevPos.y - y, 2));\r\n        let v2 = { x, y, length };\r\n        // 存储当前节点\r\n        _pointLists.push(v2);\r\n        prevPos = v2;\r\n        // 累计长度\r\n        totalLength += length;\r\n        // 累计时间\r\n        currentRunTime += dt;\r\n\r\n    }\r\n\r\n    // 切割贝塞尔曲线\r\n    _this.getPoints = function (count = 200) {\r\n        resetData();\r\n        // 分割时间\r\n        let dt = _runTime / count;\r\n        // 开始分割曲线\r\n        for (var i = 0, len = count + 1; i < len; i++) {\r\n            ComputeBezier(dt, _runTime);\r\n        }\r\n        return _pointLists\r\n    }\r\n\r\n    _this.getCurveLength = function () {\r\n        return totalLength;\r\n    }\r\n\r\n    return _this;\r\n}\r\n\r\nmodule.exports = Bezier;\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        isSelf: {\r\n            default: false,\r\n            displayName: \"拖自己or父类\",\r\n            tooltip: \"拖动自己 true 父类 false\",\r\n            type: cc.boolean,\r\n        },\r\n        isEnterCtrl: {\r\n            default: false,\r\n            displayName: \"是否要按下Ctrl\",\r\n            tooltip: \" true 需要 false不需要\",\r\n            type: cc.boolean,\r\n        },\r\n    },\r\n    start () {\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (event) => {\r\n            this.opacity = 255;\r\n            if(this.node.parent.getComponent(cc.Widget)){\r\n                this.node.parent.getComponent(cc.Widget).enabled = false;\r\n            }\r\n            var delta = event.touch.getDelta();\r\n            if(this.isEnterCtrl){\r\n                if(!glGame.Ctrl){\r\n                    return;\r\n                }\r\n            }\r\n            if(this.isSelf){\r\n                this.node.x += delta.x;\r\n                this.node.y += delta.y;\r\n            }else{\r\n                this.node.parent.x += delta.x;\r\n                this.node.parent.y += delta.y;\r\n            }\r\n        }, this.node);\r\n    },\r\n});\r\n","module.exports = {\r\n    Ident: {\r\n        point: 0,\r\n        control: 1,\r\n        window: 2\r\n    },\r\n    // 曲线类型\r\n    BezierCurveType:{\r\n        SecondOrder: 2,//二阶\r\n        ThirdOrder:3,//三阶\r\n    }\r\n};\r\n","var EventListener = (function () {\r\n    let _this = {};\r\n    var handlers = {};\r\n    // 订阅事件\r\n    _this.on = function (eventType, method) {\r\n        handlers[eventType] = handlers[eventType] || []\r\n        handlers[eventType].push(method);\r\n    };\r\n\r\n    // 触发事件(发布事件)\r\n    _this.emit = function (eventType, data) {\r\n        if (!handlers[eventType]) {\r\n            return\r\n        }\r\n        for (var i = 0, len = handlers[eventType].length; i < len; i++) {\r\n            handlers[eventType][i].call(null, data)\r\n        }\r\n    };\r\n\r\n    // 删除订阅事件\r\n    _this.off = function (eventType, method) {\r\n        let handler = handlers[eventType];\r\n        for (var i = 0, len = handler.length; i < len; i++) {\r\n            if (handler[i] === method) {\r\n                handler.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    return _this;\r\n\r\n}());\r\n\r\nmodule.exports = EventListener;\r\n","//鱼线item\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        type : 0,// 1 组 item ， 2资源item ，3 线\r\n    },\r\n    start () {\r\n        let lab_desc_id = glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout\").getChildByName(\"lab_desc_id\");\r\n        let lab_id = glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout\").getChildByName(\"lab_id\");\r\n        this.node.on(cc.Node.EventType.MOUSE_ENTER, (event) => {\r\n            if(this.type == 1){\r\n                this.node.getChildByName(\"moveHeight\").active = true;\r\n                glGame.editor.node.getChildByName(\"tips\").active = true;\r\n                lab_id.active  = true;\r\n                let info = glGame.FList[this.node.groupID];\r\n                lab_desc_id.getComponent(cc.Label).string = \"鱼组ID\";\r\n                lab_id.getComponent(cc.Label).string = Number(this.node.groupID)+\"\";\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_d\").getComponent(cc.Label).string = info ? info.desc+\"\" : \"\";\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_d\").active = true;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_desc\").active = true;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"bg\").height = 150;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"bg\").width = 300;\r\n            }\r\n            if(this.type == 3){\r\n                this.node.getChildByName(\"moveHeight\").active = true;\r\n                glGame.editor.node.getChildByName(\"tips\").active = true;\r\n                lab_id.active  = true;\r\n                let info = glGame.FList[glGame.currGIndex].fishLine[Number(this.node.lineID)];\r\n                lab_id.getComponent(cc.Label).string = Number(this.node.lineID)+\"\";\r\n                let fishName = \"找不到配置 \"+info.lineID;\r\n                if(info != null && glGame.fishTable[Number(info.fishTypeId)]){\r\n                    fishName = glGame.fishTable[Number(info.fishTypeId)].fishName;\r\n                }else{\r\n                    if(glGame.fishTable[this.node.fishTypeId] != null){\r\n                        fishName = glGame.fishTable[this.node.fishTypeId].fishName;\r\n                    }else{\r\n                        cc.error(\" 找不到配置,请检查鱼表配置 info : \",info,\"     fishTable     \",glGame.fishTable);\r\n                    }\r\n                }\r\n                lab_desc_id.getComponent(cc.Label).string = fishName+\"\";\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_d\").getComponent(cc.Label).string = (info ? info.desc+\"\" : \"\")+\"\";\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_d\").active = true;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_desc\").active = true;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"bg\").height = 150;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"bg\").width = 300;\r\n            }\r\n        }, this.node);\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, (event) => {\r\n            let pos  = glGame.editor.node.convertToNodeSpaceAR(event.getLocation());\r\n            if(this.type == 1){\r\n                pos.x = pos.x+glGame.editor.node.getChildByName(\"tips\").width + 10;\r\n                glGame.editor.node.getChildByName(\"tips\").setPosition(pos);\r\n            }\r\n            if(this.type == 3){\r\n                pos.x -= 10;\r\n                glGame.editor.node.getChildByName(\"tips\").setPosition(pos);\r\n            }\r\n        }, this.node);\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_LEAVE, (event) => {\r\n            this.node.getChildByName(\"moveHeight\").active = false;\r\n            glGame.editor.node.getChildByName(\"tips\").active = false;\r\n        }, this.node);\r\n    },\r\n});\r\n","let NodeEvents = (function () {\r\n    let _this = {};\r\n    //移动目标节点\r\n    let moveTargetNode = null;\r\n    let isMouseDown = null;\r\n    let isOperate = true;\r\n\r\n    // 屏幕坐标转换到节点坐标\r\n    function convertToNodeSpace(event) {\r\n        return glGame.editor.node.getChildByName(\"deskUI\").convertToNodeSpaceAR(event.getLocation());\r\n        // return cc.find(\"Canvas\").convertToNodeSpaceAR(event.getLocation());\r\n    }\r\n\r\n    // 是否能删除\r\n    function isDelete(node) {\r\n        return node.ident == lcl.Ident.point;\r\n    }\r\n    // 是否在绘制区域\r\n    function atDrawingArea(pos) {\r\n        let resolution = lcl.BezierData.getResolution();\r\n        let halfW = resolution.width / 2;\r\n        let halfH = resolution.height / 2;\r\n\r\n        return pos.x > -halfW && pos.x < halfW &&\r\n            pos.y > -halfH && pos.y < halfH\r\n    }\r\n\r\n    // 是否能拖拽\r\n    function isDragMove(mousePos, target) {\r\n        let flag = false;\r\n        switch (target.ident) {\r\n            case lcl.Ident.point:\r\n            case lcl.Ident.control:\r\n                flag = atDrawingArea(mousePos)\r\n                break;\r\n            case lcl.Ident.window:\r\n                flag = true;\r\n\r\n        }\r\n        // console.log(target.name, target.ident);\r\n        return flag;\r\n    }\r\n\r\n    _this.setMoveTargetNode = function (target) {\r\n        moveTargetNode = target;\r\n    }\r\n    _this.setOperateStatus = function (bol) {\r\n        isOperate = bol;\r\n    }\r\n    // 添加拖拽事件\r\n    _this.addDragEvents = function (node, target = node) {\r\n        // 鼠标按下\r\n        node.on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            if(glGame.Ctrl){\r\n                return\r\n            }\r\n            event.stopPropagation();\r\n            // 鼠标右键\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_LEFT /**&& _this.isOperate()**/) {\r\n                moveTargetNode = target;\r\n                isMouseDown = true;\r\n            }\r\n        });\r\n        let move = (event) => {\r\n            //鼠标按下并且有指定目标节点\r\n            if (isMouseDown && moveTargetNode) {\r\n                target.opacity = 100;\r\n                cc.game.canvas.style.cursor = \"all-scroll\";\r\n                //把屏幕坐标转换到节点坐标下\r\n                let mousePos = convertToNodeSpace(event);\r\n                if (isDragMove(mousePos, moveTargetNode))\r\n                    moveTargetNode.setPosition(mousePos);\r\n            }else{\r\n                cc.game.canvas.style.cursor = \"auto\";\r\n            }\r\n        }\r\n        // 鼠标移动\r\n        // node.on(cc.Node.EventType.MOUSE_MOVE, move);\r\n        node.parent.on(cc.Node.EventType.MOUSE_MOVE, move);\r\n        // 鼠标离开\r\n        node.on(cc.Node.EventType.MOUSE_LEAVE, (event) => {\r\n            target.opacity = 255;\r\n            cc.game.canvas.style.cursor = \"auto\";\r\n           \r\n        });\r\n        let up = (event) => {\r\n            isMouseDown = false;\r\n            moveTargetNode = null;\r\n            cc.game.canvas.style.cursor = \"auto\";\r\n        }\r\n        // 鼠标抬起\r\n        //node.parent.on(cc.Node.EventType.MOUSE_UP, up);\r\n        node.on(cc.Node.EventType.MOUSE_UP, up);\r\n    }\r\n\r\n    // 添加节点的删除事件\r\n    _this.addPointDeleteEvents = function (node) {\r\n        // 鼠标按下\r\n        node.on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            if(glGame.Ctrl){\r\n                return\r\n            }\r\n            // 鼠标右键\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_RIGHT) {\r\n                // if (isDelete(event.target)) {\r\n                    event.isShowPointMenuDeleteAndTime = isDelete(event.target);\r\n                    event.target.pos = convertToNodeSpace(event);\r\n                    // this.deleteTarget = event.target;\r\n                    lcl.BezierData.setDeleteTarget(event.target);\r\n                    lcl.Events.emit(\"showPointMenuView\", event);\r\n                // }\r\n                return\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // 添加Canvas节点事件\r\n    _this.addCanvasTouchEvents = function (canvasNode = cc.find(\"Canvas\")) {\r\n        let target;\r\n        // 鼠标按下\r\n        canvasNode.on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            glGame.currDownEvent = event;\r\n            if(glGame.Ctrl){\r\n                return\r\n            }\r\n            if(!glGame.currentFish){\r\n                glGame.editor.status(\"请创建一条鱼\",glGame.Color.RED);\r\n                return;\r\n            }\r\n\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_RIGHT) {\r\n                event.stopPropagation();\r\n                let leftClickMenu = glGame.editor.node.getChildByName(\"leftClickMenu\");\r\n                // leftClickMenu.setPosition(event.getLocation());\r\n                leftClickMenu.setPosition(convertToNodeSpace(event));\r\n                leftClickMenu.active = true;\r\n            }\r\n            // 鼠标左键\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_LEFT) {\r\n                event.stopPropagation();\r\n                let leftClickMenu = glGame.editor.node.getChildByName(\"leftClickMenu\");\r\n                leftClickMenu.active = false;\r\n                return;\r\n\r\n            }\r\n        });\r\n        // 添加node\r\n        canvasNode.on(\"addNewPoint\", (event) => {\r\n            event.stopPropagation();\r\n            if(event.bzierData == null){\r\n                target = event.target;\r\n                //创建坐标点,需要先把屏幕坐标转换到节点坐标下\r\n                let mousePos = convertToNodeSpace(event);\r\n                if (!atDrawingArea(mousePos))\r\n                    return\r\n                if (!isOperate)\r\n                    lcl.Events.emit(\"hidePointMenuView\");\r\n\r\n                // 二阶\r\n                if (lcl.BezierData.getBezierCurveType() == lcl.BezierCurveType.SecondOrder) {\r\n                    lcl.BezierData.createCurve(mousePos);\r\n                    cc.warn(\">>> 二阶 ----- \")\r\n                }\r\n                glGame.isAdd = true;\r\n                // 三阶\r\n                if (lcl.BezierData.getBezierCurveType() == lcl.BezierCurveType.ThirdOrder) {\r\n                    lcl.BezierData.createThirdOrderCurve(mousePos);\r\n                    cc.warn(\">>> 三阶 ----- \")\r\n                }\r\n                isMouseDown = true;\r\n                // glGame.drawBezier.saveDataToFishPointList();//保存数据 到 FishPointList\r\n                // cc.warn(\">>>222 加点 结束，保存！\")\r\n            }else{\r\n                if (!isOperate)\r\n                    lcl.Events.emit(\"hidePointMenuView\");\r\n\r\n                glGame.isAdd = true;\r\n                // 二阶\r\n                if (lcl.BezierData.getBezierCurveType() == lcl.BezierCurveType.SecondOrder) {\r\n                    lcl.BezierData.createCurve(null,event.bzierData);\r\n                }\r\n                isMouseDown = true;\r\n            }\r\n\r\n        });\r\n        // 鼠标移动\r\n        canvasNode.on(cc.Node.EventType.MOUSE_MOVE, (event) => {\r\n\r\n            if(!glGame.currentFish){\r\n                glGame.editor.status(\"请创建一条鱼\",glGame.Color.RED);\r\n                return;\r\n            }\r\n            target = event.target;\r\n            //创建坐标点,需要先把屏幕坐标转换到节点坐标下\r\n            let mousePos = convertToNodeSpace(event);\r\n            lcl.Events.emit(\"setMouseLocation\", mousePos);\r\n\r\n            //鼠标按下并且有指定目标节点\r\n            if (isMouseDown && moveTargetNode && isDragMove(mousePos, moveTargetNode)) {\r\n                moveTargetNode.setPosition(mousePos);\r\n            }\r\n        });\r\n        // 鼠标抬起\r\n        canvasNode.on(cc.Node.EventType.MOUSE_UP, (event) => {\r\n            if(!glGame.currentFish){\r\n                glGame.editor.status(\"请创建一条鱼\",glGame.Color.RED);\r\n                return;\r\n            }\r\n            target = event.target;\r\n            isMouseDown = false;\r\n            moveTargetNode = null;\r\n            // glGame.drawBezier.saveDataToFishPointList()//保存数据 到 FishPointList\r\n        });\r\n    }\r\n    return _this;\r\n}());\r\n\r\nmodule.exports = NodeEvents;\r\n","//系统拖拽类\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n    onLoad(){\r\n        this.dobbClick = 0;\r\n        this.dobbClickTime = 0;\r\n    },\r\n    start () {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, (event) => {\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"movewindow_start\");\r\n        }, this.node);\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, (event) => {\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"movewindow_end\");\r\n        }, this.node);\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"movewindow_end\");\r\n        }, this.node);\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (event) => {\r\n            var delta = event.touch.getDelta();\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"movewindow_move\",{x:delta.x,y:delta.y});\r\n        }, this.node);\r\n        this.node.on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            this.dobbClickTime = 0.1;\r\n            this.dobbClick ++;\r\n        }, this.node);\r\n        this.node.on(cc.Node.EventType.MOUSE_UP, (event) => {\r\n            this.dobbClick -= 10;\r\n        }, this.node);\r\n    },\r\n    update(dt){\r\n        if(this.dobbClickTime > 0){\r\n            this.dobbClickTime += dt;\r\n\r\n            if(this.dobbClickTime < 0.35 && this.dobbClick == -18){\r\n                this.dobbClick = 0;\r\n                this.dobbClickTime = 0;\r\n                if(window.ipcRenderer)window.ipcRenderer.send(\"maxWindow\");\r\n            }\r\n\r\n            if(this.dobbClickTime > 0.6){\r\n                this.dobbClickTime = 0;\r\n                this.dobbClick = 0;\r\n            }\r\n        }\r\n    }\r\n});\r\n","window.lcl = {};\r\nwindow.lcl.Bezier = require('./Bezier');\r\nwindow.lcl.BezierData = require('./BezierData');\r\nwindow.lcl.NodeEvents = require('./NodeEvents');\r\nwindow.lcl.Events = require('./EventListener');\r\nwindow.lcl.Ident = require('./Enum').Ident;\r\nwindow.lcl.BezierCurveType = require('./Enum').BezierCurveType;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    // editor: {\r\n    //     executeInEditMode: true,\r\n    // },\r\n\r\n    properties: {\r\n        graphicsNode: cc.Node,\r\n        box: cc.Node,\r\n        point: cc.Prefab,//坐标点\r\n        control: cc.Prefab,//控制点\r\n        bezierColor: new cc.Color(255, 0, 0),// 贝塞尔曲线颜色\r\n        lineColor: new cc.Color(0, 255, 255),//控制线段\r\n        infoWindow: cc.Node,\r\n        paper: cc.Node,\r\n        msg: cc.Node,\r\n        timeInfo: cc.Label,//实时运行时间\r\n        mouseLocation: cc.Label,//鼠标坐标\r\n        pointMenu: cc.Node,//点 右键菜单\r\n\r\n    },\r\n\r\n    onLoad() {\r\n        glGame.drawBezier = this;\r\n        this.currPoint = null;\r\n    },\r\n    clearCurrFishLine(){\r\n        lcl.BezierData.clearAllBezier();\r\n        lcl.NodeEvents.setMoveTargetNode(null);\r\n    },\r\n    startDraw(){\r\n        glGame.drawStart = true;\r\n        this.init();\r\n        lcl.Events.on(\"setMouseLocation\", this.setMouseLocation.bind(this));\r\n        lcl.Events.on(\"showPointMenuView\", this.showPointMenuView.bind(this));\r\n        lcl.Events.on(\"hidePointMenuView\", this.hidePointMenuView.bind(this));\r\n\r\n        this.node.parent.on(cc.Node.EventType.MOUSE_UP, (event)=>{\r\n            // cc.error(\"保存坐标点>>>>> 1\");\r\n            lcl.BezierData.saveBezierPath();//保存坐标点\r\n            glGame.drawBezier.saveDataToFishPointList()//保存数据 到 FishPointList\r\n        });\r\n    },\r\n\r\n    // 初始化\r\n    init() {\r\n        // 提示框\r\n        this.infoWindow.zIndex = 10;\r\n        this.notice = this.infoWindow.getChildByName(\"notice\").getComponent(cc.Label);\r\n        this.fileInputBox = this.infoWindow.getChildByName(\"Input\").getChildByName(\"fileEditBox\").getComponent(cc.EditBox);\r\n        // 控制器面板\r\n        let controlPanel = this.node.getChildByName(\"controlPanel\");\r\n        this.moveBtn = controlPanel.getChildByName(\"moveBtn\");\r\n        this.smoothnessInputBox = controlPanel.getChildByName(\"smoothnessInput\").getChildByName(\"EditBox\").getComponent(cc.EditBox);\r\n        this.runTimeInputBox = controlPanel.getChildByName(\"runTimeInput\").getChildByName(\"EditBox\").getComponent(cc.EditBox);\r\n\r\n        this.resolutionWidthInputBox = controlPanel.getChildByName(\"resolution\").getChildByName(\"width\").getComponent(cc.EditBox);\r\n        this.resolutionHeightInputBox = controlPanel.getChildByName(\"resolution\").getChildByName(\"height\").getComponent(cc.EditBox);\r\n\r\n        // 初始化Graphics\r\n        this.initGraphics();\r\n        this.initNodeEvents();\r\n        this.hideInfoWindow();\r\n        this.addPointMenuBtnEvents();\r\n        this.initResolution();\r\n        // 初始化贝塞尔曲线数据\r\n        if(!glGame.isImport){\r\n            lcl.BezierData.init(this.point, this.control, this.node, glGame.startPoint, glGame.controlPoint, glGame.endPoint);\r\n        }\r\n        // lcl.BezierData.setBezierCurveRunTime(Number(this.runTimeInputBox.string));\r\n        // lcl.BezierData.saveBezierPath();\r\n    },\r\n    //从FishPointList 初始化贝塞尔数据 = glGame.FList[item]\r\n    initDataFormFishPointList(fishData){\r\n        if(!glGame.drawStart){\r\n            this.startDraw();\r\n        }\r\n        lcl.BezierData.clearAllBezier();\r\n        lcl.NodeEvents.setMoveTargetNode(null);\r\n        for (let i = 0; i < fishData.posArray.length; i++) {\r\n            let startPoint   = cc.v2(fishData.posArray[i].x    ,fishData.posArray[i].y);\r\n            let startSpeed   = fishData.moveList[i];\r\n            if(fishData.posArray[i + 1] == undefined || fishData.posArray[i + 2] == undefined){\r\n                continue;\r\n            }\r\n            let controlPoint = cc.v2(fishData.posArray[i + 1].x,fishData.posArray[i + 1].y);\r\n            let endPoint     = cc.v2(fishData.posArray[i + 2].x,fishData.posArray[i + 2].y);\r\n            let controlSpeed   = fishData.moveList[i + 1];\r\n            let endSpeed   = fishData.moveList[i + 2];\r\n            i++;\r\n            i++;\r\n            if(i<3){\r\n                glGame.startPoint   = startPoint;\r\n                glGame.controlPoint = controlPoint;\r\n                glGame.endPoint     = endPoint;\r\n                lcl.BezierData.init(this.point, this.control, this.node, fishData.posArray[0], fishData.posArray[1], fishData.posArray[2],startSpeed,controlSpeed,endSpeed);\r\n            }else{\r\n                lcl.BezierData.createCurveForImport(startPoint,controlPoint,endPoint,startSpeed,controlSpeed,endSpeed);\r\n            }\r\n        }\r\n    },\r\n    //从缓存 初始化数据\r\n    initDataToFishPointList(){\r\n        // glGame.FListJson = JSON.parse(cc.sys.localStorage.getItem('glGame.FList'));\r\n        // glGame.currGIndexJson = JSON.parse(cc.sys.localStorage.getItem('glGame.currGIndex'));\r\n        // if(glGame.FListJson){\r\n        //     glGame.editor.alert(\"是否读取上次的数据？\",(a)=>{\r\n        //         if(a){\r\n        //             glGame.FList = glGame.FListJson;\r\n        //             glGame.currGIndex = glGame.currGIndexJson;\r\n        //             glGame.isImport = true;\r\n        //             let list = glGame.FList[glGame.currGIndex].fishLine;\r\n        //             if(list){\r\n        //                 for (let fishID in list){\r\n        //                     glGame.currLineItem = list[fishID];\r\n        //                     glGame.editor.updateGroupToCanteinerAndFishLineToCanvas();\r\n        //                     break;\r\n        //                 }\r\n        //             }\r\n        //             glGame.editor.status(\"读取成功\");\r\n        //         }else{\r\n        //             glGame.FListJson = null;\r\n        //             glGame.currGIndexJson = null;\r\n        //         }\r\n        //     });\r\n        // }\r\n    },\r\n    //保存数据 到 FishPointList\r\n    saveDataToFishPointList(){\r\n        this.path = lcl.BezierData.getBezierCurveLists();\r\n        if(glGame.currentFish == undefined || glGame.currentFish.lineID == undefined){\r\n            return;\r\n        }\r\n        let lineID = glGame.currentFish.lineID;\r\n        if(lineID == undefined || this.path == undefined || this.path.length == 0){\r\n            return;\r\n        }\r\n\r\n        if(glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].posArray.length > 3){\r\n            if(glGame.RestoreFList == null){\r\n                glGame.RestoreFList = [];\r\n                glGame.RestoreIndex = 0;\r\n            }\r\n            glGame.RestoreFList.push(JSON.parse(JSON.stringify(glGame.FList)));\r\n            while(glGame.RestoreFList.length > 10){\r\n                glGame.RestoreFList.shift();\r\n            }\r\n            if(glGame.isAdd == true){\r\n                glGame.RestoreIndex++;\r\n                cc.error(\">> 添加数据 \"+glGame.RestoreIndex)\r\n            }else{\r\n                glGame.RestoreIndex--;\r\n                cc.error(\">> 删除数据 \"+glGame.RestoreIndex)\r\n            }\r\n        }\r\n\r\n\r\n        let rate   = glGame.FList[glGame.currGIndex].fishLine[lineID].rate;//配置表速度\r\n        let d      = glGame.getPosArrayAndmoveList(this.path,lineID,rate);\r\n        let posArray = d.posArray;\r\n        let moveList = d.moveList;\r\n        glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].runTime = glGame.getMaxIndexByTime(posArray, moveList);\r\n        glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].posArray = posArray;\r\n        glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].moveList = moveList;\r\n        cc.sys.localStorage.setItem('glGame.FList', JSON.stringify(glGame.FList));\r\n        cc.sys.localStorage.setItem('glGame.currGIndex', JSON.stringify(glGame.currGIndex));\r\n    },\r\n    getPostFormPath(i){\r\n        let startPos    = {x: this.path[i][\"start\"].x,      y:this.path[i][\"start\"].y};\r\n        let controlPos  = {x: this.path[i][\"control\"].x,    y:this.path[i][\"control\"].y};\r\n        let endPos      = {x: this.path[i][\"end\"].x,        y:this.path[i][\"end\"].y};\r\n        return {startPos:startPos,controlPos:controlPos,endPos:endPos}\r\n    },\r\n\r\n    update(dt) {\r\n        if(!glGame.drawStart)return;\r\n        lcl.NodeEvents.setOperateStatus(!this.pointMenu.active);\r\n        this.drawBezierAll();\r\n        if (this.isStartRun) {\r\n            this.setCountTimeLabel(dt);\r\n        }\r\n    },\r\n\r\n    // 初始化绘制区域\r\n    initResolution(){\r\n        this.resolution = lcl.BezierData.getResolution();\r\n        this.resolutionWidthInputBox.string = this.resolution.width;\r\n        this.resolutionHeightInputBox.string = this.resolution.height;\r\n        this.setPaperSize();\r\n    },\r\n    // 初始化Graphics\r\n    initGraphics() {\r\n        this.ctx = this.graphicsNode.getComponent(cc.Graphics);\r\n        this.ctx.lineWidth = 4;\r\n    },\r\n\r\n    \r\n    initNodeEvents() {\r\n        glGame.paintingArea = this.node.getChildByName(\"PaintingArea\");\r\n        lcl.NodeEvents.addCanvasTouchEvents(glGame.paintingArea);\r\n    },\r\n\r\n    // 绘制路线\r\n    drawBezierAll() {\r\n        this.ctx.clear();\r\n        let bezierLists = lcl.BezierData.getBezierCurveLists();\r\n        for (var i = 0, len = bezierLists.length; i < len; i++) {\r\n            const curve = bezierLists[i];\r\n            let n = Object.keys(curve).length;\r\n            // 绘制二阶贝塞尔\r\n            if (n == 3) {\r\n                this.drawBezier(curve.start.position, curve.control.position, curve.end.position);\r\n            }\r\n            // 绘制三阶贝塞尔\r\n            if (n == 4) {\r\n                this.drawThirdOrderBezier(curve);\r\n            }\r\n        }\r\n    },\r\n    // 绘制贝塞尔曲线\r\n    drawBezier(startPos, controlPos, endPos) {\r\n        //画笔移动到起始点\r\n        this.ctx.moveTo(startPos.x, startPos.y);\r\n        //线条颜色\r\n        this.ctx.strokeColor = this.bezierColor;\r\n        //绘制贝塞尔曲线\r\n        this.ctx.quadraticCurveTo(controlPos.x, controlPos.y, endPos.x, endPos.y);\r\n        this.ctx.stroke();\r\n        //画笔移动到起始点\r\n        this.ctx.moveTo(endPos.x, endPos.y);\r\n        this.ctx.strokeColor = this.lineColor;\r\n        //绘制直线\r\n        this.ctx.lineTo(controlPos.x, controlPos.y);\r\n        this.ctx.stroke();\r\n        //\r\n    },\r\n\r\n    // 绘制三阶贝塞尔曲线\r\n    drawThirdOrderBezier(curve) {\r\n        //绘制贝塞尔曲线\r\n        this.ctx.moveTo(curve.start.x, curve.start.y);\r\n        //线条颜色\r\n        this.ctx.strokeColor = this.bezierColor;\r\n        this.ctx.bezierCurveTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y);\r\n        this.ctx.stroke();\r\n        //绘制辅助线1\r\n        this.ctx.moveTo(curve.start.x, curve.start.y);\r\n        this.ctx.strokeColor = this.lineColor;\r\n        this.ctx.lineTo(curve.control1.x, curve.control1.y);\r\n        this.ctx.stroke();\r\n        //绘制辅助线2\r\n        this.ctx.moveTo(curve.end.x, curve.end.y);\r\n        this.ctx.lineTo(curve.control2.x, curve.control2.y);\r\n        this.ctx.stroke();\r\n    },\r\n\r\n    addHideEvents(node) {\r\n        node.on(cc.Node.EventType.MOUSE_MOVE, (event) => {\r\n            this.hideMouseLocation()\r\n        })\r\n    },\r\n\r\n    // 屏幕坐标转换到节点坐标\r\n    convertToNodeSpace(event) {\r\n        return this.node.convertToNodeSpaceAR(event.getLocation());\r\n    },\r\n    // ------------------------【删除节点】---------------------------\r\n    addPointMenuBtnEvents() {\r\n        this.pointMenu.getChildByName(\"btn_delete_pointMenu\").on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            event.stopPropagation();\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_LEFT) {\r\n                if (lcl.BezierData.isLastCurve()) {\r\n                    this.showMsg(\"不能删除最后一个曲线!!\");\r\n                    return;\r\n                }\r\n                this.hidePointMenuView();\r\n                glGame.isAdd = false;\r\n                cc.error(\">>> 删除节点 >>>> 1\")\r\n                lcl.BezierData.deletePoint();//删除坐标点\r\n                // 重新保存下路径\r\n                lcl.BezierData.saveBezierPath();//保存坐标点\r\n                // cc.error(\"保存坐标点>>>>> 3\");\r\n            }\r\n        })\r\n        this.pointMenu.getChildByName(\"btn_submit_pointMenu\").on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            event.stopPropagation();\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_LEFT) {\r\n                this.hidePointMenuView();\r\n            }\r\n        })\r\n        this.pointMenu.getChildByName(\"slider\").on(\"slide\", (slider) => {\r\n            let speed = slider.progress * glGame.maxSpeed;\r\n            this.pointMenu.getChildByName(\"editbox\").getComponent(cc.EditBox).string = Number(speed.toFixed(2)) + \"\";\r\n            this.currPoint.speed = speed;\r\n        })\r\n        this.pointMenu.getChildByName(\"editbox\").on(\"text-changed\", (editbox) => {\r\n            let str = editbox.string;\r\n            if(str == null || str == \"\" || isNaN(str)){//输入校验 必须输入合法的\r\n                return;\r\n            }\r\n            this.currPoint.speed = Number(str) == 0 ? glGame.speed : Number(str);\r\n            this.pointMenu.getChildByName(\"slider\").getComponent(cc.Slider).progress = this.currPoint.speed/glGame.maxSpeed;//ui暂停使用\r\n        })\r\n    },\r\n\r\n    // save按钮\r\n    save() {\r\n        if (this.fileInputBox.string == \"\") {\r\n            this.setNoitce(\"文件名不能为空!\");\r\n            return\r\n        }\r\n        this.setNoitce('');\r\n        this.computeBezierActions();\r\n        this.saveBezierPathToJson(this.fileInputBox.string);\r\n    },\r\n\r\n    //保存为json数据\r\n    saveBezierPathToJson(name) {\r\n        if (cc.sys.isBrowser) {\r\n            let datas = JSON.stringify(lcl.BezierData.getBezierCurveData());\r\n            var textFileAsBlob = new Blob([datas], { type: 'application/json' });\r\n            var downloadLink = document.createElement(\"a\");\r\n            downloadLink.download = name;\r\n            downloadLink.innerHTML = \"Download File\";\r\n            if (window.webkitURL != null) {\r\n                // Chrome允许点击链接\r\n                //而无需实际将其添加到DOM中。\r\n                downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\r\n            }\r\n            else {\r\n                //在点击之前 Firefox要求将链接添加到DOM中\r\n                downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\r\n                downloadLink.onclick = destroyClickedElement;\r\n                downloadLink.style.display = \"none\";\r\n                document.body.appendChild(downloadLink);\r\n            }\r\n            downloadLink.click();\r\n        }\r\n    },\r\n    // \r\n    computeBezierActions() {\r\n        let bezierCurveData = lcl.BezierData.getBezierCurveData();\r\n        this.actionLists = [];\r\n        // 创建动作队列\r\n        for (var i = 0, len = bezierCurveData.points.length; i < len; i++) {\r\n            const point = bezierCurveData.points[i];\r\n            //计算当前路段需要的时间\r\n            let time = point.length / bezierCurveData.length * bezierCurveData.time;\r\n            point.time = time;\r\n            // 创建动作\r\n            let action = cc.moveTo(time, cc.v2(point.x, point.y));\r\n            this.actionLists.push(action);\r\n        }\r\n    },\r\n    // 设置分辨率\r\n    setResolution(str, event, ident) {\r\n        console.log(str, event, ident);\r\n        let num = Number(str);\r\n        if (str == \"\" || isNaN(num)) {\r\n            this.showMsg(\"分辨率只能填写数字！！！\");\r\n            event.string = this.resolution[ident];\r\n            return\r\n        }\r\n        this.resolution[ident] = num;\r\n        lcl.BezierData.setResolution(this.resolution.width, this.resolution.height);\r\n        this.setPaperSize();\r\n        lcl.BezierData.init(this.point, this.control, this.node);\r\n    },\r\n    setPaperSize(){\r\n        this.paper.width = this.resolution.width;\r\n        this.paper.height = this.resolution.height;\r\n    },\r\n    // 设置运行时间\r\n    setRunTime(str) {\r\n        let num = Number(str);\r\n        if (str == \"\" || isNaN(num)) {\r\n            this.showMsg(\"运行时间只能填写数字！！！\");\r\n            this.runTimeInputBox.string = this.prveRunTime || 2;\r\n            return\r\n        }\r\n        this.prveRunTime = num;\r\n        lcl.BezierData.setBezierCurveRunTime(num);\r\n    },\r\n\r\n    // 设置曲线平滑度\r\n    setCurveSmoothness(str) {\r\n        console.log(str);\r\n        let num = Number(str);\r\n        if (str == \"\" || isNaN(num)) {\r\n            this.showMsg(\"曲线平滑度只能填写数字！！！\");\r\n            this.smoothnessInputBox.string = this.prvePointCount || 100;\r\n            return\r\n        }\r\n        if (num < 0 || num > 1000) {\r\n            this.showMsg(\"曲线平滑度取值范围在 0 - 1000！\");\r\n            this.smoothnessInputBox.string = this.prvePointCount || 100;\r\n            return\r\n        }\r\n        this.prvePointCount = num;\r\n        lcl.BezierData.setPointCount(num);\r\n    },\r\n\r\n    // 播放动画\r\n    playBezierFishLine() {\r\n        glGame.currentFish.getComponent(\"fish_Unit\").editMove();\r\n    },\r\n    // 更新数据\r\n    updateBezierFishLine() {\r\n        glGame.currentFish.getComponent(\"fish_Unit\").updateData();\r\n    },\r\n\r\n\r\n    // ------------------------【弹窗设置相关】---------------------------\r\n    showInfoWindow() {\r\n        this.infoWindow.active = true;\r\n        this.setNoitce('');\r\n    },\r\n    hideInfoWindow() {\r\n        this.infoWindow.active = false;\r\n    },\r\n    setNoitce(str) {\r\n        this.notice.string = str;\r\n    },\r\n    showMsg(msg) {\r\n        this.msg.active = true;\r\n        this.msg.getComponent(cc.Label).string = msg\r\n        setTimeout(() => {\r\n            if (this.msg) {\r\n                this.msg.active = false;\r\n            }\r\n        }, 1000);\r\n    },\r\n    // 开始计时\r\n    startCountTime() {\r\n        this.isStartRun = true;\r\n        this.timeInfo.string = 0;\r\n        this.currentRunTime = 0;\r\n    },\r\n    // 停止计时\r\n    stopCountTime() {\r\n        this.isStartRun = false;\r\n    },\r\n    setCountTimeLabel(dt) {\r\n        this.currentRunTime = this.currentRunTime + dt;\r\n        this.timeInfo.string = \"run time: \" + this.currentRunTime.toFixed(2) + \"s\";\r\n    },\r\n\r\n    // 显示删除按钮\r\n    showPointMenuView(event) {\r\n        glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n        this.pointMenu.active = true;\r\n        let pos = event.target.pos;\r\n        if((pos.x+this.pointMenu.width) > this.paper.width/2){\r\n            pos.x = pos.x - ((pos.x+this.pointMenu.width) - this.paper.width/2);\r\n        }\r\n        if((pos.y+this.pointMenu.height) > this.paper.height/2){\r\n            pos.y = pos.y - ((pos.y+this.pointMenu.height) - this.paper.height/2);\r\n        }\r\n        if(pos.y < -342){\r\n            pos.y = -342;\r\n        }\r\n\r\n        this.pointMenu.setPosition(event.target.pos);\r\n\r\n        this.pointMenu.getChildByName(\"editbox\").active = event.isShowPointMenuDeleteAndTime;\r\n        this.pointMenu.getChildByName(\"btn_delete_pointMenu\").active = event.isShowPointMenuDeleteAndTime;\r\n        this.currPoint = event.target;\r\n        let index = Number(this.currPoint.children[0].getComponent(cc.Label).string);\r\n        let moveList = glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].moveList;\r\n        let posArray = glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].posArray;\r\n        let cuttTime;\r\n        if(index == 0){//第一个  特殊处理\r\n            cuttTime = moveList[index];\r\n        }else{\r\n            let isEnd = 3*(index/2);\r\n            let lengthEnd = moveList.length - 1;\r\n            if(lengthEnd == isEnd){//最后一个 特殊处理\r\n                cuttTime = moveList[lengthEnd];\r\n            }else{\r\n                let newIndex = index + (index * 0.5) + 1;//中间的\r\n                cuttTime = moveList[newIndex];\r\n            }\r\n        }\r\n        if(this.currPoint.speed == undefined){\r\n            if(cuttTime == undefined){\r\n                cuttTime = glGame.speed;\r\n            }\r\n            this.currPoint.speed = cuttTime;//保存到node对象\r\n            if(this.currPoint.speed == 0){\r\n                this.currPoint.speed =  glGame.speed;\r\n            }\r\n        }\r\n        // cc.error(\">> index \",index)\r\n        // cc.error(\">> posArray \",posArray)\r\n        // cc.error(\">> node \",this.node)\r\n        // cc.error(\">> currPoint \",this.currPoint)\r\n        this.pointMenu.getChildByName(\"editbox\").getComponent(cc.EditBox).string = this.currPoint.speed+\"\";\r\n        this.pointMenu.getChildByName(\"editboxX\").getComponent(cc.EditBox).string = posArray[index].x+\"\";\r\n        this.pointMenu.getChildByName(\"editboxY\").getComponent(cc.EditBox).string = posArray[index].y+\"\";\r\n        this.pointMenu.getChildByName(\"slider\").getComponent(cc.Slider).progress = this.currPoint.speed/glGame.maxSpeed;//UI暂停使用\r\n    },\r\n    hidePointMenuView(evt,data) {\r\n        if(data != undefined && data == 1){\r\n\r\n        }else{\r\n            this.currPoint.x = Number(this.pointMenu.getChildByName(\"editboxX\").getComponent(cc.EditBox).string);\r\n            this.currPoint.y = Number(this.pointMenu.getChildByName(\"editboxY\").getComponent(cc.EditBox).string);\r\n        }\r\n        this.pointMenu.active = false;\r\n        // glGame.drawBezier.saveDataToFishPointList();\r\n    },\r\n    //显示鼠标坐标\r\n    setMouseLocation(pos) {\r\n        this.mouseLocation.node.active = true\r\n        this.mouseLocation.node.setPosition(pos);\r\n        this.mouseLocation.string = `x:${pos.x.toFixed(0)} y:${pos.y.toFixed(0)}`;\r\n    },\r\n    //隐藏\r\n    hideMouseLocation() {\r\n        this.mouseLocation.node.active = false\r\n    },\r\n\r\n    // 曲线类型选择\r\n    setCurveType(event) {\r\n        console.log(event);\r\n        lcl.BezierData.setBezierCurveType(event.node._name)\r\n    }\r\n});","//捕鱼编辑器 主要是 资源、表、组、线 管理 业务逻辑\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        tmpData:cc.JsonAsset,\r\n    },\r\n    onLoad () {\r\n        if(window.ipcRenderer){\r\n            let arr = [\r\n                \"btn_newGroup\",\"btn_save\",\"btn_out\",\"btn_in\",\"btn_importExcel\",\"btn_inBg\",\"btn_about\",\r\n                \"btn_deleteLine\",\"btn_showMc\",\"btn_setting\",\"btn_revoke\",\"btn_redo\",\r\n                \"btn_fishList\",\"btn_resList\",\"btn_lineList\",\"btn_out2\",\"btn_out3\",\"btn_out4\",\r\n                \"btn_showFishResEditView\",\"file-opened-fishConfig\",\"btn_restore\"\r\n            ]\r\n            for (let i=0;i<arr.length;i++){\r\n                window.ipcRenderer.on(arr[i],(event, data) =>{\r\n                    this.click({currentTarget:{name:data}});\r\n                });\r\n            }\r\n        }\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n        glGame.currBezierID             = 0;    //当前id\r\n        glGame.addPoint                 = false;//加贝塞尔点\r\n        glGame.subPoint                 = false;//减贝塞尔点\r\n        glGame.editor                   = this; //单例\r\n        this.currAtl                    = null; //当前图集\r\n        glGame.currentFish              = null; //当前鱼\r\n        glGame.GFishList                = [];   //当前鱼组所有鱼\r\n        this.clickFishTableTypeFishId   = null; //鱼表鼠标右键点击的鱼\r\n\r\n        if(window.ipcRenderer){\r\n            //存储当前的图集路径\r\n            window.ipcRenderer.on(\"file-opened-atlasPath\", (event, atlasPath) => {\r\n                if(atlasPath){\r\n                    cc.sys.localStorage.setItem(\"atlasPath\",atlasPath);\r\n                }\r\n            });\r\n            //存储当前的鱼表路径\r\n            window.ipcRenderer.on(\"file-opened-fishTableExcelPath\", (event, fishTableExcelPath) => {\r\n                if(fishTableExcelPath){\r\n                    cc.sys.localStorage.setItem(\"fishTableExcelPath\",fishTableExcelPath);\r\n                }\r\n            });\r\n            //导入鱼线\r\n            window.ipcRenderer.on(\"file-opened-fishline\", (event, file) => {\r\n                if(file){\r\n                    let tmpList = JSON.parse(file);\r\n                    this.importJson(tmpList);//监听导入数据\r\n                }\r\n            });\r\n            //导入 个性化导出面板\r\n            window.ipcRenderer.on(\"file-opened-readOutSettingData\", (event, jsonString) => {\r\n                if(jsonString){\r\n                    glGame.OutSettingData = JSON.parse(jsonString);\r\n                    this.initOrReFreshOutSettingView();\r\n                    glGame.editor.show(\"导入成功！\");\r\n                }\r\n            });\r\n            //导入 鱼表\r\n            window.ipcRenderer.on(\"file-opened-fishexcel\", (event, jsonString) => {\r\n                if(jsonString){\r\n                    glGame.fishTable = JSON.parse(jsonString);\r\n                    console.log(\"glGame.fishTable : \",glGame.fishTable);\r\n                    this.creatorFishForResView();\r\n                }\r\n            });\r\n            //导入 背景\r\n            window.ipcRenderer.on(\"file-opened-bg-data\", (event, base64Image) => {\r\n                console.warn(\"> 1 导入 背景  data \",base64Image);\r\n                var img = new Image();\r\n                img.src = base64Image;\r\n                img.onload = function () {\r\n                    var texture = new cc.Texture2D();\r\n                    texture.initWithElement(img);\r\n                    texture.handleLoadedTexture();\r\n                    glGame.drawBezier.node.getChildByName(\"Testbg\").getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(texture);\r\n                    glGame.drawBezier.node.getChildByName(\"Testbg\").active = true;\r\n                };\r\n            });\r\n            //导入 背景\r\n            window.ipcRenderer.on(\"file-opened-bg\", (event, url) => {\r\n                console.warn(\"> 2 导入 背景  url \"+url)\r\n                // cc.loader.load(url,  (error, frame) => {\r\n                //     let spriteFrame = new cc.SpriteFrame();\r\n                //     spriteFrame.setTexture(frame);\r\n                //     glGame.drawBezier.node.getChildByName(\"Testbg\").getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n                //     glGame.drawBezier.node.getChildByName(\"Testbg\").active = true;\r\n                // });\r\n                //\r\n                // let url = \"http://127.0.0.1:9591/fish1.png\"\r\n                console.warn(\"> 导入 背景  url \"+url)\r\n                cc.loader.load(url,  (error, frame) => {\r\n                    let newFrame = new cc.SpriteFrame();\r\n                    newFrame.setTexture(frame);\r\n                    glGame.drawBezier.node.getChildByName(\"Testbg\").getComponent(cc.Sprite).spriteFrame = newFrame;\r\n                    glGame.drawBezier.node.getChildByName(\"Testbg\").active = true;\r\n                });\r\n            });\r\n        }\r\n        //打开资源列表\r\n        if(window.ipcRenderer){\r\n            window.ipcRenderer.on(\"file-opened-fishRes\", this.openedFishRes.bind(this));\r\n        }else{\r\n            cc.warn(\">>>正在debug 模式 模拟打开鱼资源列表: （前置条件 本地http 服务器已打开：http://127.0.0.1:8456 ）\")\r\n            let tmparr = [];\r\n            for (let i=1;i<32;i++){\r\n                tmparr.push(\"fish\"+i+\".png\");\r\n            }\r\n            let tmpData = {\r\n                \"fileList\":tmparr,\"fileServerUrl\":\"http://127.0.0.1:8456\",\"code\":0,\"msg\":\"ok\"};\r\n            let str = JSON.stringify(tmpData);\r\n            this.openedFishRes(null,str,()=>{\r\n                glGame.fishTable = glGame.fishTableTest;\r\n                console.log(\"glGame.fishTable : \",glGame.fishTable);\r\n                this.creatorFishForResView();\r\n            });\r\n        }\r\n        //鱼组搜索功能\r\n        this.node.getChildByName(\"fishGroupCanteiner\").getChildByName(\"searchGEditBox\").on(\"text-changed\",(editbox) => {\r\n            glGame.SearchFList = {};\r\n            if(editbox.string == \"\"){\r\n                glGame.editor.status(\"请输入字符\");\r\n                glGame.editor.updateGroupToCanteinerAndFishLineToCanvas();\r\n                return;\r\n            }\r\n            let groupLen = 0;\r\n            let newD = glGame.FList;\r\n            for (let groupID in newD){\r\n                if(newD[groupID].desc.indexOf(editbox.string) != -1 && glGame.SearchFList[groupID] == undefined){\r\n                    groupLen++\r\n                    glGame.SearchFList[groupID] = newD[groupID];\r\n                }\r\n            }\r\n            glGame.editor.status(\"鱼组搜索结果: 找到\"+groupLen+\"组\");\r\n            if(groupLen > 0){\r\n                for (let group in glGame.SearchFList){\r\n                    let list = glGame.SearchFList[group];\r\n                    for (let fishID in list){\r\n                        glGame.currLineItem = list[fishID];\r\n                        glGame.editor.updateGroupToCanteinerAndFishLineToCanvas();\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        //鱼线搜索功能\r\n        this.node.getChildByName(\"fishLineCanteiner\").getChildByName(\"searchLEditBox\").on(\"text-changed\",(editbox) => {\r\n            glGame.searchList = {};\r\n            if(editbox.string == \"\"){\r\n                glGame.editor.status(\"请输入字符\");\r\n                glGame.editor.updateFishLineToCanvas();\r\n                return;\r\n            }\r\n            let list;\r\n            if(glGame.FList[glGame.currGIndex]){\r\n                list = glGame.FList[glGame.currGIndex].fishLine;\r\n            }\r\n            let searchLen = 0;\r\n            if(list){\r\n                for (let key in list){\r\n                    let line = list[key];\r\n                    if(line.desc != null){\r\n                        if(line.desc.indexOf(editbox.string) != -1 && glGame.searchList[line.lineID] == undefined){\r\n                            glGame.searchList[line.lineID] = line;\r\n                            searchLen++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            glGame.editor.status(\"鱼线搜索结果: 找到\"+searchLen+\"条鱼线\");\r\n            glGame.editor.updateFishLineToCanvas();\r\n        });\r\n    },\r\n    //获得一个Min-Max中间的随机数\r\n    randomNum(Min,Max){\r\n        let Range = Number(Max) - Number(Min);\r\n        let Rand = Math.random();\r\n        return (Min + Math.round(Rand * Range));\r\n    },\r\n    //选择鱼图资源文件夹，检查图集文件后\r\n    openedFishRes(event,jsonstring,cb=null){\r\n        glGame.editor.node.getChildByName(\"loadingView\").getChildByName(\"lab\").getComponent(cc.Label).string = \"正在导入资源...请稍等\";\r\n        glGame.editor.node.getChildByName(\"loadingView\").active = true;\r\n        let data = JSON.parse(jsonstring);\r\n        if(data.code != 0){\r\n            glGame.editor.alert(data.msg);\r\n            return;\r\n        }\r\n        glGame.resFileList = data.fileList;\r\n        glGame.fileServerUrl = data.fileServerUrl;\r\n        glGame.getAtlasAll = [];\r\n        console.warn(\">>文件服务器设置完成 URL: \",glGame.fileServerUrl);\r\n        console.warn(\"tmpList:\");\r\n        console.warn(glGame.resFileList);\r\n        glGame.editor.status(\"正在准备导入图集...\");\r\n        if(glGame.resFileList){\r\n            let len = glGame.resFileList.length;\r\n            let length = 0;\r\n            for (let i=0;i<len;i++) {\r\n                let fileName = glGame.resFileList[i].split(\".\")[0];\r\n                glGame.getAtlasAll.push(fileName);\r\n                glGame.loadingAtlas(fileName,glGame.fileServerUrl,()=>{\r\n                    length++;\r\n                    if(length == len){\r\n                        glGame.editor.status(\"导入结束！ 成功导入：\"+length+\"个图集\");\r\n                        glGame.editor.node.getChildByName(\"loadingView\").active = false;\r\n                        glGame.editor.node.getChildByName(\"fishTableImport\").active = true;\r\n                        if(cb){\r\n                            cb();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    },\r\n    //获取资源id\r\n    getFishResConfig(fishTypeId){\r\n        if(!glGame.fishTable){//使用本地的\r\n            glGame.editor.alert(\"请导入鱼图表Excel后再继续！\")\r\n            return;\r\n        }\r\n        return glGame.fishTable[Number(fishTypeId)];\r\n    },\r\n    onKeyDown: function (event) {\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.f12:\r\n                if(window.ipcRenderer)window.ipcRenderer.send(\"keyf12\");\r\n                break;\r\n            case cc.macro.KEY.f10:\r\n                if(window.ipcRenderer)window.ipcRenderer.send(\"outjson\",JSON.stringify(glGame.FList));\r\n                break;\r\n            default :\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"key_\"+event.keyCode);\r\n        }\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.ctrl:\r\n                glGame.Ctrl = true;\r\n                cc.game.canvas.style.cursor = \"all-scroll\";\r\n                glGame.editor.status(\"这个时候可以拖动\");\r\n                cc.error(\">>>> 1 length \"+glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].posArray.length)\r\n                break;\r\n            case cc.macro.KEY.z://往后 恢复历史\r\n                if(glGame.Ctrl){\r\n                    this.btn_revoke();\r\n                }\r\n                break;\r\n            case cc.macro.KEY.y://恢复 上一次 Ctrl + z 的内容\r\n                if(glGame.Ctrl) {\r\n                    this.btn_redo();\r\n                }\r\n                break;\r\n            case cc.macro.KEY.s:\r\n                if(glGame.Ctrl){\r\n                    glGame.drawBezier.saveDataToFishPointList()//保存数据 到 FishPointList\r\n                }\r\n                break;\r\n            case cc.macro.KEY.f1:\r\n                glGame.isCreator = true;\r\n                this.showCreatorFishGroupView();\r\n                break;\r\n            case cc.macro.KEY.f2:\r\n                this.node.getChildByName(\"creatorFish\").active = !this.node.getChildByName(\"creatorFish\").active;\r\n                break;\r\n            case cc.macro.KEY.f3:\r\n                break;\r\n            case cc.macro.KEY.f5:\r\n                this.node.getChildByName(\"settingView\").active = !this.node.getChildByName(\"settingView\").active;\r\n                break;\r\n            case cc.macro.KEY.f6:\r\n                if(glGame.isShowBg == null)glGame.isShowBg = false;\r\n                glGame.isShowBg = !glGame.isShowBg;\r\n                glGame.drawBezier.node.getChildByName(\"Testbg\").active = glGame.isShowBg;\r\n                break;\r\n            case cc.macro.KEY.f8:\r\n                glGame.drawBezier.node.active = !glGame.drawBezier.node.active;\r\n                break;\r\n            case cc.macro.KEY.escape:\r\n                if(this.node.getChildByName(\"settingView\").active){\r\n                    this.node.getChildByName(\"settingView\").active = false;\r\n                }else if(this.node.getChildByName(\"fishGoulpInfomation\").active){\r\n                    this.node.getChildByName(\"fishGoulpInfomation\").active = false;\r\n                }else if(this.node.getChildByName(\"creatorFish\").active){\r\n                    this.node.getChildByName(\"creatorFish\").active = false;\r\n                }else if(this.node.getChildByName(\"chooseFishingLine\").active){\r\n                    this.node.getChildByName(\"chooseFishingLine\").active = false;\r\n                }else if(this.node.getChildByName(\"fishGroupMenu\").active){\r\n                    this.node.getChildByName(\"fishGroupMenu\").active = false;\r\n                    glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = false;\r\n                }\r\n                break;\r\n            case cc.macro.KEY.space:\r\n                this.runGroupFish(false);\r\n                break;\r\n            case cc.macro.KEY.f9:\r\n                glGame.drawBezier.saveDataToFishPointList()//保存数据 到 FishPointList\r\n                break;\r\n            case cc.macro.KEY.h://隐藏鱼\r\n                if(glGame.Ctrl){\r\n                    this.hideOrShowFish(false);\r\n                }\r\n                break;\r\n            case cc.macro.KEY.g://显示鱼\r\n                if(glGame.Ctrl){\r\n                    this.hideOrShowFish(true);\r\n                }\r\n                break;\r\n            case cc.macro.KEY.a://导入测试数据\r\n                if(!window.ipcRenderer){//debug 模式\r\n                    cc.warn(\">>> 导入测试数据 ....\",this.tmpData.json)\r\n                    this.importJson(this.tmpData.json)\r\n                }\r\n                break;\r\n            case cc.macro.KEY.q://导出测试数据\r\n                //this.click({currentTarget:{name:\"btn_out\"}});\r\n                if(!window.ipcRenderer){//debug 模式\r\n                    cc.log(\"out....\");\r\n                    this.click({currentTarget:{name:\"btn_out\"}});\r\n                }\r\n                break;\r\n        }\r\n    },\r\n    onKeyUp: function (event) {\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.ctrl:\r\n                glGame.Ctrl = false;\r\n                cc.game.canvas.style.cursor = \"auto\";\r\n                glGame.editor.status(\"\");\r\n                break;\r\n        }\r\n    },\r\n    start(){\r\n        glGame.editor.status(\"TIPS: 请导入 鱼资源表 ，资源界面鼠标右键 新建鱼 开始\",glGame.Color.RED);\r\n        if(glGame.currGIndex == 0){\r\n            glGame.currGIndex = glGame.startGroupIndex;\r\n        }\r\n        this.node.getChildByName(\"bg\").on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            if(glGame.editor.node.getChildByName(\"fishGroupMenu\").active){\r\n                glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n                glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = false;\r\n            }\r\n            if(glGame.editor.node.getChildByName(\"chooseFishingLine\").active){\r\n                glGame.editor.node.getChildByName(\"chooseFishingLine\").active = false;\r\n            }\r\n            if(event.target.name.indexOf(\"menu\") != -1){\r\n                return;\r\n            }\r\n            if(!glGame.atlasList){\r\n                glGame.editor.alert(\"找不到图集，请选择图集目录！\",(a)=>{\r\n                    if(a){\r\n                        if(window.ipcRenderer)window.ipcRenderer.send(\"sFishPth\");\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n\r\n            if(!glGame.fishTable){\r\n                glGame.editor.alert(\"找不到鱼表，请导入！\",(a)=>{\r\n                    if(a){\r\n                        this.click({currentTarget:{name:\"btn_importExcel\"}});\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n            if(!glGame.FList[glGame.currGIndex]){   //提示创建鱼组\r\n                glGame.editor.alert(\"请创建鱼组~\",(a)=>{\r\n                    if(a){\r\n                        glGame.isCreator = true;\r\n                        this.showCreatorFishGroupView();\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n            // 鼠标右键\r\n            if(!glGame.currentFish){\r\n                glGame.editor.status(\"请创建一条鱼\");\r\n            }\r\n        });\r\n        //鱼表\r\n        let fishCanteinerContent = this.node.getChildByName(\"fishCanteiner\").getChildByName(\"fishScrollView\").getChildByName(\"view\").getChildByName(\"content\");\r\n        fishCanteinerContent.on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            // 鱼表 鼠标右键\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_RIGHT) {\r\n                if(event.target.name.indexOf(\"resList_fish_\") != -1 ){\r\n                    this.clickFishTableTypeFishId = Number(event.target.fishTypeId);\r\n                }\r\n                if(!glGame.FList[glGame.currGIndex]){   //提示创建鱼组\r\n                    glGame.editor.alert(\"请创建鱼组\",(a)=>{\r\n                        if(a){\r\n                            glGame.isCreator = true;\r\n                            this.showCreatorFishGroupView();\r\n                        }\r\n                    });\r\n                    return;\r\n                }\r\n                if(this.clickFishTableTypeFishId){\r\n                    this.showCreatFishView(true);\r\n                }else{\r\n                    glGame.editor.status(\"没点中鱼！请重试！\");\r\n                }\r\n            }\r\n        });\r\n        let chooseFishingLine = glGame.editor.node.getChildByName(\"chooseFishingLine\");\r\n        glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n        glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = false;\r\n        glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").opacity = 255;\r\n        chooseFishingLine.active = false;\r\n        chooseFishingLine.getChildByName(\"bg\").opacity = 255;\r\n        glGame.editor.node.getChildByName(\"alertView\").active = false;\r\n        glGame.editor.node.getChildByName(\"alertView\").opacity = 200;\r\n        let fishLineCanteinerContent = this.node.getChildByName(\"fishLineCanteiner\").getChildByName(\"fishLineScrollView\").getChildByName(\"view\").getChildByName(\"content\");\r\n        let fishGroupCanteiner = this.node.getChildByName(\"fishGroupCanteiner\").getChildByName(\"fishGroupScrollView\").getChildByName(\"view\").getChildByName(\"content\");\r\n        //鱼线 列表 右键 监听\r\n        fishLineCanteinerContent.on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            if(chooseFishingLine.active){\r\n                chooseFishingLine.active = false;\r\n            }\r\n            //右键监听\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_RIGHT) {\r\n                if(event.target.name.indexOf(\"_\") != -1){\r\n                    glGame.editor.chooseFishID = event.target.lineID;\r\n                    glGame.editor.status(\"当前选中鱼线ID：\"+glGame.editor.chooseFishID);\r\n                    chooseFishingLine.active = true;\r\n                    let pos  = chooseFishingLine.convertToNodeSpaceAR(event.getLocation());\r\n                    let bg = chooseFishingLine.getChildByName(\"bg\");\r\n                    let height = bg.height\r\n                    let x = pos.x-bg.width/2;\r\n                    let y = pos.y-height/2;\r\n                    bg.setPosition(x,y);\r\n                    if(bg.y < 0 && bg.y < -658){\r\n                        bg.y = -658;\r\n                    }\r\n                    if(bg.y > 0 && bg.y > 665){\r\n                        bg.y = 658;\r\n                    }\r\n                }else{\r\n                    glGame.editor.status(\"点×了，请瞄准Item点击\");\r\n                }\r\n            }\r\n            //左键监听\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_LEFT){\r\n                if(event.target.name.indexOf(\"_\") != -1){\r\n                    if(glGame.lastItemNode != null && glGame.lastItemNode.children != null && glGame.lastItemNode.getChildByName(\"heightLine\")){\r\n                        glGame.lastItemNode.getChildByName(\"heightLine\").active = false;\r\n                    }\r\n                    glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_pay\").active = true;\r\n                    glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_push\").active = false;\r\n                    glGame.lastItemNode = event.target;\r\n                    glGame.lastItemNode.getChildByName(\"heightLine\").active = true;\r\n                    for (let i=0;i<glGame.GFishList.length;i++){\r\n                        if(glGame.GFishList[i].lineID == event.target.lineID){\r\n                            if(glGame.currentFish){\r\n                                glGame.currentFish.getComponent(\"fish_Unit\").settingIcing(false);\r\n                                glGame.currentFish.setPosition(glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].posArray[0]);\r\n                            }\r\n                            glGame.currentFish = glGame.GFishList[i];\r\n                            break;\r\n                        }\r\n                    }\r\n                    glGame.editor.status(\"当前选中鱼线ID  currentFish ：\"+event.target.lineID);\r\n                    glGame.currLineItem = glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID];\r\n                    glGame.editor.getFishToCanvas(glGame.currentFish.lineID);\r\n                }\r\n            }\r\n        });\r\n        //鱼组 列表 鱼组右键 和 鱼组左键 监听\r\n        fishGroupCanteiner.on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            if(glGame.editor.node.getChildByName(\"fishGroupMenu\").active){\r\n                glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n                glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = false;\r\n            }\r\n            //右键监听\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_RIGHT) {\r\n                if(event.target.name.indexOf(\"_\") != -1){\r\n                    let bg = glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\")\r\n                    glGame.tmpGroupId = Number(event.target.name.split(\"_\")[1]);\r\n                    cc.warn(\"> 鱼组 列表 右键 > \",glGame.tmpGroupId)\r\n                    glGame.editor.node.getChildByName(\"fishGroupMenu\").active = true;\r\n                    glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n                    bg.getChildByName(\"btn_Paste\").active = glGame.copyToGroup != null;\r\n                    bg.getChildByName(\"btn_PasteLine\").active = glGame.copyLineFIshID != null;\r\n                    bg.getChildByName(\"btn_PasteOptionLine\").active = glGame.optionCopyLinePasterOtherGroup_groupID != null;\r\n                    if(bg.getChildByName(\"btn_Paste\").active || bg.getChildByName(\"btn_PasteLine\").active || bg.getChildByName(\"btn_PasteOptionLine\").active){\r\n                        bg.Oldheight = bg.height;\r\n                        bg.height = 288;\r\n                    }else{\r\n                       if(bg.Oldheight) bg.height = bg.Oldheight;\r\n                    }\r\n                    let pos  = glGame.editor.node.getChildByName(\"fishGroupMenu\").convertToNodeSpaceAR(event.getLocation());\r\n                    let height = bg.height/2;\r\n                    let x = pos.x+bg.width/2;\r\n                    let y = pos.y-height;\r\n                    bg.setPosition(x,y);\r\n                }\r\n            }\r\n            //左键监听\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_LEFT){//应用鱼组\r\n                if(event.target.name.indexOf(\"_\") != -1){\r\n                    let cgi = Number(event.target.name.split(\"_\")[1]);\r\n                    let len = 0;\r\n                    let firstKey = null;\r\n                    for(let key in glGame.FList[cgi]){\r\n                        len++;\r\n                        if(!firstKey){\r\n                            firstKey = key;\r\n                        }\r\n                    }\r\n\r\n                    if(glGame.currentFish){\r\n                        glGame.currentFish.getComponent(\"fish_Unit\").dispose();\r\n                    }\r\n\r\n                    glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_pay\").active = true;\r\n                    glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_push\").active = false;\r\n\r\n                    glGame.drawBezier.clearCurrFishLine();\r\n                    glGame.currentFish = null;\r\n\r\n                    if(glGame.currGItem != null && glGame.currGItem.children != null && glGame.currGItem.childrenCount > 0)glGame.currGItem.getChildByName(\"heightLine\").active = false;\r\n                    glGame.currGItem = event.target;\r\n                    glGame.currGItem.getChildByName(\"heightLine\").active = true;\r\n                    glGame.currGIndex = cgi;\r\n                    glGame.addNewLineId = null;\r\n                    let ish = false;\r\n                    if(len == 0){\r\n                        glGame.editor.status(\"鱼组\"+cgi+\"无数据\");\r\n                    }else{\r\n                        let list =  glGame.FList[cgi];\r\n                        for(let key in list.fishLine){\r\n                            if(list.fishLine[key]){\r\n                                //应用鱼线\r\n                                ish = true;\r\n                                glGame.currLineItem = list.fishLine[key];\r\n                                glGame.editor.updateFishLineToCanvas();\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        glGame.drawBezier.initDataToFishPointList();\r\n        this.node.getChildByName(\"fishGroupProgress\").active = false;\r\n        this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"slider\").on('slide', this.onSlide, this);\r\n        this.node.getChildByName(\"fishGroupProgress\").isGroupPlay = false;\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_WHEEL, (event) => {\r\n            let deskUI = glGame.editor.node.getChildByName(\"deskUI\");\r\n            if(event._scrollY>0){\r\n                if(deskUI.scale < 3){\r\n                    deskUI.scale += 0.05;\r\n                }\r\n            }else {\r\n                if(deskUI.scale > 0.1){\r\n                    deskUI.scale -= 0.05;\r\n                }\r\n            }\r\n        }, this);\r\n    },\r\n    onSlide(e){\r\n        this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"progressBar\").getComponent(cc.ProgressBar).progress = e.progress;\r\n        this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_startPlay\").active = e.progress == 0 || e.progress == 1 ? false : true;\r\n        this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_pushGroup\").active = !this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_startPlay\").active;\r\n        if(e.progress == 1){\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_pushGroup\").active = false;\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_startPlay\").active = !this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_pushGroup\").active;\r\n        }\r\n        if(this.node.getChildByName(\"fishGroupProgress\").isGroupPlay){\r\n            if(glGame.GFishList && glGame.GFishList.length > 0){\r\n                let len = glGame.GFishList.length;\r\n                for (let i = 0;i<len;i++){\r\n                    let f = glGame.GFishList[i];\r\n                    if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").updateData();\r\n                    if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").setProgress(e.progress);\r\n                }\r\n            }\r\n        }else{\r\n            let f = glGame.currentFish;\r\n            if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").updateData();\r\n            if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").setProgress(e.progress);\r\n        }\r\n    },\r\n    //判断范围\r\n    isEnterArea(pos,nodeName){\r\n        let x = this.node.getChildByName(nodeName).x - this.node.getChildByName(nodeName).width/2;\r\n        let y = this.node.getChildByName(nodeName).y - this.node.getChildByName(nodeName).height/2;\r\n        let pos1 = cc.v2(x,y);\r\n        let x2 = this.node.getChildByName(nodeName).x + this.node.getChildByName(nodeName).width/2;\r\n        let y2 = this.node.getChildByName(nodeName).y + this.node.getChildByName(nodeName).height/2;\r\n        let pos2 = cc.v2(x2,y2);\r\n\r\n        if(pos.x > pos1.x && pos.x < pos2.x){\r\n            return true;\r\n        }\r\n        if(pos.y < pos1.y && pos.y > pos2.y){\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    //鱼组继续运行\r\n    runGroupFish(isR){\r\n        if(isR){\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_pushGroup\").active = true;\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_startPlay\").active = !this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_pushGroup\").active;\r\n            if(this.node.getChildByName(\"fishGroupProgress\").isGroupPlay){\r\n                if(glGame.GFishList && glGame.GFishList.length > 0){\r\n                    let len = glGame.GFishList.length;\r\n                    for (let i = 0;i<len;i++){\r\n                        let f = glGame.GFishList[i];\r\n                        if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").updateData();\r\n                        if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").settingIcing(true);\r\n                    }\r\n                }\r\n            }else{\r\n                let f = glGame.currentFish;\r\n                if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").updateData();\r\n                if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").settingIcing(true);\r\n            }\r\n        }else{\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_pushGroup\").active = false;\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_startPlay\").active = !this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_pushGroup\").active;\r\n            if(this.node.getChildByName(\"fishGroupProgress\").isGroupPlay){\r\n                if(glGame.GFishList && glGame.GFishList.length > 0){\r\n                    let len = glGame.GFishList.length;\r\n                    for (let i = 0;i<len;i++){\r\n                        let f = glGame.GFishList[i];\r\n                        if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").updateData();\r\n                        if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").settingIcing(false);\r\n                    }\r\n                }\r\n            }else{\r\n                let f = glGame.currentFish;\r\n                if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").updateData();\r\n                if(f && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").settingIcing(false);\r\n            }\r\n        }\r\n    },\r\n    //click事件\r\n    click(evt){\r\n        if(evt.currentTarget.name == \"menu1Button\"){//右键菜单1 - 快速添加\r\n            glGame.paintingArea.emit(\"addNewPoint\",glGame.currDownEvent);\r\n            glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"menu2Button\"){//右键菜单2 - 手动输入\r\n            glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n\r\n            let newPoint2 = glGame.editor.node.getChildByName(\"newPoint2\");\r\n            newPoint2.active = true;\r\n            newPoint2.getChildByName(\"lab_bzier1X\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = \"\";\r\n            newPoint2.getChildByName(\"lab_bzier1Y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = \"\";\r\n\r\n            newPoint2.getChildByName(\"lab_bzier2X\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = \"\";\r\n            newPoint2.getChildByName(\"lab_bzier2Y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = \"\";\r\n\r\n        }\r\n        if(evt.currentTarget.name == \"menu3Button\"){//右键菜单3 - 播放整组\r\n            glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"menu4Button\"){//右键菜单4 - 播放该线\r\n            glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"menu5Button\"){//右键菜单5 - 刷新\r\n            glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"menu6Button\"){//右键菜单6 - 隐藏/显示 鱼\r\n            glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n            this.hideOrShowFish2();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_startPlay\"){//继续播放 ,解冻\r\n            this.runGroupFish(true);\r\n        }\r\n        if(evt.currentTarget.name == \"btn_revoke\"){//撤销\r\n            console.warn(\" 撤销 \")\r\n            this.btn_revoke();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_redo\"){//重做\r\n            console.warn(\" 重做 \")\r\n            this.btn_redo();\r\n        }\r\n        if(evt.currentTarget.name == \"closeNrePoint2\"){//关闭新增鱼线点界面\r\n            let newPoint2 = glGame.editor.node.getChildByName(\"newPoint2\");\r\n            newPoint2.active = false;\r\n            glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"newPointOkButton2\"){//确定 新增\r\n            let newPoint2 = glGame.editor.node.getChildByName(\"newPoint2\");\r\n            newPoint2.active = false;\r\n            let str1X = Number(newPoint2.getChildByName(\"lab_bzier1X\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n            let str1Y = Number(newPoint2.getChildByName(\"lab_bzier1Y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n\r\n            let str2X = Number(newPoint2.getChildByName(\"lab_bzier2X\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n            let str2Y = Number(newPoint2.getChildByName(\"lab_bzier2Y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n            glGame.currDownEvent.bzierData = {controlPos:cc.v2(str1X,str1Y),endPos:cc.v2(str2X,str2Y)};\r\n            glGame.paintingArea.emit(\"addNewPoint\", glGame.currDownEvent);\r\n        }\r\n        if(evt.currentTarget.name == \"btn_pushGroup\"){//暂停播放 ,冻\r\n            this.runGroupFish(false);\r\n        }\r\n        if(evt.currentTarget.name == \"chooseFishingLine\"){//点击鱼线列表右键弹出的 选择界面\r\n            glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n            let pos  = glGame.editor.node.getChildByName(\"chooseFishingLine\").convertToNodeSpaceAR(evt.getLocation());\r\n            if(!this.isEnterArea(pos,\"fishLineCanteiner\")){\r\n                this.node.getChildByName(\"chooseFishingLine\").active = !this.node.getChildByName(\"chooseFishingLine\").active;\r\n            }\r\n        }\r\n        if(evt.currentTarget.name == \"fishGroupMenu\"){//点击鱼组列表右键弹出的 选择界面\r\n            let pos  = glGame.editor.node.getChildByName(\"fishGroupMenu\").convertToNodeSpaceAR(evt.getLocation());\r\n            if(!this.isEnterArea(pos,\"fishGroupCanteiner\")){\r\n                this.node.getChildByName(\"fishGroupMenu\").active = !this.node.getChildByName(\"fishGroupMenu\").active;\r\n                glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n            }\r\n        }\r\n        if(evt.currentTarget.name == \"btn_editLineInfo\"){//鱼线列表 右键 弹出窗 - 编辑线路信息\r\n            glGame.editor.node.getChildByName(\"leftClickMenu\").active = false;\r\n            let chooseFishingLine = glGame.editor.node.getChildByName(\"chooseFishingLine\");\r\n            chooseFishingLine.active = !chooseFishingLine.active;\r\n            glGame.isCreat = false;\r\n            this.showCreatFishView(false);\r\n        }\r\n        if(evt.currentTarget.name == \"chooseFishingLineMask\") {//鱼线列表 遮罩\r\n            let chooseFishingLine = glGame.editor.node.getChildByName(\"chooseFishingLine\");\r\n            chooseFishingLine.active = !chooseFishingLine.active;\r\n        }\r\n        if(evt.currentTarget.name == \"closeFishList\"){\r\n            this.node.getChildByName(\"fishCanteiner\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_fishGroupProgress\"){\r\n            this.node.getChildByName(\"fishGroupProgress\").active = false;\r\n            this.node.getChildByName(\"fishGroupProgress\").isGroupPlay = true;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_pay\" || evt.currentTarget.name == \"menu4Button\"){//右键菜单4 - 播放该线\r\n            this.node.getChildByName(\"fishGroupProgress\").isGroupPlay = false;\r\n            this.node.getChildByName(\"fishGroupProgress\").active = true;\r\n            glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_pay\").active = false;\r\n            glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_push\").active = true;\r\n            if(glGame.currentFish){\r\n                if(glGame.currentFish.getComponent(\"fish_Unit\")){\r\n                    glGame.currentFish.getComponent(\"fish_Unit\").settingIcing(true);\r\n                }\r\n            }\r\n            if(glGame.pearssPush != undefined)return;//暂停了\r\n            if(glGame.currentFish != undefined){\r\n                glGame.drawBezier.playBezierFishLine();\r\n            }else{\r\n                glGame.editor.status(\"请先创建一条鱼\");\r\n            }\r\n        }\r\n        if(evt.currentTarget.name == \"btn_refush\" || evt.currentTarget.name == \"menu5Button\"){//刷新 右键菜单5 - 刷新\r\n            glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_push\").active = false;\r\n            glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_pay\").active = !glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_push\").active;\r\n            let list = glGame.FList[glGame.currGIndex].fishLine;\r\n            if(list){\r\n                for (let fishID in list){\r\n                    glGame.currLineItem = list[fishID];\r\n                    glGame.editor.updateGroupToCanteinerAndFishLineToCanvas();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(evt.currentTarget.name == \"btn_push\"){\r\n            glGame.pearssPush = \"ok\";\r\n            glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_push\").active = !glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_push\").active;\r\n            glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_pay\").active = !glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_push\").active;\r\n            glGame.currentFish.getComponent(\"fish_Unit\").settingIcing(false);\r\n        }\r\n        if(evt.currentTarget.name == \"btn_restore\"){//打开上次\r\n            if(window.ipcRenderer){\r\n                let atlasPath           = cc.sys.localStorage.getItem(\"atlasPath\");//图集路径\r\n                let fishTableExcelPath  = cc.sys.localStorage.getItem(\"fishTableExcelPath\");//鱼表路径\r\n                cc.warn(\"  打开上次  atlasPath \",atlasPath,\" fishTableExcelPath \",fishTableExcelPath);\r\n                if(atlasPath != null && atlasPath != \"\"){\r\n                    if(fishTableExcelPath != null && fishTableExcelPath != \"\"){\r\n                        let data        = {atlasPath:atlasPath,fishTableExcelPath:fishTableExcelPath}\r\n                        window.ipcRenderer.send(\"open-restore\",JSON.stringify(data));\r\n                    }\r\n                }else{\r\n                    if(atlasPath == null || atlasPath == \"\"){\r\n                        glGame.editor.alert(\"无记录\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(evt.currentTarget.name == \"btn_fishList\"){//鱼组列表 - 鱼组\r\n            this.clickMenu(\"view_menu3\",evt.currentTarget.name);\r\n            this.node.getChildByName(\"fishGroupCanteiner\").active = !this.node.getChildByName(\"fishGroupCanteiner\").active;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_resList\"){//资源列表 - 鱼\r\n            this.clickMenu(\"view_menu3\",evt.currentTarget.name);\r\n            this.node.getChildByName(\"fishCanteiner\").active = !this.node.getChildByName(\"fishCanteiner\").active;\r\n        }\r\n        if(evt.currentTarget.name == \"GroupItem\"){//当前 鱼组信息界面\r\n            this.node.getChildByName(\"fishGoulpInfomation\").active = !this.node.getChildByName(\"fishGoulpInfomation\").active;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_lineList\"){// 鱼线列表\r\n            this.clickMenu(\"view_menu3\",evt.currentTarget.name);\r\n            this.node.getChildByName(\"fishLineCanteiner\").active = !this.node.getChildByName(\"fishLineCanteiner\").active;\r\n        }\r\n        if(evt.currentTarget.name == \"closeFishLineGroup\"){// 鱼线列表\r\n            this.node.getChildByName(\"fishLineCanteiner\").active = !this.node.getChildByName(\"fishLineCanteiner\").active;\r\n        }\r\n        if(evt.currentTarget.name == \"searhGroupButton\"){//鱼组 搜索\r\n            let searchGEditBox = this.node.getChildByName(\"fishGroupCanteiner\").getChildByName(\"searchGEditBox\");\r\n            searchGEditBox.active = !searchGEditBox.active;\r\n            let sl = 0;\r\n            if(!searchGEditBox.active){\r\n                if(glGame.SearchFList != undefined){\r\n                    for (let k in glGame.SearchFList){\r\n                        sl++;\r\n                        break;\r\n                    }\r\n                }\r\n                if(sl > 0){\r\n                    glGame.SearchFList = null;\r\n                    glGame.editor.updateGroupToCanteinerAndFishLineToCanvas();\r\n                }\r\n            }\r\n        }\r\n        if(evt.currentTarget.name == \"searhLineButton\"){//鱼线 搜索\r\n            let searhLineButton = this.node.getChildByName(\"fishLineCanteiner\").getChildByName(\"searchLEditBox\");\r\n            searhLineButton.active = !searhLineButton.active;\r\n            if(!searhLineButton.active){\r\n                if(glGame.searchList != undefined && glGame.searchList.length >0){\r\n                    glGame.searchList = [];\r\n                    glGame.editor.updateFishLineToCanvas();\r\n                }\r\n            }\r\n        }\r\n        if(evt.currentTarget.name == \"closeGroupInfo\"){//关闭 - 关闭鱼组信息界面\r\n            this.node.getChildByName(\"fishGoulpInfomation\").active = !this.node.getChildByName(\"fishGoulpInfomation\").active;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_fishLineSubmit\"){//提交 - 关闭鱼线信息界面\r\n            this.node.getChildByName(\"fishGoulpInfomation\").active = !this.node.getChildByName(\"fishGoulpInfomation\").active;\r\n        }\r\n        if(evt.currentTarget.name == \"menu1\"){\r\n            this.node.getChildByName(\"view_menu1\").active = !this.node.getChildByName(\"view_menu1\").active;\r\n            this.node.getChildByName(\"view_menu2\").active = false;\r\n            this.node.getChildByName(\"view_menu3\").active = false;\r\n            return;\r\n        }\r\n        if(evt.currentTarget.name == \"menu2\"){\r\n            this.node.getChildByName(\"view_menu2\").active = !this.node.getChildByName(\"view_menu2\").active;\r\n            this.node.getChildByName(\"view_menu1\").active = false;\r\n            this.node.getChildByName(\"view_menu3\").active = false;\r\n            return;\r\n        }\r\n        if(evt.currentTarget.name == \"menu3\"){\r\n            this.node.getChildByName(\"view_menu3\").active = !this.node.getChildByName(\"view_menu3\").active;\r\n            this.node.getChildByName(\"view_menu1\").active = false;\r\n            this.node.getChildByName(\"view_menu2\").active = false;\r\n            return;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_new\"){//新建项目\r\n            this.clickMenu(\"view_menu1\",evt.currentTarget.name);\r\n        }\r\n        if(evt.currentTarget.name == \"btn_save\"){//保存\r\n            this.clickMenu(\"view_menu1\",evt.currentTarget.name);\r\n            glGame.drawBezier.saveDataToFishPointList();\r\n        }\r\n        if(evt.currentTarget.name == \"logo\"){//点击logo\r\n            this.openAbout();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_inBg\"){//导入背景\r\n            this.clickMenu(\"view_menu1\",evt.currentTarget.name);\r\n\r\n        }\r\n        if(evt.currentTarget.name == \"btn_about\"){//关于\r\n            this.clickMenu(\"view_menu1\",evt.currentTarget.name);\r\n            this.openAbout();\r\n        }\r\n        if(evt.currentTarget.name == \"close _about_bg\"){//关于-背景-关闭\r\n            this.closeAbout();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_InfoEditor\"){//信息查看\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = false;\r\n            glGame.isCreator = false;\r\n            this.showCreatorFishGroupView();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_newGroup\"){//新建鱼组\r\n            this.node.getChildByName(\"view_menu1\").active = !this.node.getChildByName(\"view_menu1\").active;\r\n            glGame.isCreator = true;\r\n            this.showCreatorFishGroupView();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_setting\"){//打开项目设置面板\r\n            this.clickMenu(\"view_menu2\",evt.currentTarget.name);\r\n            this.node.getChildByName(\"settingView\").active = true;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_fishGroupSubmit\"){//提交 -  鱼组信息界面\r\n            this.creatFishGroupSubmit();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_copyLineOption\"){//拷贝鱼线 选项\r\n            let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n            optionCopyLine.active = !optionCopyLine.active;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_copyGroupOption\"){//选项拷贝鱼组\r\n            glGame.optionCopyLinePasterOtherGroup_groupID = null;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = true;\r\n        }\r\n        if(evt.currentTarget.name == \"fishGroupMenuMask\"){//鱼组菜单 遮罩\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_closebatchOperationFishLine\") {//关闭 批量操作\r\n            let batchOperationFishLine = glGame.editor.node.getChildByName(\"batchOperationFishLine\");\r\n            batchOperationFishLine.active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_batchOperation\"){//批量操作\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n            let batchOperationFishLine = glGame.editor.node.getChildByName(\"batchOperationFishLine\");\r\n            let layout = batchOperationFishLine.getChildByName(\"layout\")\r\n            batchOperationFishLine.active = true;\r\n            layout.getChildByName(\"lab_group\").getComponent(cc.Label).string = glGame.tmpGroupId+\"\";\r\n        }\r\n        if(evt.currentTarget.name == \"btn_batchOpOk\"){//批量操作 ok\r\n            let batchOperationFishLine = glGame.editor.node.getChildByName(\"batchOperationFishLine\");\r\n            let layout   = batchOperationFishLine.getChildByName(\"layout\");\r\n            let resGroupId   = layout.getChildByName(\"lab_resGroupId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let showTime = layout.getChildByName(\"lab_showTime\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let rate     = layout.getChildByName(\"lab_rate\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let frequency= layout.getChildByName(\"lab_frequency\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let scale     = layout.getChildByName(\"lab_scale\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let startPX  = layout.getChildByName(\"lab_startP_x\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let startPY  = layout.getChildByName(\"lab_startP_y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let endPX    = layout.getChildByName(\"lab_endP_x\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let endPY    = layout.getChildByName(\"lab_endP_y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let multiplication_startPX  = layout.getChildByName(\"lab_multiplication_startP_x\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let multiplication_startPY  = layout.getChildByName(\"lab_multiplication_startP_y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let multiplication_endPX    = layout.getChildByName(\"lab_multiplication_endP_x\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            let multiplication_endPY    = layout.getChildByName(\"lab_multiplication_endP_y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            for(let lineID in glGame.FList[Number(glGame.tmpGroupId)].fishLine){\r\n                if(resGroupId != \"\"){\r\n                    glGame.FList[Number(glGame.tmpGroupId)].fishLine[lineID].resGroupId = Number(resGroupId);\r\n                }\r\n                if(scale != \"\"){\r\n                    glGame.FList[Number(glGame.tmpGroupId)].fishLine[lineID].scale = Number(scale);\r\n                }\r\n                if(showTime != \"\"){\r\n                    glGame.FList[Number(glGame.tmpGroupId)].fishLine[lineID].showTime += Number(showTime);\r\n                }\r\n                if(frequency != \"\"){\r\n                    glGame.FList[Number(glGame.tmpGroupId)].fishLine[lineID].frequency = Number(frequency);\r\n                }\r\n                if(rate != \"\"){\r\n                    glGame.FList[Number(glGame.tmpGroupId)].fishLine[lineID].rate = Number(rate);\r\n                    let moveList = glGame.FList[Number(glGame.tmpGroupId)].fishLine[lineID].moveList;\r\n                    let len = moveList.length;\r\n                    for (let i =0;i<len;i++){\r\n                        moveList[i] = Number(rate);\r\n                        moveList[i+1] = 0;\r\n                        moveList[i+2] = Number(rate);\r\n                        i+=2;\r\n                    }\r\n                }\r\n                if((startPX != \"\" || startPY != \"\" || endPX != \"\" || endPY != \"\" ) || (multiplication_startPX != \"\" || multiplication_startPY != \"\" || multiplication_endPX != \"\" || multiplication_endPY != \"\" )){\r\n                    let posArray = glGame.FList[Number(glGame.tmpGroupId)].fishLine[lineID].posArray;\r\n                    if(startPX != \"\"){\r\n                        posArray[0].x += Number(startPX);\r\n                    }\r\n                    if(startPY != \"\"){\r\n                        posArray[0].y += Number(startPY);\r\n                    }\r\n                    if(endPX != \"\"){\r\n                        posArray[posArray.length-1].x += Number(endPX);\r\n                    }\r\n                    if(endPY != \"\"){\r\n                        posArray[posArray.length-1].y += Number(endPY);\r\n                    }\r\n                    if(multiplication_startPX != \"\"){\r\n                        posArray[0].x = posArray[0].x * Number(multiplication_startPX);\r\n                    }\r\n                    if(multiplication_startPY != \"\"){\r\n                        posArray[0].y = posArray[0].y * Number(multiplication_startPY);\r\n                    }\r\n                    if(multiplication_endPX != \"\"){\r\n                        posArray[posArray.length-1].x = posArray[posArray.length-1].x * Number(multiplication_endPX);\r\n                    }\r\n                    if(multiplication_endPY != \"\"){\r\n                        posArray[posArray.length-1].y = posArray[posArray.length-1].y * Number(multiplication_endPY);\r\n                    }\r\n                }\r\n            }\r\n            batchOperationFishLine.active = false;\r\n            let info = \"保存\"\r\n            if(resGroupId != \"\"){\r\n                info += \"默认鱼图 \"\r\n            }\r\n            if(showTime != \"\"){\r\n                info += \"出生时间 \"\r\n            }\r\n            if(frequency != \"\"){\r\n                info += \"动画帧频 \"\r\n            }\r\n            if(rate != \"\"){\r\n                info += \"速率 \"\r\n            }\r\n            if(startPX != \"\"){\r\n                info += \"开始点x \"\r\n            }\r\n            if(startPY != \"\"){\r\n                info += \"开始点y \"\r\n            }\r\n            if(endPX != \"\"){\r\n                info += \"结束点x \"\r\n            }\r\n            if(endPY != \"\"){\r\n                info += \"结束点y \"\r\n            }\r\n            glGame.editor.status(info+\"成功\");\r\n            layout.getChildByName(\"lab_resGroupId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string   = \"\";\r\n            layout.getChildByName(\"lab_showTime\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = \"\";\r\n            layout.getChildByName(\"lab_rate\").getChildByName(\"editbox\").getComponent(cc.EditBox).string     = \"\";\r\n            layout.getChildByName(\"lab_frequency\").getChildByName(\"editbox\").getComponent(cc.EditBox).string= \"\";\r\n            layout.getChildByName(\"lab_scale\").getChildByName(\"editbox\").getComponent(cc.EditBox).string    = \"\";\r\n            layout.getChildByName(\"lab_startP_x\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = \"\";\r\n            layout.getChildByName(\"lab_startP_y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = \"\";\r\n            layout.getChildByName(\"lab_endP_x\").getChildByName(\"editbox\").getComponent(cc.EditBox).string   = \"\";\r\n            layout.getChildByName(\"lab_endP_y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string   = \"\";\r\n            layout.getChildByName(\"lab_multiplication_startP_x\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = \"\";\r\n            layout.getChildByName(\"lab_multiplication_startP_y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = \"\";\r\n            layout.getChildByName(\"lab_multiplication_endP_x\").getChildByName(\"editbox\").getComponent(cc.EditBox).string   = \"\";\r\n            layout.getChildByName(\"lab_multiplication_endP_y\").getChildByName(\"editbox\").getComponent(cc.EditBox).string   = \"\";\r\n            this.updateFishLineToCanvas();\r\n        }\r\n        if(evt.currentTarget.name == \"optionCopyLineCloseView\") {//关闭 选项粘贴鱼线 面板\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").active = false;\r\n            let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n            optionCopyLine.active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"optionCopyLinePasterCurrentGroupOk\") {//选项 粘贴鱼线 本组\r\n            let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n            let num_str = optionCopyLine.getChildByName(\"bg\").getChildByName(\"numberEditbox\").getComponent(cc.EditBox).string;\r\n            let num = num_str == \"\" ? 1 : Number(num_str);\r\n            this.getOptionCopyLineType();\r\n            glGame.optionCopyLinePasterOtherGroup_time = this.getCopyLineTimeOffSet(0);\r\n            glGame.optionCopyLinePasterOtherGroup_fishTypeId = this.getCopyLinefishTypeId();\r\n            this.copyFishLineToLine(\r\n                glGame.currGIndex,\r\n                glGame.editor.chooseFishID,\r\n                glGame.optionCopyLineType ,\r\n                num,\r\n                glGame.optionCopyLinePasterOtherGroup_time,\r\n                glGame.optionCopyLinePasterOtherGroup_fishTypeId,\r\n                glGame.optionCopyLineTypeReverseElectionX,\r\n                glGame.optionCopyLineTypeReverseElectionY\r\n            );\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").active = false;\r\n            optionCopyLine.active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"optionCopyLinePasterOtherGroupOk\") {//选项 粘贴鱼线 其他组\r\n            let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n            let num_str = optionCopyLine.getChildByName(\"bg\").getChildByName(\"numberEditbox\").getComponent(cc.EditBox).string;\r\n            glGame.optionCopyLinePasterOtherGroup_number = num_str == \"\" ? 1 : Number(num_str);\r\n            if(!glGame.optionCopyLineType){\r\n                this.getOptionCopyLineType();\r\n            }\r\n            glGame.optionCopyLinePasterOtherGroup_groupID = Number(glGame.currGIndex + \"\");\r\n            glGame.optionCopyLinePasterOtherGroup_fishID = Number(glGame.editor.chooseFishID + \"\");\r\n            glGame.optionCopyLinePasterOtherGroup_time = this.getCopyLineTimeOffSet(0);\r\n            glGame.optionCopyLinePasterOtherGroup_fishTypeId = this.getCopyLinefishTypeId();\r\n            glGame.optionCopyLinePasterOtherGroup_type = Number(glGame.optionCopyLineType + \"\");\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").active = false;\r\n            optionCopyLine.active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_copyToGroup\"){//鱼线复制到某个鱼组\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").active = false;\r\n            glGame.copyToGroup = Number(glGame.editor.chooseFishID+\"\");\r\n            glGame.editor.status(\"请选择 鱼组列表某个Item 鼠标右键\");\r\n        }\r\n        if(evt.currentTarget.name == \"btn_Paste\"){//粘贴组到这个鱼组\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n            //跨组拷贝\r\n            this.copyFishLineToGroup(glGame.currGIndex,\r\n                glGame.tmpGroupId,\r\n                glGame.editor.chooseFishID,\r\n                -1,1);\r\n            glGame.copyToGroup = null;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_copyLine\"){//鱼线 - 拷贝\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").active = true;\r\n            glGame.copyLineFIshID = Number(glGame.editor.chooseFishID+\"\");\r\n            glGame.copyLineFIshID_formGroup = Number(Number(glGame.currGIndex)+\"\");\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_pastFishLine\").active = true;\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").height = 245;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_pastFishLine\") {//本组 粘贴 鱼线\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").height = 205;\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_pastFishLine\").active = false;\r\n            //粘贴到 本组\r\n            this.copyFishLineToGroup(glGame.currGIndex,glGame.currGIndex,glGame.copyLineFIshID,-1,1);\r\n            glGame.copyLineFIshID = null;\r\n            glGame.copyLineFIshID_formGroup = null;\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_PasteLine\") {//跨组 粘贴 鱼线\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").height = 205;\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_pastFishLine\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_PasteLine\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_PasteOptionLine\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n            //粘贴到 glGame.tmpGroupId 组\r\n            this.copyFishLineToGroup(\r\n                glGame.copyLineFIshID_formGroup,\r\n                glGame.tmpGroupId,\r\n                glGame.copyLineFIshID,\r\n                -1,\r\n                1,\r\n                glGame.optionCopyLineTypeReverseElectionX,\r\n                glGame.optionCopyLineTypeReverseElectionY\r\n            );\r\n            glGame.copyLineFIshID = null;\r\n            glGame.copyLineFIshID_formGroup = null;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_PasteOptionLine\") {//跨组 粘贴 选项 鱼线\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").height = 205;\r\n            glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_pastFishLine\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_PasteLine\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_PasteOptionLine\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n            this.copyFishLineToGroup(\r\n                glGame.optionCopyLinePasterOtherGroup_groupID,\r\n                glGame.tmpGroupId,\r\n                glGame.optionCopyLinePasterOtherGroup_fishID,\r\n                glGame.optionCopyLinePasterOtherGroup_type,\r\n                glGame.optionCopyLinePasterOtherGroup_number,\r\n                glGame.optionCopyLinePasterOtherGroup_time,\r\n                glGame.optionCopyLineTypeReverseElectionX,\r\n                glGame.optionCopyLineTypeReverseElectionY\r\n            );\r\n            glGame.optionCopyLinePasterOtherGroup_groupID = null;\r\n            glGame.optionCopyLinePasterOtherGroup_fishID = null;\r\n            glGame.optionCopyLinePasterOtherGroup_typ = null;\r\n            glGame.optionCopyLinePasterOtherGroup_number = null;\r\n            glGame.optionCopyLinePasterOtherGroup_time = null;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_copyGroup\"){  //鱼组 - 直接拷贝\r\n            this.copyGroupToGroup(-1);\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").active  = false;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_showMc\" || evt.currentTarget.name == \"btn_playGroup\" || evt.currentTarget.name == \"menu3Button\"){//全组播放 、 播放鱼组、右键菜单3 - 播放整组\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_pushGroup\").active = true;\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_startPlay\").active = !this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"btn_pushGroup\").active;\r\n            this.node.getChildByName(\"fishGroupProgress\").isGroupPlay = true;\r\n            this.node.getChildByName(\"fishGroupProgress\").active = true;\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"slider\").getComponent(cc.Slider).progress = 0;\r\n            this.node.getChildByName(\"fishGroupProgress\").getChildByName(\"progressBar\").getComponent(cc.ProgressBar).progress = 0;\r\n            if(glGame.FList){\r\n                let list = glGame.FList[glGame.currGIndex].fishLine;\r\n                let sortArr = [];\r\n                if(list && glGame.GFishList.length > 0){\r\n                    let len = glGame.GFishList.length;\r\n                    for (let i = 0;i<len;i++){\r\n                        let fish = glGame.GFishList[i];\r\n                        let t = Number(fish.getComponent(\"fish_Unit\").getRunTime());\r\n                        let id = fish.lineID;\r\n                        sortArr.push({id:id,t:t});\r\n                    }\r\n                    sortArr.sort((a,b)=>{return b.t-a.t});\r\n                    for (let i = 0;i<len;i++){\r\n                        let fish = glGame.GFishList[i];\r\n                        fish.getComponent(\"fish_Unit\").setMoveData(list[fish.lineID]);\r\n                        let id = fish.lineID;\r\n                        fish.getComponent(\"fish_Unit\").startMove(sortArr[0].id == id);\r\n                    }\r\n                }else{\r\n                    glGame.editor.status(\"当前没有鱼，无法播放\");\r\n                }\r\n            }else{\r\n                glGame.editor.status(\"当前没有鱼组、鱼，无法播放\");\r\n            }\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").active  = false;\r\n            this.clickMenu(\"view_menu2\",evt.currentTarget.name);\r\n        }\r\n        if(evt.currentTarget.name == \"mask\"){//遮罩\r\n        }\r\n        if(evt.currentTarget.name == \"btn_closeresSView\"){//关闭 资源列表 - 创建鱼 弹出窗\r\n            this.node.getChildByName(\"creatorFish\").active = !this.node.getChildByName(\"creatorFish\").active;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_deleteLine\"){//鱼线列表 右键菜单 删除鱼线\r\n            let i = 0;\r\n            for(let key in glGame.FList[glGame.currGIndex].fishLine){\r\n                i++;\r\n            }\r\n            if(i<=1){\r\n                glGame.editor.status(\"当前只有一条鱼了，鱼线列表如需清除直接删除鱼组即可\");\r\n                return;\r\n            }\r\n            this.node.getChildByName(\"chooseFishingLine\").active = false;\r\n            delete glGame.FList[glGame.currGIndex].fishLine[Number(glGame.editor.chooseFishID+\"\")];//移除数据\r\n            this.updateFishLineToCanvas(glGame.editor.chooseFishID);//更新\r\n            glGame.editor.chooseFishID = null;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_deleteGroup\"){//创建鱼 弹窗 - 创建按钮\r\n            let len = 0;\r\n            for(let key in glGame.FList){\r\n                len++;\r\n            }\r\n            if(len>1){\r\n                if(glGame.tmpGroupId == glGame.currGIndex){//如果删除了当前的组就要清空画布\r\n                    glGame.currLineItem = null;\r\n                    glGame.drawBezier.clearCurrFishLine();\r\n                }\r\n                delete glGame.FList[glGame.tmpGroupId];\r\n                this.updateGroupToCanteinerAndFishLineToCanvas(glGame.tmpGroupId);\r\n                glGame.tmpGroupId = null;\r\n            }else{\r\n                glGame.editor.status(\"删除失败，最后一个无法删除\");\r\n            }\r\n            this.node.getChildByName(\"fishGroupMenu\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_creat\"){//创建鱼 弹窗 - 创建\\更新 按钮\r\n            let rate         = this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_rate\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            if(rate == \"\"){\r\n                glGame.editor.alert(\"增加速率\");\r\n                return;\r\n            }\r\n            let showTime        = this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_showTime\").getChildByName(\"editbox\").getComponent(cc.EditBox).string;\r\n            if(showTime == \"\"){\r\n                glGame.editor.alert(\"增加出现时间\");\r\n                return;\r\n            }\r\n            this.creatFishData();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_outSettingViewClose\"){//导出 设置 关闭按钮\r\n           this.node.getChildByName(\"outSettingView\").active = false;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_outSetting\"){//导出 设置\r\n           this.node.getChildByName(\"outSettingView\").active = true;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_out\"){//导出 项目 齐全版本\r\n            this.outJson(0);\r\n        }\r\n        if(evt.currentTarget.name == \"btn_out2\"){//导出 客户端\r\n            this.outJson(1);\r\n        }\r\n        if(evt.currentTarget.name == \"btn_out3\"){//导出 服务端\r\n            this.outJson(2);\r\n        }\r\n        if(evt.currentTarget.name == \"btn_out4\"){//打开 个性化导出\r\n            this.initOrReFreshOutSettingView();\r\n            this.node.getChildByName(\"outSettingView\").active = true;\r\n        }\r\n        if(evt.currentTarget.name == \"btn_setServerOutConfig\"){//开始导出 服务器 预设\r\n            glGame.OutSettingData = glGame.ServerOutConfig;\r\n            this.initOrReFreshOutSettingView();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_setClientOutConfig\"){//开始导出 客户端 预设\r\n            glGame.OutSettingData = glGame.ClientOutConfig;\r\n            this.initOrReFreshOutSettingView();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_setEditOutConfig\"){//开始导出 编辑器 预设\r\n            glGame.OutSettingData = glGame.EditOutConfig;\r\n            this.initOrReFreshOutSettingView();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_outSettingFishLineJson\"){//开始导出 配置导出界面\r\n            this.outPersonaliseJson();\r\n        }\r\n        if(evt.currentTarget.name == \"btn_saveSettingFishLineJson\"){//保存 配置导出界面  设置 到json\r\n            this.saveOutPersonaliseJsonSetting(true);\r\n            glGame.editor.alert(\"保存成功！\");\r\n        }\r\n        if(evt.currentTarget.name == \"btn_readSettingFishLineJson\"){//读取 配置导出界面  设置\r\n            if(window.ipcRenderer) window.ipcRenderer.send(\"readOutSettingData\");\r\n        }\r\n        if(evt.currentTarget.name == \"btn_in\"){//导入鱼线项目文件\r\n            this.clickMenu(\"view_menu1\",evt.currentTarget.name);\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"inWindow\");\r\n        }\r\n        if(evt.currentTarget.name == \"btn_app_close\"){//软件 关闭\r\n           if(window.ipcRenderer)window.ipcRenderer.send(\"closewindow\");\r\n        }\r\n        if(evt.currentTarget.name == \"btn_app_max\"){//软件 最大化\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"maxWindow\");\r\n        }\r\n        if(evt.currentTarget.name == \"btn_app_min\"){//软件 最小化\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"minWindow\");\r\n        }\r\n        if(evt.currentTarget.name == \"closeFishGroup\"){\r\n            this.node.getChildByName(\"fishGroupCanteiner\").active = !this.node.getChildByName(\"fishGroupCanteiner\").active;\r\n        }\r\n        //鱼资源编辑 界面 导入鱼图资源json\r\n        if(evt.currentTarget.name == \"inFishResJsonBtn\"){\r\n            if(window.ipcRenderer){\r\n                window.ipcRenderer.send(\"inFishResJosnFile\");\r\n            }\r\n        }\r\n        if (evt.currentTarget.name == \"btn_fishTableImport\"){//打开 导入鱼表界面\r\n            this.node.getChildByName(\"fishTableImport\").active = true;\r\n        }\r\n        if (evt.currentTarget.name == \"btn_closeFishTableImport\"){//关闭 导入鱼表界面\r\n            this.node.getChildByName(\"fishTableImport\").active = false;\r\n        }\r\n        if (evt.currentTarget.name == \"btn_importExcel\"){//导入鱼表按钮\r\n            this.node.getChildByName(\"fishTableImport\").active = false;\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"inFishTable\");\r\n        }\r\n        if (evt.currentTarget.name == \"btn_dowmLoadExp\"){//下载模板按钮\r\n            if(window.ipcRenderer)window.ipcRenderer.send(\"dowmLoadExpFishTable\");\r\n        }\r\n        this.node.getChildByName(\"view_menu1\").active = false;\r\n        this.node.getChildByName(\"view_menu2\").active = false;\r\n        this.node.getChildByName(\"view_menu3\").active = false;\r\n        cc.warn(\">> click \",evt.currentTarget.name)\r\n    },\r\n    //撤销\r\n    btn_revoke(){\r\n        if(glGame.currentFish != null){\r\n            //删除最后一个\r\n            if(glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].posArray.length > 4){\r\n\r\n                glGame.isAdd = false;\r\n                if(glGame.RestoreFList == null){\r\n                    glGame.RestoreFList = [];\r\n                    glGame.RestoreIndex = 0;\r\n                }\r\n\r\n                glGame.RestoreFList.push(JSON.parse(JSON.stringify(glGame.FList)));\r\n                while(glGame.RestoreFList.length > 10){\r\n                    glGame.RestoreFList.shift();\r\n                }\r\n\r\n                glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].posArray.pop();\r\n                glGame.FList[glGame.currGIndex].fishLine[glGame.currentFish.lineID].posArray.pop();\r\n                glGame.editor.getFishToCanvas(glGame.currentFish.lineID);\r\n            }else{\r\n                glGame.editor.status(\"无法删除最后3根线\");\r\n            }\r\n        }else{\r\n            glGame.editor.status(\"暂无恢复\");\r\n        }\r\n    },\r\n    //重做\r\n    btn_redo(){\r\n        if(glGame.currentFish != null){\r\n            if(glGame.RestoreFList != null && glGame.RestoreFList.length > 0){\r\n                glGame.FList = glGame.RestoreFList.pop();\r\n                glGame.editor.getFishToCanvas(glGame.currentFish.lineID);\r\n            }else{\r\n                glGame.editor.status(\"没有可以恢复的数据了\");\r\n            }\r\n        }else{\r\n            glGame.editor.status(\"暂无恢复\");\r\n        }\r\n    },\r\n    //type == 0 编辑器 ， 1 客户端 ，2服务端\r\n    outJson(type){\r\n        let newD = JSON.parse(JSON.stringify(glGame.FList));\r\n        for (let groupID in newD){\r\n            let fishLine = newD[groupID].fishLine;\r\n            if(type == 1 || type == 2){\r\n                delete newD[groupID].desc;\r\n            }\r\n            for (let fishID in fishLine){\r\n                let line = fishLine[fishID];\r\n                line.runTime = glGame.getMaxIndexByTime(line.posArray,line.moveList);//模拟运行，计算运行时间\r\n                line.edgeList = glGame.edgeComputingToTime(line.posArray,line.moveList,line.runTime,Number(line.showTime.toFixed(2)));//计算到达边缘点时间\r\n                for (let i=0;i<line.posArray.length;i++){\r\n                    let p = line.posArray[i];\r\n                    p.x = Number(p.x.toFixed(1));\r\n                    p.y = Number(p.y.toFixed(1));\r\n                    if(p.z != undefined){\r\n                        delete p.z;\r\n                    }\r\n                }\r\n                for (let i=0;i<line.moveList.length;i++){\r\n                    if(line.moveList[i])line.moveList[i] = Number(line.moveList[i].toFixed(2));\r\n                }\r\n                //删除无意义字段\r\n                if(fishLine[fishID].resID != null){\r\n                    delete fishLine[fishID].resID;\r\n                }\r\n                if(fishLine[fishID].groupID != null){\r\n                    delete fishLine[fishID].groupID;\r\n                }\r\n                if(type == 2 && fishLine[fishID].posArray != null){\r\n                    delete fishLine[fishID].posArray;\r\n                }\r\n                if(type == 2 && fishLine[fishID].moveList != null){\r\n                    delete fishLine[fishID].moveList;\r\n                }\r\n                if(type == 2 && fishLine[fishID].frequency != null){\r\n                    delete fishLine[fishID].frequency;\r\n                }\r\n                if(type == 1 || type == 2 && fishLine[fishID].desc != null){\r\n                    delete fishLine[fishID].desc;\r\n                }\r\n                if(type == 1 || type == 2 && fishLine[fishID].resType != null){\r\n                    delete fishLine[fishID].resType;\r\n                }\r\n                if(type == 1 || type == 2 && fishLine[fishID].scale != null){\r\n                    delete fishLine[fishID].scale;\r\n                }\r\n                if(type == 1 && fishLine[fishID].edgeList != null){\r\n                    delete fishLine[fishID].edgeList;\r\n                }\r\n            }\r\n        }\r\n        if(window.ipcRenderer) window.ipcRenderer.send(\"outjson\",JSON.stringify(newD));\r\n    },\r\n    //设置 配置导出界面 导出面板\r\n    initOrReFreshOutSettingView(){\r\n        if(glGame.OutSettingData != null) {\r\n            let outSettingView = this.node.getChildByName(\"outSettingView\");\r\n            let lineLayout = outSettingView.getChildByName(\"line_layout\");\r\n            let groupLayout = outSettingView.getChildByName(\"group_layout\");\r\n            for (let i = 0;i<lineLayout.childrenCount;i++){\r\n                let toggle = lineLayout.children[i].getChildByName(\"isOutToggle\").getComponent(cc.Toggle);\r\n                let key = lineLayout.children[i].name;\r\n                if(glGame.OutSettingData.line[key] != null && glGame.OutSettingData.line[key] != \"\"){\r\n                    lineLayout.children[i].getComponent(cc.EditBox).string = glGame.OutSettingData.line[key];\r\n                }\r\n                toggle.isChecked = glGame.OutSettingData.line_isOut[key];\r\n            }\r\n            for (let i = 0;i<groupLayout.childrenCount;i++){\r\n                let toggle = groupLayout.children[i].getChildByName(\"isOutToggle\").getComponent(cc.Toggle);\r\n                let key = groupLayout.children[i].name;\r\n                if(glGame.OutSettingData.group[key] != null && glGame.OutSettingData.group[key] != \"\"){\r\n                    groupLayout.children[i].getComponent(cc.EditBox).string = glGame.OutSettingData.group[key];\r\n                }\r\n                toggle.isChecked = glGame.OutSettingData.group_isOut[key];\r\n            }\r\n        }\r\n    },\r\n    //编辑设置信息\r\n    saveOutPersonaliseJsonSetting(isSave){\r\n        if(glGame.OutSettingData == null) {\r\n            glGame.OutSettingData = {};\r\n            glGame.OutSettingData.line = {};\r\n            glGame.OutSettingData.line_isOut = {};\r\n            glGame.OutSettingData.group = {};\r\n            glGame.OutSettingData.group_isOut = {};\r\n        }\r\n        let outSettingView = this.node.getChildByName(\"outSettingView\");\r\n        let lineLayout = outSettingView.getChildByName(\"line_layout\");\r\n        let groupLayout = outSettingView.getChildByName(\"group_layout\");\r\n        for (let i = 0;i<lineLayout.childrenCount;i++){\r\n            let toggle = lineLayout.children[i].getChildByName(\"isOutToggle\").getComponent(cc.Toggle);\r\n            let key = lineLayout.children[i].name;\r\n            let newKey = lineLayout.children[i].getComponent(cc.EditBox).string.replace(/\\s+/g,\"\")+\"\";//去掉所有空格\r\n            glGame.OutSettingData.line[key] = newKey != \"\" ? newKey : key;\r\n            glGame.OutSettingData.line_isOut[key] = toggle.isChecked;\r\n\r\n        }\r\n        for (let i = 0;i<groupLayout.childrenCount;i++){\r\n            let toggle = groupLayout.children[i].getChildByName(\"isOutToggle\").getComponent(cc.Toggle);\r\n            let key = groupLayout.children[i].name;\r\n            let newKey = groupLayout.children[i].getComponent(cc.EditBox).string.replace(/\\s+/g,\"\")+\"\";//去掉所有空格\r\n            glGame.OutSettingData.group[key] = newKey != \"\" ? newKey : key;\r\n            glGame.OutSettingData.group_isOut[key] = toggle.isChecked;\r\n\r\n        }\r\n        if(isSave){\r\n            if(window.ipcRenderer) window.ipcRenderer.send(\"OutSettingData\",JSON.stringify(glGame.OutSettingData));\r\n        }\r\n    },\r\n    //配置导出界面 导出\r\n    outPersonaliseJson(){\r\n        this.saveOutPersonaliseJsonSetting(false);\r\n        console.warn(\"glGame.OutSettingData  配置导出界面 导出   配置 > \",glGame.OutSettingData);\r\n        let newD = JSON.parse(JSON.stringify(glGame.FList));\r\n        //重新 计算 runTime、edgeList 缩短 line.posArray、line.moveList int数值长度\r\n        for (let groupID in newD){\r\n            let fishLine = newD[groupID].fishLine;\r\n            for (let lineID in fishLine){\r\n                let line = fishLine[lineID];\r\n                line.runTime = glGame.getMaxIndexByTime(line.posArray,line.moveList);//模拟运行，计算运行时间\r\n                line.edgeList = glGame.edgeComputingToTime(line.posArray,line.moveList,line.runTime,Number(line.showTime.toFixed(2)));//计算到达边缘点时间\r\n                for (let i=0;i<line.posArray.length;i++){\r\n                    let p = line.posArray[i];\r\n                    p.x = Number(p.x.toFixed(1));\r\n                    p.y = Number(p.y.toFixed(1));\r\n                    if(p.z != undefined){\r\n                        delete p.z;\r\n                    }\r\n                }\r\n                for (let i=0;i<line.moveList.length;i++){\r\n                    if(line.moveList[i])line.moveList[i] = Number(line.moveList[i].toFixed(2));\r\n                }\r\n            }\r\n        }\r\n        //改键名\r\n        for (let groupID in newD){\r\n            let data = newD[groupID];\r\n            let fishLine = newD[groupID].fishLine;\r\n            for (let lineID in fishLine){\r\n                let line = fishLine[lineID];\r\n                if(glGame.OutSettingData.line_isOut[\"groupID\"] != null && glGame.OutSettingData.line_isOut[\"groupID\"] == false){//是否保留 groupID\r\n                    delete line.groupID;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"groupID\"] != null && glGame.OutSettingData.line[\"groupID\"] != \"\" && glGame.OutSettingData.line[\"groupID\"] != \"groupID\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"groupID\"]] = Number(line.groupID+\"\");\r\n                        delete line.groupID;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"lineID\"] != null && glGame.OutSettingData.line_isOut[\"lineID\"] == false){//是否保留 lineID\r\n                    delete line.lineID;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"lineID\"] != null && glGame.OutSettingData.line[\"lineID\"] != \"\" && glGame.OutSettingData.line[\"lineID\"] != \"lineID\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"lineID\"]] = Number(line.lineID+\"\");\r\n                        delete line.lineID;\r\n                    }\r\n                }\r\n\r\n                if(glGame.OutSettingData.line_isOut[\"resGroupId\"] != null && glGame.OutSettingData.line_isOut[\"resGroupId\"] == false){//是否保留 resGroupId\r\n                    delete line.resGroupId;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"resGroupId\"] != null && glGame.OutSettingData.line[\"resGroupId\"] != \"\" && glGame.OutSettingData.line[\"resGroupId\"] != \"resGroupId\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"resGroupId\"]] = Number(line.resGroupId+\"\");\r\n                        delete line.resGroupId;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"fishTypeId\"] != null && glGame.OutSettingData.line_isOut[\"fishTypeId\"] == false){//是否保留 fishTypeId\r\n                    delete line.fishTypeId;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"fishTypeId\"] != null && glGame.OutSettingData.line[\"fishTypeId\"] != \"\" && glGame.OutSettingData.line[\"fishTypeId\"] != \"fishTypeId\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"fishTypeId\"]] = Number(line.fishTypeId+\"\");\r\n                        delete line.fishTypeId;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"showTime\"] != null && glGame.OutSettingData.line_isOut[\"showTime\"] == false){//是否保留 showTime\r\n                    delete line.showTime;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"showTime\"] != null && glGame.OutSettingData.line[\"showTime\"] != \"\" && glGame.OutSettingData.line[\"showTime\"] != \"showTime\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"showTime\"]] = Number(line.showTime+\"\");\r\n                        delete line.showTime;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"frequency\"] != null && glGame.OutSettingData.line_isOut[\"frequency\"] == false){//是否保留 frequency\r\n                    delete line.frequency;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"frequency\"] != null && glGame.OutSettingData.line[\"frequency\"] != \"\" && glGame.OutSettingData.line[\"frequency\"] != \"frequency\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"frequency\"]] = Number(line.frequency+\"\");\r\n                        delete line.frequency;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"rate\"] != null && glGame.OutSettingData.line_isOut[\"rate\"] == false){//是否保留 rate\r\n                    delete line.rate;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"rate\"] != null && glGame.OutSettingData.line[\"rate\"] != \"\" && glGame.OutSettingData.line[\"rate\"] != \"rate\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"rate\"]] = Number(line.rate+\"\");\r\n                        delete line.rate;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"scale\"] != null && glGame.OutSettingData.line_isOut[\"scale\"] == false){//是否保留 scale\r\n                    delete line.scale;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"scale\"] != null && glGame.OutSettingData.line[\"scale\"] != \"\" && glGame.OutSettingData.line[\"scale\"] != \"scale\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"scale\"]] = Number(line.scale+\"\");\r\n                        delete line.scale;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"desc\"] != null && glGame.OutSettingData.line_isOut[\"desc\"] == false){//是否保留 desc\r\n                    delete line.desc;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"desc\"] != null && glGame.OutSettingData.line[\"desc\"] != \"\" && glGame.OutSettingData.line[\"desc\"] != \"desc\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"desc\"]] = line.desc+\"\";\r\n                        delete line.desc;\r\n                    }\r\n                }\r\n\r\n                if(glGame.OutSettingData.line_isOut[\"runTime\"] != null && glGame.OutSettingData.line_isOut[\"runTime\"] == false){//是否保留 runTime\r\n                    delete line.runTime;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"runTime\"] != null && glGame.OutSettingData.line[\"runTime\"] != \"\" && glGame.OutSettingData.line[\"runTime\"] != \"runTime\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"runTime\"]] = Number(line.runTime+\"\");\r\n                        delete line.runTime;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"posArray\"] != null && glGame.OutSettingData.line_isOut[\"posArray\"] == false){//是否保留 posArray\r\n                    delete line.posArray;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"posArray\"] != null && glGame.OutSettingData.line[\"posArray\"] != \"\" && glGame.OutSettingData.line[\"posArray\"] != \"posArray\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"posArray\"]] = line.posArray;\r\n                        delete line.posArray;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"moveList\"] != null && glGame.OutSettingData.line_isOut[\"moveList\"] == false){//是否保留 moveList\r\n                    delete line.moveList;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"moveList\"] != null && glGame.OutSettingData.line[\"moveList\"] != \"\" && glGame.OutSettingData.line[\"moveList\"] != \"moveList\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"moveList\"]] = line.moveList;\r\n                        delete line.moveList;\r\n                    }\r\n                }\r\n                if(glGame.OutSettingData.line_isOut[\"edgeList\"] != null && glGame.OutSettingData.line_isOut[\"edgeList\"] == false){//是否保留 edgeList\r\n                    delete line.edgeList;\r\n                }else{\r\n                    if(glGame.OutSettingData.line[\"edgeList\"] != null && glGame.OutSettingData.line[\"edgeList\"] != \"\" && glGame.OutSettingData.line[\"edgeList\"] != \"edgeList\"){//是否改key\r\n                        line[glGame.OutSettingData.line[\"edgeList\"]] = line.edgeList;\r\n                        delete line.edgeList;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(glGame.OutSettingData.group_isOut[\"id\"] != null && glGame.OutSettingData.group_isOut[\"id\"] == false){//是否保留 id\r\n                delete data.id;\r\n            }else{\r\n                if(glGame.OutSettingData.group[\"id\"] != null && glGame.OutSettingData.group[\"id\"] != \"\" && glGame.OutSettingData.group[\"id\"] != \"id\"){//是否改key\r\n                    data[glGame.OutSettingData.group[\"id\"]] = data.id;\r\n                    delete data.id;\r\n                }\r\n            }\r\n            if(glGame.OutSettingData.group_isOut[\"fishLine\"] != null && glGame.OutSettingData.group_isOut[\"fishLine\"] == false){//是否保留 fishLine\r\n                delete data.fishLine;\r\n            }else{\r\n                if(glGame.OutSettingData.group[\"fishLine\"] != null && glGame.OutSettingData.group[\"fishLine\"] != \"\" && glGame.OutSettingData.group[\"fishLine\"] != \"fishLine\"){//是否改key\r\n                    data[glGame.OutSettingData.group[\"fishLine\"]] = data.fishLine;\r\n                    delete data.fishLine;\r\n                }\r\n            }\r\n            if(glGame.OutSettingData.group_isOut[\"type\"] != null && glGame.OutSettingData.group_isOut[\"type\"] == false){//是否保留 type\r\n                delete data.type;\r\n            }else{\r\n                if(glGame.OutSettingData.group[\"type\"] != null && glGame.OutSettingData.group[\"type\"] != \"\" && glGame.OutSettingData.group[\"type\"] != \"type\"){//是否改key type\r\n                    data[glGame.OutSettingData.group[\"type\"]] = data.type;\r\n                    delete data.type;\r\n                }\r\n            }\r\n            if(glGame.OutSettingData.group_isOut[\"range\"] != null && glGame.OutSettingData.group_isOut[\"range\"] == false){//是否保留 range\r\n                delete data.range;\r\n            }else{\r\n                if(glGame.OutSettingData.group[\"range\"] != null && glGame.OutSettingData.group[\"range\"] != \"\" && glGame.OutSettingData.group[\"range\"] != \"range\"){//是否改key\r\n                    data[glGame.OutSettingData.group[\"range\"]] = data.range;\r\n                    delete data.range;\r\n                }\r\n            }\r\n            if(glGame.OutSettingData.group_isOut[\"desc\"] != null && glGame.OutSettingData.group_isOut[\"desc\"] == false){//是否保留 desc\r\n                delete data.desc;\r\n            }else{\r\n                if(glGame.OutSettingData.group[\"desc\"] != null && glGame.OutSettingData.group[\"desc\"] != \"\" && glGame.OutSettingData.group[\"desc\"] != \"desc\"){//是否改key\r\n                    data[glGame.OutSettingData.group[\"desc\"]] = data.desc;\r\n                    delete data.desc;\r\n                }\r\n            }\r\n        }\r\n        if(window.ipcRenderer) window.ipcRenderer.send(\"outjson\",JSON.stringify(newD));\r\n    },\r\n    //获取鱼线 - 选项复制 - 类型\r\n    getOptionCopyLineType(){\r\n        let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n        let bgContainer = optionCopyLine.getChildByName(\"bg\");\r\n        let toggleContainer = bgContainer.getChildByName(\"toggleContainer\");\r\n        let type       = 0;\r\n        for (let i=0;i<toggleContainer.childrenCount;i++){\r\n            if(toggleContainer.children[i].getComponent(cc.Toggle).isChecked){\r\n                let name = toggleContainer.children[i].name;\r\n                type = Number(name.split(\"optionCopyLineToggle\")[1]);\r\n                break;\r\n            }\r\n        }\r\n        glGame.optionCopyLineType = type;\r\n        glGame.optionCopyLineTypeReverseElectionX = bgContainer.getChildByName(\"toggleX\").getComponent(cc.Toggle).isChecked ? 1 : 0;\r\n        glGame.optionCopyLineTypeReverseElectionY = bgContainer.getChildByName(\"toggleY\").getComponent(cc.Toggle).isChecked ? 1 : 0;\r\n        console.warn(\">>x翻转选项 glGame.optionCopyLineTypeReverseElectionX \",glGame.optionCopyLineTypeReverseElectionX)\r\n        console.warn(\">>y翻转选项 glGame.optionCopyLineTypeReverseElectionY \",glGame.optionCopyLineTypeReverseElectionY)\r\n    },\r\n    //Toggle 点击事件\r\n    clickToggle(evt){\r\n        if(evt.target.name.indexOf(\"optionCopyLineToggle\") != -1) {//复制鱼线 选项 类型\r\n            glGame.optionCopyLineType = Number(evt.target.name.split(\"optionCopyLineToggle\")[1]);\r\n        }\r\n        if(evt.target.name.indexOf(\"optionCopyGroupToggle\") != -1) {//复制鱼组 选项\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = false;\r\n            let type = Number(evt.target.name.split(\"optionCopyGroupToggle\")[1]);\r\n            this.copyGroupToGroup(type);\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").active = false;\r\n            glGame.editor.node.getChildByName(\"fishGroupMenu\").getChildByName(\"bg\").getChildByName(\"btn_copyGroupOption\").getChildByName(\"optionCopyGroup\").active = false;\r\n        }\r\n        if(evt.target.name.indexOf(\"newpostoggle\") != -1){\r\n            let newpos = Number(evt.target.name.split(\"newpostoggle\")[1]);\r\n            let arr = glGame.P13[Number(newpos)];\r\n            glGame.startPoint = arr[0];    //创建鱼的第一条 贝塞尔 线 开始点\r\n            glGame.controlPoint = arr[1];  //创建鱼的第一条 贝塞尔 线 控制点\r\n            glGame.endPoint = arr[2];       //创建鱼的第一条 贝塞尔 线 结束点\r\n        }\r\n    },\r\n    //打开关于界面\r\n    openAbout(){\r\n        if(this.node.getChildByName(\"view_about\").active)return;\r\n        this.node.getChildByName(\"view_about\").stopAllActions();\r\n        this.node.getChildByName(\"view_about\").opacity = 0;\r\n        this.node.getChildByName(\"view_about\").active = true;\r\n        this.node.getChildByName(\"view_about\").runAction(cc.fadeTo(0.3,255));\r\n    },\r\n    //关闭关于界面\r\n    closeAbout(){\r\n        this.node.getChildByName(\"view_about\").active = false;\r\n    },\r\n    //点击菜单\r\n    clickMenu(menuName,btnName){\r\n        this.node.getChildByName(menuName).active = false;\r\n    },\r\n    //创建鱼到资源列表\r\n    creatorFishForResView(){\r\n        cc.warn(\" 1 > 创建鱼到资源列表  glGame.fishTable \",glGame.fishTable)\r\n        this.node.getChildByName(\"fishTableImport\").active = false;\r\n        let content = this.node.getChildByName(\"fishCanteiner\").getChildByName(\"fishScrollView\").getChildByName(\"view\").getChildByName(\"content\");\r\n        content.removeAllChildren(true);\r\n        let fish = this.node.getChildByName(\"fishCanteiner\").getChildByName(\"fish\");\r\n        for (let fishTypeId in glGame.fishTable){\r\n            let item = glGame.fishTable[fishTypeId];\r\n            let filename = glGame.filePreFix+item.resGroupId;\r\n            let sprthis = glGame.getAtlasForTexture(filename,filename+\"_move1\");\r\n            if(sprthis){\r\n                let scale = 130 / sprthis.getOriginalSize().width;\r\n                let newFish = cc.instantiate(fish);\r\n                newFish.fishTypeId = Number(fishTypeId);\r\n                newFish.filename = filename;\r\n                newFish.name = \"resList_fish_\"+item.resGroupId\r\n                newFish.active = true;\r\n                newFish.parent = null;\r\n                newFish.width  = sprthis.getOriginalSize().width * scale;\r\n                newFish.height = sprthis.getOriginalSize().height * scale;\r\n                content.addChild(newFish);\r\n                content.height += newFish.height;\r\n                let data = glGame.editor.getFishResConfig(Number(fishTypeId));\r\n                let baseFrameRate   = Number(data.frameRate) * 10;//动态获取频率\r\n                newFish.getComponent(\"fish_Unit\").initResEditorFish(filename,130,1,baseFrameRate);\r\n            }else{\r\n                cc.warn(\"> 创建鱼到资源列表 无法加载的资源 filename \",filename,\" sprthis \",sprthis)\r\n            }\r\n        }\r\n    },\r\n    //打开创建鱼界面 鱼线创建 创建鱼线\r\n    showCreatFishView(isCreat){\r\n        glGame.editor.node.getChildByName(\"creatorFish\").active = true;\r\n        glGame.isCreat = isCreat;\r\n        if(glGame.isCreat){\r\n            glGame.editor.node.getChildByName(\"creatorFish\").getChildByName(\"selectList\").active = true;\r\n            glGame.editor.node.getChildByName(\"creatorFish\").getChildByName(\"btn_creat\").getChildByName(\"Background\").getChildByName(\"Label\").getComponent(cc.Label).string = \"创建\"\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_lineId\").getChildByName(\"mask\").active = false;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_rate\").getChildByName(\"mask\").active = false;\r\n            let newID = glGame.lineID+glGame.GFishList.length+1;\r\n            let baseFishInfo = glGame.editor.getFishResConfig(this.clickFishTableTypeFishId);\r\n            let fishName = baseFishInfo.fishName;\r\n            cc.warn(\">> baseFishInfo \",baseFishInfo)\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_resGroupId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = baseFishInfo.resGroupId+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_lineId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = newID+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_fishTypeId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = this.clickFishTableTypeFishId+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_group\").getComponent(cc.Label).string = glGame.currGIndex+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_rate\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = glGame.speed;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_frequency\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = glGame.runSpeed;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_scale\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = glGame.scale;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_showTime\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = glGame.showTime;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"lab_title\").getComponent(cc.Label).string = \"创建 resGroupId:\"+baseFishInfo.resGroupId+\" (\"+fishName+\")\";\r\n        }\r\n        else{\r\n            glGame.editor.node.getChildByName(\"creatorFish\").getChildByName(\"selectList\").active = false;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_rate\").getChildByName(\"mask\").active = true;\r\n            glGame.editor.node.getChildByName(\"creatorFish\").getChildByName(\"btn_creat\").getChildByName(\"Background\").getChildByName(\"Label\").getComponent(cc.Label).string = \"更新\"\r\n            glGame.editor.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_group\").getComponent(cc.Label).string = glGame.currGIndex+\"\";\r\n            let info = glGame.FList[glGame.currGIndex].fishLine[glGame.editor.chooseFishID];\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"lab_title\").getComponent(cc.Label).string = \"鱼线信息 \"+glGame.editor.chooseFishID;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_resGroupId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = info.resGroupId+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_lineId\").getChildByName(\"mask\").active = true;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_fishTypeId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = info.fishTypeId+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_lineId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = glGame.editor.chooseFishID+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_showTime\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = info.showTime+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_rate\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = info.rate+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_frequency\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = info.frequency+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_scale\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = info.scale+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"desc_editbox\").getComponent(cc.EditBox).string = (info.desc ? info.desc : \"\")+\"\";\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"startPointSetting\").getChildByName(\"start_editboxX\").getComponent(cc.EditBox).string = info.posArray[0].x;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"startPointSetting\").getChildByName(\"start_editboxY\").getComponent(cc.EditBox).string = info.posArray[0].y;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"startPointSetting\").getChildByName(\"control_editboxX\").getComponent(cc.EditBox).string = info.posArray[1].x;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"startPointSetting\").getChildByName(\"control_editboxY\").getComponent(cc.EditBox).string = info.posArray[1].y;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"startPointSetting\").getChildByName(\"end_editboxX\").getComponent(cc.EditBox).string = info.posArray[2].x;\r\n            this.node.getChildByName(\"creatorFish\").getChildByName(\"startPointSetting\").getChildByName(\"end_editboxY\").getComponent(cc.EditBox).string = info.posArray[2].y;\r\n        }\r\n\r\n        this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_fishTypeId\").getChildByName(\"editbox\").on(\"text-changed\", (editbox) => {\r\n            let _fishTypeId = editbox.string;\r\n            if(_fishTypeId == null || _fishTypeId == \"\" || isNaN(_fishTypeId)){//输入校验 必须输入合法的\r\n                cc.warn(\">> 输入校验 lab_fishTypeId text-changed \",_fishTypeId)\r\n                return;\r\n            }\r\n            let data = glGame.fishTable[Number(_fishTypeId)];\r\n            if(data != null){\r\n                cc.warn(\">> lab_fishTypeId text-changed new data \",data)\r\n                this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_resGroupId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string = data.resGroupId+\"\";\r\n            }else{\r\n                glGame.editor.status(\"请填写正确的fishTypeId\");\r\n            }\r\n        })\r\n    },\r\n    //创建鱼界面点 确定 - 开始创建\r\n    creatFishData(){\r\n        glGame.editor.node.getChildByName(\"creatorFish\").active = false;\r\n        let desc            = this.node.getChildByName(\"creatorFish\").getChildByName(\"desc_editbox\").getComponent(cc.EditBox).string;\r\n        let resGroupId      = Number(this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_resGroupId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n        let fishTypeId      = Number(this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_fishTypeId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n        let lineID          = Number(this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_lineId\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n        let showTime        = Number(this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_showTime\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n        let rate            = Number(this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_rate\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n        let frequency       = Number(this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_frequency\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n        let scale           = Number(this.node.getChildByName(\"creatorFish\").getChildByName(\"layout\").getChildByName(\"lab_scale\").getChildByName(\"editbox\").getComponent(cc.EditBox).string);\r\n        if(glGame.isCreat){\r\n            glGame.speed = rate;//修改全局速度默认值\r\n            let posArray        = [glGame.startPoint,glGame.controlPoint,glGame.endPoint];  //初始化值 - 3个贝塞尔 点\r\n            let moveList        = [glGame.speed,glGame.speed,glGame.speed];                  //初始化值 - 3个速率\r\n            let runTime = glGame.getMaxIndexByTime(posArray,moveList);\r\n            glGame.addNewLineId = lineID;\r\n            console.error(\"> 创建鱼界面点 确定 - 开始创建 addNewLineId \" + glGame.addNewLineId);\r\n            //贝塞尔 鱼线集 数据 格式\r\n            glGame.FList[glGame.currGIndex].fishLine[lineID] = {\r\n                groupID:glGame.currGIndex,\r\n                lineID:lineID,\r\n                resGroupId:resGroupId,\r\n                fishTypeId:fishTypeId,\r\n                showTime:showTime,\r\n                frequency:frequency,\r\n                rate:rate,\r\n                scale:scale,\r\n                desc:desc,\r\n                runTime:runTime,\r\n                posArray:posArray,\r\n                moveList:moveList\r\n            };\r\n            if(!glGame.drawStart){\r\n                glGame.editor.status(\"TIPS: 贝塞尔点，鼠标右键即可删除\",glGame.Color.RED);\r\n                this.scheduleOnce(()=>{\r\n                    glGame.editor.status(\"当前鱼组ID \"+glGame.currGIndex);\r\n                },3);\r\n            }else {\r\n                glGame.editor.status(\"当前鱼组ID \"+glGame.currGIndex);\r\n            }\r\n\r\n            glGame.currLineItem = glGame.FList[glGame.currGIndex].fishLine[glGame.lineID];\r\n            glGame.currLineItem = glGame.FList[glGame.currGIndex].fishLine[lineID];//设置选中当前鱼\r\n            glGame.editor.updateFishLineToCanvas();\r\n            cc.warn(\">>> glGame.speed \"+glGame.speed)\r\n        }else{\r\n            //更新信息\r\n            if(showTime != null && !isNaN(Number(showTime))){\r\n                glGame.FList[glGame.currGIndex].fishLine[lineID].showTime = Number(showTime);\r\n            }\r\n            if(resGroupId != null && !isNaN(Number(resGroupId))){\r\n                glGame.FList[glGame.currGIndex].fishLine[lineID].resGroupId = Number(resGroupId);\r\n            }\r\n            if(fishTypeId != null && !isNaN(Number(fishTypeId))){\r\n                glGame.FList[glGame.currGIndex].fishLine[lineID].fishTypeId = Number(fishTypeId);\r\n            }\r\n            if(rate != null && !isNaN(Number(rate))){\r\n                glGame.FList[glGame.currGIndex].fishLine[lineID].rate = Number(rate);\r\n            }\r\n            if(frequency != null && !isNaN(Number(frequency))){\r\n                glGame.FList[glGame.currGIndex].fishLine[lineID].frequency = Number(frequency);\r\n            }\r\n            if(scale != null && !isNaN(Number(scale))){\r\n                glGame.FList[glGame.currGIndex].fishLine[lineID].scale = Number(scale);\r\n            }\r\n            if(desc != undefined && desc != \"\"){\r\n                glGame.FList[glGame.currGIndex].fishLine[lineID].desc = desc;\r\n            }\r\n            glGame.editor.updateFishLineToCanvas(null,lineID);\r\n        }\r\n    },\r\n    //创建鱼 对象\r\n    creatFishUnitToDeskUI(lID,resGroupId,resType,pos,scale,frequency){\r\n        let deskUI = this.node.getChildByName(\"deskUI\");\r\n        let newFish = cc.instantiate(this.node.getChildByName(\"fishCanteiner\").getChildByName(\"fish2\"));\r\n        newFish.active = true;\r\n        newFish.name = \"fish_\"+lID;\r\n        newFish.parent = deskUI;\r\n        if(pos)newFish.position = pos;\r\n        newFish.getComponent(\"fish_Unit\").initEditorFish(resGroupId,resType,scale,frequency);\r\n        return newFish;\r\n    },\r\n    //更新 鱼组鱼线数据 并且到画布\r\n    updateFishLineToCanvas(chooseFishID = null,selectFishID = null,isRef = false){\r\n        let FContent = this.node.getChildByName(\"fishLineCanteiner\").getChildByName(\"fishLineScrollView\").getChildByName(\"view\").getChildByName(\"content\");\r\n        if(chooseFishID){\r\n            if(glGame.currLineItem && glGame.currLineItem.lineID == chooseFishID){//如果删除的鱼线和当前的一样那么就移除选择\r\n                let list = glGame.FList[glGame.currGIndex].fishLine;\r\n                if(list){\r\n                    for (let lineID in list){\r\n                        if(glGame.currLineItem.lineID != lineID){\r\n                            glGame.currLineItem = list[lineID];\r\n                            this.getFishToCanvas(glGame.currentFish.lineID);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                let it = FContent.getChildByName(\"Fish_\"+chooseFishID);\r\n                FContent.height -= it.height - 2;\r\n                it.destroy();\r\n                return;\r\n            }else {\r\n                let it = FContent.getChildByName(\"Fish_\"+chooseFishID);\r\n                FContent.height -= it.height - 2;\r\n                it.destroy();\r\n                return;\r\n            }\r\n        }\r\n        if(glGame.addNewLineId != null){//添加鱼不刷新鱼线列表\r\n            let lineID2 = Number(glGame.addNewLineId + \"\");\r\n            let addFishData = glGame.FList[glGame.currGIndex].fishLine[lineID2];\r\n            if(glGame.currentFish){\r\n                glGame.currentFish = null;\r\n            }\r\n            this.addLine(addFishData,lineID2);\r\n            if(glGame.currentFish) {\r\n                this.getFishToCanvas(glGame.currentFish.lineID);\r\n            }\r\n            glGame.addNewLineId = null;\r\n            return;\r\n        }\r\n        if(selectFishID != null){\r\n            let deskUI = this.node.getChildByName(\"deskUI\");\r\n            glGame.currentFish = deskUI.getChildByName(\"fish_\"+selectFishID);\r\n            this.getFishToCanvas(glGame.currentFish.lineID);\r\n            return;\r\n        }\r\n        if(!isRef){\r\n            FContent.removeAllChildren(true);\r\n            FContent.height = 0;\r\n        }\r\n        if(glGame.currentFish){\r\n            glGame.currentFish = null;\r\n        }\r\n        if(glGame.GFishList && glGame.GFishList.length > 0){\r\n            let len = glGame.GFishList.length;\r\n            for (let i = 0;i<len;i++){\r\n                let f = glGame.GFishList.pop();\r\n                if(f && f._components != undefined && f.getComponent(\"fish_Unit\"))f.getComponent(\"fish_Unit\").dispose();\r\n            }\r\n        }\r\n        glGame.GFishList = [];\r\n        let list;\r\n        let searchLen = 0;\r\n        if(glGame.searchList != undefined) {\r\n            for (let k in glGame.searchList) {\r\n                searchLen++;\r\n            }\r\n        }\r\n        //使用搜索结果\r\n        if(searchLen > 0){\r\n            list = glGame.searchList;\r\n        }else{//使用默认结果\r\n            if(glGame.FList[glGame.currGIndex]){\r\n                list = glGame.FList[glGame.currGIndex].fishLine;\r\n            }\r\n        }\r\n        if(list){\r\n            for (let key in list){\r\n                let lineID      = Number(key);\r\n                let data        = list[lineID];\r\n                if(isRef){\r\n                    if(FContent.getChildByName(\"Fish_\"+lineID) == null){\r\n                        this.addLine(data,lineID);\r\n                    }\r\n                }else{\r\n                    this.addLine(data,lineID);\r\n                }\r\n            }\r\n            if(glGame.currentFish){\r\n                this.getFishToCanvas(glGame.currentFish.lineID);\r\n            }else{//只创建了组 未创建鱼\r\n\r\n            }\r\n        }else{\r\n            glGame.editor.status(\"当前鱼组是空的，请创建一条鱼！\");\r\n        }\r\n    },\r\n    //添加鱼线\r\n    addLine(data,lineID){\r\n        if(data){\r\n            let FContent        = this.node.getChildByName(\"fishLineCanteiner\").getChildByName(\"fishLineScrollView\").getChildByName(\"view\").getChildByName(\"content\");\r\n            let FItem           = this.node.getChildByName(\"fishLineCanteiner\").getChildByName(\"LineItem\");\r\n            let pos             = data.posArray[0];\r\n            let baseFrameRate   = Number(glGame.editor.getFishResConfig(Number(data.fishTypeId)).frameRate);//动态获取频率 * 倍率\r\n            let newFish         = this.creatFishUnitToDeskUI(lineID,data.resGroupId,data.resType,pos,data.scale,baseFrameRate * data.frequency * 10);\r\n            newFish.lineID      = lineID;\r\n            newFish.fishTypeId  = Number(data.fishTypeId);\r\n            glGame.GFishList.push(newFish);\r\n            newFish.getComponent(\"fish_Unit\").setMoveData(data);\r\n            let item            = cc.instantiate(FItem);\r\n            item.active         = true;\r\n            item.fishData       = data;\r\n            item.lineID         = lineID;\r\n            item.fishTypeId     = Number(data.fishTypeId);\r\n            item.name           = \"Fish_\"+lineID;\r\n            let fishName;\r\n            if(glGame.fishTable[Number(data.fishTypeId)] == null){\r\n                fishName = \"找不到配置 \"+data.fishTypeId;\r\n                cc.error(\" 找不到配置,请检查鱼表配置 : \",data.fishTypeId,\" glGame.fishTable \",glGame.fishTable);\r\n            }else{\r\n                fishName = glGame.fishTable[Number(data.fishTypeId)].fishName;\r\n            }\r\n\r\n            item.filename       = glGame.filePreFix+data.resGroupId;\r\n            item.getChildByName(\"lab_name\").getComponent(cc.Label).string = fishName+\"_\"+lineID;\r\n            if(glGame.currLineItem != null && glGame.currLineItem.lineID == lineID && glGame.currentFish == null){\r\n                glGame.currLineItem = data;\r\n                glGame.currentFish  = newFish;\r\n                if(glGame.lastItemNode && glGame.lastItemNode.getChildByName(\"heightLine\")){\r\n                    glGame.lastItemNode.getChildByName(\"heightLine\").active = false;\r\n                }\r\n                glGame.lastItemNode = item;\r\n                glGame.lastItemNode.getChildByName(\"heightLine\").active = true;\r\n            }\r\n            FContent.addChild(item);\r\n            FContent.height += item.height + 50;\r\n        }\r\n    },\r\n    //弄一条鱼 到 画布\r\n    getFishToCanvas(lineID){\r\n        let fishData = glGame.FList[glGame.currGIndex].fishLine[lineID];\r\n        if(fishData == null){\r\n            glGame.editor.status(\"找不到 \"+lineID+\" 鱼线\");\r\n            return;\r\n        }\r\n        //绘画 贝塞尔点 以及曲线\r\n        glGame.drawBezier.clearCurrFishLine();\r\n        glGame.drawBezier.initDataFormFishPointList(fishData);\r\n    },\r\n    //更新鱼组\r\n    updateGroupToCanteinerAndFishLineToCanvas(rmID = null,nouopdate = false){\r\n        let GContent = this.node.getChildByName(\"fishGroupCanteiner\").getChildByName(\"fishGroupScrollView\").getChildByName(\"view\").getChildByName(\"content\");\r\n        if(rmID){\r\n            let it = GContent.getChildByName(\"Group_\"+rmID);\r\n            GContent.height -= it.height - 2;\r\n            it.destroy();\r\n            return;\r\n        }\r\n        GContent.removeAllChildren(true);\r\n        GContent.height = 0;\r\n        let GItem = this.node.getChildByName(\"fishGroupCanteiner\").getChildByName(\"GroupItem\");\r\n        let groupListData;\r\n        let searcLen = 0;\r\n        if(glGame.SearchFList != undefined){\r\n            for(let key in glGame.SearchFList){\r\n                searcLen++;\r\n                break;\r\n            }\r\n        }\r\n        if(searcLen > 0){\r\n            groupListData = glGame.SearchFList;\r\n        }else{\r\n            groupListData = glGame.FList;\r\n        }\r\n        let groupCoint = 0;\r\n        for(let key in groupListData){\r\n            groupCoint++\r\n            let group = groupListData[key];\r\n            let item = cc.instantiate(GItem);\r\n            item.active = true;\r\n            item.groupData = group;\r\n            item.groupID = key;\r\n            item.name = \"Group_\"+key;\r\n            GContent.height += item.height + 2;\r\n            item.getChildByName(\"lab_name\").getComponent(cc.Label).string = \"\"+key;\r\n            if(key == glGame.currGIndex){\r\n                glGame.currGItem = item;\r\n                item.getChildByName(\"heightLine\").active = true;\r\n            }\r\n            GContent.addChild(item);\r\n        }\r\n        if(nouopdate){\r\n            return;\r\n        }\r\n        if(groupCoint > 0)this.updateFishLineToCanvas();\r\n    },\r\n    //显示创建鱼组界面 - 编辑数据\r\n    showCreatorFishGroupView(){\r\n        if(!glGame.atlasList){\r\n            glGame.editor.alert(\"请选择 图集路径 后再创建鱼组！\")\r\n            return;\r\n        }\r\n        if(!glGame.fishTable){\r\n            glGame.editor.alert(\"请导入 鱼表 后再创建鱼组！\")\r\n            return;\r\n        }\r\n        let fishGoulpInfomation = this.node.getChildByName(\"fishGoulpInfomation\");\r\n        fishGoulpInfomation.active = !fishGoulpInfomation.active;\r\n        if(glGame.isCreator){//创建\r\n            fishGoulpInfomation.getChildByName(\"titleBg\").getChildByName(\"lab_group\").getComponent(cc.Label).string = \"鱼组创建\";\r\n            fishGoulpInfomation.getChildByName(\"mask\").active = false;\r\n            let newGroupID = glGame.currGIndex;\r\n            while (true){\r\n                if(glGame.FList[newGroupID] == null){\r\n                    break;\r\n                }\r\n                newGroupID ++;\r\n            }\r\n            glGame.tmpAddGroupInfoCgi = newGroupID;\r\n            fishGoulpInfomation.getChildByName(\"groupid_editbox\").getComponent(cc.EditBox).string = glGame.tmpAddGroupInfoCgi+\"\";\r\n            glGame.editor.status(\"请填写鱼组信息！\");\r\n        }else{//编辑\r\n            fishGoulpInfomation.getChildByName(\"titleBg\").getChildByName(\"lab_group\").getComponent(cc.Label).string = \"鱼组编辑\";\r\n            fishGoulpInfomation.getChildByName(\"mask\").active = true;\r\n            let info = glGame.FList[glGame.tmpGroupId];\r\n            fishGoulpInfomation.getChildByName(\"groupid_editbox\").getComponent(cc.EditBox).string = glGame.tmpGroupId+\"\";\r\n            fishGoulpInfomation.getChildByName(\"desc_editbox\").getComponent(cc.EditBox).string = (info.desc ? info.desc : \"\" )+ \"\";\r\n            fishGoulpInfomation.getChildByName(\"range_editbox\").getComponent(cc.EditBox).string = info.range+\"\";\r\n            fishGoulpInfomation.getChildByName(\"type_editbox\").getComponent(cc.EditBox).string  = info.type;\r\n        }\r\n    },\r\n    //创建鱼组 确定 - 保存数据\r\n    creatFishGroupSubmit(){\r\n        let fishGoulpInfomation = this.node.getChildByName(\"fishGoulpInfomation\");\r\n        let desc_editbox  = fishGoulpInfomation.getChildByName(\"desc_editbox\").getComponent(cc.EditBox).string;\r\n        let type_editbox  = Number(fishGoulpInfomation.getChildByName(\"type_editbox\").getComponent(cc.EditBox).string);\r\n        let range_editbox = Number(fishGoulpInfomation.getChildByName(\"range_editbox\").getComponent(cc.EditBox).string);\r\n        if(glGame.isCreator){\r\n            //创建模式\r\n            glGame.tmpAddGroupInfoCgi = Number(fishGoulpInfomation.getChildByName(\"groupid_editbox\").getComponent(cc.EditBox).string);\r\n            glGame.FList[glGame.tmpAddGroupInfoCgi] = {\r\n                id:glGame.tmpAddGroupInfoCgi,\r\n                fishLine:{},\r\n                type:type_editbox,\r\n                range:range_editbox,\r\n                desc:desc_editbox\r\n            };\r\n            glGame.currGIndex = glGame.tmpAddGroupInfoCgi;\r\n            if(glGame.currentFish){ //清理 画布\r\n                glGame.currentFish.getComponent(\"fish_Unit\").dispose();\r\n            }\r\n            glGame.drawBezier.clearCurrFishLine();\r\n            glGame.currentFish = null;\r\n            glGame.editor.updateGroupToCanteinerAndFishLineToCanvas();\r\n        }else{\r\n            //编辑模式\r\n            glGame.FList[glGame.tmpGroupId].desc = desc_editbox;\r\n            glGame.FList[glGame.tmpGroupId].type = type_editbox;\r\n            glGame.FList[glGame.tmpGroupId].range = range_editbox;\r\n        }\r\n        fishGoulpInfomation.active = false;\r\n        glGame.isCreator = true;\r\n    },\r\n    //状态栏消息模块\r\n    status(msg,color = null){\r\n        this.node.getChildByName(\"lab_status\").color  = color ? color :  glGame.Color.HAFEBCAK;\r\n        this.node.getChildByName(\"lab_status\").getComponent(cc.Label).string =  \"状态栏: \"+ msg;\r\n    },\r\n    //简单封装了一个 alert 弹出框\r\n    alert(msg,cb){\r\n        let alert = cc.instantiate(glGame.editor.node.getChildByName(\"alertView\"));\r\n        alert.parent = this.node;\r\n        alert.active = true;\r\n        alert.getChildByName(\"lab_context\").getComponent(cc.Label).string = msg;\r\n        alert.getChildByName(\"btn_readLastData_ok\").on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            event.stopPropagation();\r\n            event.currentTarget.parent.destroy();\r\n            if(cb)cb(true);\r\n        });\r\n        alert.getChildByName(\"btn_readLastData_canel\").on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            event.stopPropagation();\r\n            event.currentTarget.parent.destroy();\r\n            if(cb)cb(false);\r\n        });\r\n        alert.getChildByName(\"btn_readLastData_no\").on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            event.stopPropagation();\r\n            event.currentTarget.parent.destroy();\r\n            if(cb)cb(false);\r\n        });\r\n    },\r\n    //获取复制鱼线的复制数量偏移量 ， type 0 鱼线 1 鱼组\r\n    getCopuLineNumOffSet(type){\r\n        let x,y,xEditbox_str,yEditbox_str;\r\n        if(type == 0){//去鱼线 复制选项 获取 基础偏移量\r\n            let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n            xEditbox_str = optionCopyLine.getChildByName(\"bg\").getChildByName(\"toggleContainer\").getChildByName(\"optionCopyLineToggle3\").getChildByName(\"Xeditbox\").getComponent(cc.EditBox).string;\r\n            yEditbox_str = optionCopyLine.getChildByName(\"bg\").getChildByName(\"toggleContainer\").getChildByName(\"optionCopyLineToggle3\").getChildByName(\"Yeditbox\").getComponent(cc.EditBox).string;\r\n        }else{//去鱼组复制 选项 获取 基础偏移量\r\n\r\n        }\r\n        if(xEditbox_str == null || xEditbox_str == undefined || xEditbox_str == \"\"){\r\n            x = 0;\r\n        }else{\r\n            x = Number(xEditbox_str);\r\n        }\r\n        if(yEditbox_str == null || yEditbox_str == undefined || yEditbox_str == \"\"){\r\n            y = 0;\r\n        }else {\r\n            y = Number(yEditbox_str);\r\n        }\r\n        return {x:x,y:y};\r\n    },\r\n    //获取复制鱼线的出现时间偏移量 ， type 0 鱼线 1 鱼组\r\n    getCopyLineTimeOffSet(type) {\r\n        let time_str;\r\n        if (type == 0) {//去鱼线 复制选项 获取 基础偏移量\r\n            let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n            time_str = optionCopyLine.getChildByName(\"bg\").getChildByName(\"timeEditbox\").getComponent(cc.EditBox).string;\r\n        } else {//去鱼组复制 选项 获取 基础偏移量\r\n\r\n        }\r\n        return time_str == \"\" ? 0 : Number(time_str);\r\n    },\r\n    //获取复制鱼线的fishTypeId\r\n    getCopyLinefishTypeId() {\r\n        let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n        return optionCopyLine.getChildByName(\"bg\").getChildByName(\"fishTypeIdEditbox\").getComponent(cc.EditBox).string;\r\n    },\r\n    //清除拷贝鱼线界面的上一次参数\r\n    clearcopyFishLineArg(){\r\n        let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n        optionCopyLine.getChildByName(\"bg\").getChildByName(\"lineIDEditbox\").getComponent(cc.EditBox).string = \"\";\r\n        optionCopyLine.getChildByName(\"bg\").getChildByName(\"numberEditbox\").getComponent(cc.EditBox).string = \"\";\r\n        optionCopyLine.getChildByName(\"bg\").getChildByName(\"fishTypeIdEditbox\").getComponent(cc.EditBox).string = \"\";\r\n        optionCopyLine.getChildByName(\"bg\").getChildByName(\"timeEditbox\").getComponent(cc.EditBox).string = \"\";\r\n        optionCopyLine.getChildByName(\"bg\").getChildByName(\"toggleContainer\").getChildByName(\"optionCopyLineToggle3\").getChildByName(\"Xeditbox\").getComponent(cc.EditBox).string = \"\";\r\n        optionCopyLine.getChildByName(\"bg\").getChildByName(\"toggleContainer\").getChildByName(\"optionCopyLineToggle3\").getChildByName(\"Yeditbox\").getComponent(cc.EditBox).string = \"\";\r\n        optionCopyLine.getChildByName(\"bg\").getChildByName(\"toggleContainer\").getChildByName(\"optionCopyLineToggle4\").getComponent(cc.Toggle).isChecked = true;\r\n    },\r\n    //从某个组拷贝某条线到某个组\r\n    copyFishLineToGroup(formGroupID,toGroupID,copyFishID,type,num,timeOffset,rX,rY){\r\n        let offSetX,offSetY;\r\n        if(type == 3){\r\n            let info = this.getCopuLineNumOffSet(0);\r\n            offSetX = info.x;\r\n            offSetY = info.y;\r\n        }\r\n        for (let i=0;i<num;i++){\r\n            let len = 0;\r\n            let newFishID = Number(copyFishID)+len;\r\n            while (true){//出栈式查找id 没有用过的，\r\n                if(glGame.FList[toGroupID].fishLine[newFishID] == null){\r\n                    break;\r\n                }\r\n                len ++;\r\n                newFishID = Number(copyFishID)+len;\r\n            }\r\n            let copyItem = glGame.FList[formGroupID].fishLine[copyFishID];\r\n            if(!glGame.FList[toGroupID].fishLine){\r\n                glGame.FList[toGroupID].fishLine = {};\r\n            }\r\n            glGame.FList[toGroupID].fishLine[newFishID] = JSON.parse(JSON.stringify(copyItem));\r\n            glGame.FList[toGroupID].fishLine[newFishID].lineID = newFishID;\r\n            glGame.FList[toGroupID].fishLine[newFishID].groupID = toGroupID;\r\n            let time = glGame.FList[toGroupID].fishLine[newFishID].showTime;\r\n            if(!time)time = 0;\r\n            if(!timeOffset)timeOffset = 0;\r\n            let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n            let lineID = optionCopyLine.getChildByName(\"bg\").getChildByName(\"lineIDEditbox\").getComponent(cc.EditBox).string;\r\n            if(lineID == \"\" || lineID == undefined || lineID == null){\r\n\r\n            }else{\r\n                glGame.FList[toGroupID].fishLine[newFishID].lineID = Number(lineID);\r\n            }\r\n            let fishTypeId = optionCopyLine.getChildByName(\"bg\").getChildByName(\"fishTypeIdEditbox\").getComponent(cc.EditBox).string;\r\n            if(fishTypeId == \"\" || fishTypeId == undefined || fishTypeId == null){\r\n\r\n            }else{\r\n                glGame.FList[toGroupID].fishLine[newFishID].fishTypeId = Number(fishTypeId);\r\n                let baseFishInfo = glGame.editor.getFishResConfig(Number(fishTypeId));\r\n                glGame.FList[toGroupID].fishLine[newFishID].resGroupId = baseFishInfo.resGroupId;\r\n            }\r\n            glGame.FList[toGroupID].fishLine[newFishID].showTime = time + (i*timeOffset + timeOffset);\r\n            if(rX == 1){//X 坐标反向\r\n                this.setPostReverseWay(toGroupID,newFishID,-1,1);\r\n            }\r\n            if(rY == 1){//Y 坐标反向\r\n                this.setPostReverseWay(toGroupID,newFishID,1,-1);\r\n            }\r\n            if(type == 2){//开始终点交换\r\n                this.startPointChangeEndPoint(toGroupID,newFishID);\r\n            }else if(type == 3){//偏移量 xy\r\n                let x = i * offSetX + offSetX;\r\n                let y = i * offSetY + offSetY;\r\n                this.setPostOffsexXY(toGroupID,null,x,y);\r\n            }else if(type == 4){//直接拷贝\r\n\r\n            }\r\n        }\r\n        this.updateFishLineToCanvas(null,null,true);//更新\r\n        this.clearcopyFishLineArg();\r\n    },\r\n    //复制鱼线\r\n    copyFishLineToLine(formGroupID,copyFishID,type,num,timeOffset,fishTypeId,rX,rY){\r\n        let offSetX,offSetY;\r\n        if(type == 3){\r\n            let info = this.getCopuLineNumOffSet(0);\r\n            offSetX = info.x;\r\n            offSetY = info.y;\r\n        }\r\n        for (let i=0;i<num;i++){\r\n            let len = 0;\r\n            let toGroupID = formGroupID;\r\n            let newLineID = Number(copyFishID)+len;\r\n            while (true){//出栈式查找id 没有用过的，\r\n                if(glGame.FList[toGroupID].fishLine[newLineID] == null && newLineID != glGame.lineID){\r\n                    break;\r\n                }\r\n                len ++;\r\n                newLineID = Number(copyFishID)+len;\r\n            }\r\n            let copyItem = glGame.FList[formGroupID].fishLine[copyFishID];\r\n            glGame.FList[toGroupID].fishLine[newLineID] = JSON.parse(JSON.stringify(copyItem));\r\n            glGame.FList[toGroupID].fishLine[newLineID].lineID = newLineID;\r\n            glGame.FList[toGroupID].fishLine[newLineID].groupID = toGroupID;\r\n            let time = glGame.FList[toGroupID].fishLine[newLineID].showTime;\r\n            if(!time)time = 0;\r\n            if(!timeOffset)timeOffset = 0;\r\n            glGame.FList[toGroupID].fishLine[newLineID].showTime = time + (i*timeOffset + timeOffset);\r\n            if(fishTypeId != null && fishTypeId != \"\" && !isNaN(Number(fishTypeId))){\r\n                glGame.FList[toGroupID].fishLine[newLineID].fishTypeId = fishTypeId;\r\n                let baseFishInfo = glGame.editor.getFishResConfig(Number(fishTypeId));\r\n                glGame.FList[toGroupID].fishLine[newLineID].resGroupId = baseFishInfo.resGroupId;\r\n            }\r\n            let optionCopyLine = glGame.editor.node.getChildByName(\"chooseFishingLine\").getChildByName(\"bg\").getChildByName(\"btn_copyLineOption\").getChildByName(\"optionCopyLine\");\r\n            let lineID = optionCopyLine.getChildByName(\"bg\").getChildByName(\"lineIDEditbox\").getComponent(cc.EditBox).string;\r\n            if(lineID == \"\" || lineID == undefined || lineID == null){\r\n\r\n            }else{\r\n                glGame.FList[toGroupID].fishLine[newLineID].lineID = Number(lineID);\r\n            }\r\n            if(rX == 1){//X 坐标反向\r\n                this.setPostReverseWay(toGroupID,newLineID,-1,1);\r\n            }\r\n            if(rY == 1){//Y 坐标反向\r\n                this.setPostReverseWay(toGroupID,newLineID,1,-1);\r\n            }\r\n            if(type == 2){//开始终点交换\r\n                this.startPointChangeEndPoint(toGroupID,newLineID);\r\n            }else if(type == 3){//偏移量 x y\r\n                let x = i * offSetX + offSetX;\r\n                let y = i * offSetY + offSetY;\r\n                this.setPostOffsexXY(toGroupID,newLineID,x,y);\r\n            }else if(type == 4){//直接复制\r\n\r\n            }\r\n        }\r\n        this.updateFishLineToCanvas(null,null,true);//更新\r\n        this.clearcopyFishLineArg();\r\n    },\r\n    //复制鱼组\r\n    copyGroupToGroup(type){\r\n        if(type == 3){\r\n            let info = this.getCopuLineNumOffSet(1);\r\n            offSetX = info.x;\r\n            offSetY = info.y;\r\n        }\r\n        let offSetX,offSetY;\r\n        let len = 0;\r\n        let newGroupID = glGame.startGroupIndex+len;\r\n        while (true){\r\n            if(glGame.FList[newGroupID] == null){\r\n                break;\r\n            }\r\n            len ++;\r\n            newGroupID = glGame.startGroupIndex+len;\r\n        }\r\n        let copyItem = glGame.FList[glGame.tmpGroupId];\r\n        glGame.FList[newGroupID] = JSON.parse(JSON.stringify(copyItem));\r\n        glGame.FList[newGroupID].id = newGroupID;\r\n\r\n        for (let k in glGame.FList[newGroupID].fishLine){\r\n            glGame.FList[newGroupID].fishLine[k].groupID = newGroupID;\r\n        }\r\n        if(type == 0){//X 坐标反向\r\n            this.setPostReverseWay(newGroupID,null,-1,1);\r\n        }else if(type == 1){//Y 坐标反向\r\n            this.setPostReverseWay(newGroupID,null,1,-1);\r\n        }else if(type == 2){//开始终点交换\r\n            this.startPointChangeEndPoint(newGroupID,null);\r\n        }else if(type == 3){//偏移量 xy\r\n            let x = i * offSetX + offSetX;\r\n            let y = i * offSetY + offSetY;\r\n            this.setPostOffsexXY(newGroupID,null,x,y);\r\n        }\r\n        this.updateGroupToCanteinerAndFishLineToCanvas();//更新\r\n    },\r\n    //坐标反向\r\n    setPostReverseWay(groupID,fishID,x,y){\r\n        if(fishID){\r\n            for (let i=0; i<glGame.FList[groupID].fishLine[fishID].posArray.length;i++){\r\n                if(x == -1){\r\n                    glGame.FList[groupID].fishLine[fishID].posArray[i].x = -glGame.FList[groupID].fishLine[fishID].posArray[i].x;\r\n                }\r\n                if(y == -1){\r\n                    glGame.FList[groupID].fishLine[fishID].posArray[i].y = -glGame.FList[groupID].fishLine[fishID].posArray[i].y;\r\n                }\r\n            }\r\n        }else{\r\n            for (let id in glGame.FList[groupID].fishLine){\r\n                for (let i=0; i<glGame.FList[groupID].fishLine[id].posArray.length;i++){\r\n                    if(x == -1){\r\n                        glGame.FList[groupID].fishLine[id].posArray[i].x = -glGame.FList[groupID].fishLine[id].posArray[i].x;\r\n                    }\r\n                    if(y == -1){\r\n                        glGame.FList[groupID].fishLine[id].posArray[i].y = -glGame.FList[groupID].fishLine[id].posArray[i].y;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //坐标偏移量\r\n    setPostOffsexXY(groupID,fishID,x,y){\r\n        if(fishID){\r\n            for (let i=0; i<glGame.FList[groupID].fishLine[fishID].posArray.length;i++){\r\n                glGame.FList[groupID].fishLine[fishID].posArray[i].x += x;\r\n                glGame.FList[groupID].fishLine[fishID].posArray[i].y += y;\r\n            }\r\n        }else{\r\n            for (let id in glGame.FList[groupID].fishLine){\r\n                for (let i=0; i<glGame.FList[groupID].fishLine[id].posArray.length;i++){\r\n                    glGame.FList[groupID].fishLine[id].posArray[i].x += x;\r\n                    glGame.FList[groupID].fishLine[id].posArray[i].y += y;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //开始终点交换\r\n    startPointChangeEndPoint(groupID,fishID){\r\n        if(fishID){\r\n            let newPosArray = [];\r\n            for (let i=glGame.FList[groupID].fishLine[fishID].posArray.length-1; i>-1;i--){\r\n                newPosArray.push(glGame.FList[groupID].fishLine[fishID].posArray[i]);\r\n            }\r\n            glGame.FList[groupID].fishLine[fishID].posArray = newPosArray;\r\n        }else{\r\n            for (let id in glGame.FList[groupID].fishLine){\r\n                let newPosArray = [];\r\n                for (let i=glGame.FList[groupID].fishLine[id].posArray.length-1; i>-1;i--){\r\n                    newPosArray.push(glGame.FList[groupID].fishLine[id].posArray[i]);\r\n                }\r\n                glGame.FList[groupID].fishLine[id].posArray = newPosArray;\r\n            }\r\n        }\r\n    },\r\n    //显示 隐藏鱼\r\n    hideOrShowFish(active){\r\n        if(glGame.GFishList.length > 0){\r\n            let len = glGame.GFishList.length;\r\n            for (let i = 0;i<len;i++){\r\n                let fish = glGame.GFishList[i];\r\n                fish.active = active;\r\n            }\r\n        }\r\n    },\r\n    //显示 隐藏鱼\r\n    hideOrShowFish2(){\r\n        if(glGame.GFishList.length > 0){\r\n            let len = glGame.GFishList.length;\r\n            for (let i = 0;i<len;i++){\r\n                let fish = glGame.GFishList[i];\r\n                fish.active = !fish.active;\r\n            }\r\n        }\r\n    },\r\n    //导入Json\r\n    importJson(tmpList){\r\n        if(!tmpList){\r\n            glGame.editor.status(\"导入失败，文件损坏\");\r\n            return\r\n        }\r\n        if(!glGame.currGIndex){\r\n            for (let ind in tmpList){\r\n                glGame.currGIndex = ind;\r\n                break;\r\n            }\r\n        }\r\n        if(!glGame.FList){\r\n            glGame.FList = tmpList;\r\n        }else{\r\n            let isNoRep = true;\r\n            let msg = \"导入 \"\r\n            for (let ind in tmpList){\r\n                if(glGame.FList[ind]){//不覆盖导入\r\n                    let len = 1;\r\n                    let newGroupID = glGame.startGroupIndex+len;\r\n                    while (true){//出栈式查找id 没有用过的，\r\n                        if(glGame.FList[newGroupID] == null){\r\n                            break;\r\n                        }\r\n                        len ++;\r\n                        newGroupID = glGame.startGroupIndex+len;\r\n                    }\r\n                    msg+=\"鱼组：\"+ind+\"重复，更换为:\"+newGroupID;\r\n                    glGame.FList[newGroupID] = tmpList[ind];\r\n                    isNoRep = false;\r\n                }else{\r\n                    glGame.FList[ind] = tmpList[ind];\r\n                    glGame.editor.status(\"导入成功，无重复鱼组！\");\r\n                }\r\n            }\r\n            if(isNoRep)glGame.editor.status(msg);\r\n        }\r\n        glGame.isImport = true;\r\n        let count = 0;\r\n        let list;\r\n        for (let groupIndex in glGame.FList){\r\n            glGame.currGIndex = groupIndex;\r\n            list = glGame.FList[glGame.currGIndex].fishLine;\r\n            for (let k in list){\r\n                if(list[k].frequency == undefined){//兼容老数据\r\n                    list[k].frequency = glGame.runSpeed;\r\n                }\r\n                if(list[k].fishTypeId == undefined){//兼容老数据\r\n                    list[k].fishTypeId = \"\";\r\n                }\r\n            }\r\n            count++;\r\n        }\r\n        if(list){\r\n            for (let fishID in list){\r\n                glGame.currLineItem = list[fishID];\r\n                glGame.editor.updateGroupToCanteinerAndFishLineToCanvas();\r\n                break;\r\n            }\r\n        }else if(count>0){\r\n            glGame.editor.updateGroupToCanteinerAndFishLineToCanvas();\r\n        }\r\n        glGame.editor.status(\"导入成功\");\r\n    },\r\n    //资源编辑 arg = 1 已编辑过，直接显示， 0 无数据，新的开始\r\n    showResEditView(arg){\r\n        //该功能暂停\r\n    },\r\n});","//常量\r\nmodule.exports = {\r\n    nodeZIndex:{\r\n        zIndexFish:100,\r\n        zIndexBullet:200,\r\n        zIndexFreeze:300,\r\n        zIndexPartBoom:400,\r\n        zIndexAllBoom:500,\r\n        zIndexTowerNet:600,\r\n        zIndexGoldColumn:700,\r\n        zIndexGold:800,\r\n        zIndexRotateEffect:900,\r\n        zIndexAni:950,\r\n        zIndexFunction:1000,\r\n        zIndexTower:2100,\r\n        zIndexTip:1200,\r\n        zIndexAround:1300,\r\n        zIndexTouch:2000,\r\n    },\r\n    Boom:31,        //炸弹\r\n    Fish15:15,      //调整中心点 -- 蝙蝠鱼\r\n    Fish16:16,      //调整中心点 -- 蓝鲨\r\n    Fish17:17,      //调整中心点 -- 金鲨\r\n    Fish18:18,      //调整中心点 -- 金铜钱\r\n    Fish19:19,      //调整中心点 -- 鳄鱼\r\n    Fish20:20,      //调整中心点 -- 龙\r\n    Fish22:22,      //调整中心点 -- 蟾蜍\r\n    Fish31:31,      //调整中心点 -- 炸弹\r\n    PowGunBullet:\"bullet_1_10_\",//能量炮子弹\r\n    dieType0:0,     //自然死亡\r\n    dieType1:1,     //玩家攻击\r\n    dieType2:2,     //全屏炸弹\r\n    dieType3:3,     //闪电\r\n    dieType4:4,     //旋涡\r\n    SpecialEffectType:{\r\n        IC:1,        //冰冻道具\r\n        Boom:2,      //炸弹\r\n        Group:3,     //鱼组\r\n        Lightning:4, //出奇制胜\r\n    },\r\n}","/***\r\n *  捕鱼：动画播放器\r\n * **/\r\nlet CONFIGS = require(\"fishConst\");\r\nglGame.movieClip = cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        movieClipType: {\r\n            default: 1,\r\n            displayName: \"类型\",\r\n            tooltip: \"动画类型 1 鱼 、 2特效\",\r\n            type:cc.Integer,\r\n        },\r\n    },\r\n    //初始化图集\r\n    initAtlas(f){\r\n        this.fish_Atlas = f;\r\n    },\r\n    //帧动画播放 atlas 图集 payName前缀 min最小 max最大 loop是否循环 isHaveZero连接符是否带0\r\n    initEffect(atlas,payName,min,max,loop,isHaveZero,speed,isDestroy,callBack = null){\r\n        this.atlas            = atlas;\r\n        this.payName          = payName;\r\n        this.effectIndex      = min;\r\n        this.min              = min;\r\n        this.max              = max;\r\n        this.loop             = loop;\r\n        this.playEffectTime   = 0;\r\n        this.playEffectSpeed  = speed;\r\n        this.isHaveZero       = isHaveZero;\r\n        this.isDestroy        = isDestroy;\r\n        this.callBack         = callBack;\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(this.getSprName());\r\n        this.isPlayEffect     = true;\r\n    },\r\n    //动画播放2　：获取图集名字\r\n    getSprName(){\r\n        let sprName;\r\n        if(this.isHaveZero){\r\n            if(this.effectIndex < 10){\r\n                sprName = this.payName+\"0\"+this.effectIndex;\r\n            }else{\r\n                sprName = this.payName+\"\"+this.effectIndex;\r\n            }\r\n        }else{\r\n            sprName = this.payName+\"\"+this.effectIndex;\r\n        }\r\n        return sprName;\r\n    },\r\n    //缩放动画播放\r\n    initEffectScaleTo(atlas,payName,scaleToTime,scaleX,scaleY,delayTime = 0.3,isDestroy = true,cb = null){\r\n        this.atlas      = atlas;\r\n        this.payName    = payName;\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(this.payName);\r\n        this.node.scale = 0;\r\n        this.node.stopAllActions();\r\n        let zIndex      = CONFIGS.nodeZIndex.zIndexPartBoom + Math.ceil(Math.random() * 200);\r\n        this.node.zIndex= zIndex > cc.macro.MAX_ZINDEX ? cc.macro.MAX_ZINDEX -1 : zIndex;\r\n        this.node.runAction(cc.sequence(cc.scaleTo(scaleToTime,scaleX,scaleX),cc.delayTime(delayTime),cc.callFunc(()=>{\r\n            if(isDestroy){\r\n                if(cb)cb();\r\n                this.node.destroy();\r\n            }else{\r\n                if(cb)cb();\r\n                this.node.active = false;\r\n            }\r\n        })));\r\n    },\r\n    //缩放+旋转动画播放\r\n    initEffectScaleAndRotateTo(atlas,payName,rotateTime,scaleToTime,scaleX,scaleY,isDestroy = true,cb = null){\r\n        this.atlas      = atlas;\r\n        this.payName    = payName;\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(this.payName);\r\n        this.node.scaleX = scaleX;\r\n        this.node.scaleY = scaleY;\r\n        this.node.stopAllActions();\r\n        let zIndex      = CONFIGS.nodeZIndex.zIndexPartBoom + Math.ceil(Math.random() * 200);\r\n        this.node.zIndex= zIndex > cc.macro.MAX_ZINDEX ? cc.macro.MAX_ZINDEX -1 : zIndex;\r\n        let act = cc.spawn(\r\n            cc.repeat(cc.rotateBy(rotateTime,360),2),\r\n            cc.scaleTo(scaleToTime,0.01,0.01)\r\n        );\r\n        this.node.runAction(cc.sequence(act,cc.callFunc(()=>{\r\n            if(isDestroy){\r\n                if(cb)cb();\r\n                this.node.destroy();\r\n            }else{\r\n                if(cb)cb();\r\n                this.node.active = false;\r\n            }\r\n        })));\r\n    },\r\n    update(dt){\r\n        if(this.isPlayEffect != undefined && this.isPlayEffect == true){\r\n            if(this.loop == 0 || this.loop > 0){\r\n                this.playEffectTime += dt;\r\n                if(this.playEffectTime > this.playEffectSpeed){\r\n                    this.playEffectTime = 0;\r\n                    this.node.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(this.getSprName());\r\n                    this.effectIndex ++;\r\n                    if(this.effectIndex >= this.max){\r\n                        if(this.loop != 0){\r\n                            this.loop --;\r\n                            if(this.loop <= 0){\r\n                                this.loop = -1;\r\n                                this.isPlayEffect = false;\r\n                                this.node.active = false;\r\n                            }else{\r\n                                this.effectIndex = this.min;\r\n                            }\r\n                        }else if(this.loop == 0){\r\n                            if(this.effectIndex >this.max){\r\n                                this.effectIndex = this.min;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n                if(this.callBack){\r\n                    this.callBack();\r\n                }\r\n                if(this.isDestroy){\r\n                    this.node.destroy();\r\n                }else{\r\n                    this.loop = -1;\r\n                    this.isPlayEffect = false;\r\n                    this.node.active = false;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //初始化动画播放器\r\n    initFishMovieClip () {\r\n        // this.logic          = require(\"fishlogic\").getInstance();//数据中心\r\n        this.lineID         = null; //鱼id\r\n        this.fishMoveTimeId = 0;    //动画计时器\r\n        this.runfrequency   = 10;   //动画计时器\r\n        this.runSpeed       = 0.013 * this.runfrequency; //每帧大概速度是 0.0166\r\n        this.isStart        = false;//是否开始播放\r\n        this.data           = null; //基础数据\r\n        this.index          = 0;    //当前播放第几个图\r\n        this.MaxIndex       = 0;    //最多几个图\r\n        this.mcBaseName     = null; //基础名称\r\n        this.currAtl        = null; //当前选用的图集\r\n    },\r\n    //动画帧频\r\n    updateFrequency (frequency) {\r\n        this.runSpeed = frequency;\r\n    },\r\n    //设置信息\r\n    setFIsh(res){\r\n        this.data       = res;\r\n        this.index      = 1;\r\n        this.mcBaseName = this.data.filename+\"_move\";\r\n        let spriteFrame = this.getImg();\r\n        this.initSpr(spriteFrame);\r\n        this.node.setScale(this.editScale);\r\n        this.isStart    = true;\r\n    },\r\n    //设置 编辑 界面显示的 信息\r\n    setResFIsh(filename){\r\n        this.filename = filename;\r\n        this.index       = 1;\r\n        this.mcBaseName  = this.filename+\"_move\";\r\n        let spriteFrame  = this.getImg();\r\n        let scale        = this.maxW / spriteFrame.getOriginalSize().width;\r\n        this.node.width  = spriteFrame.getOriginalSize().width * scale;\r\n        this.node.height = spriteFrame.getOriginalSize().height * scale;\r\n        this.initSpr(spriteFrame);\r\n        this.node.setScale(this.editScale);\r\n        this.isStart    = true;\r\n    },\r\n    //播放\r\n    playFishMovieClip(dt){\r\n        if(this.isStart && this.lineID !== undefined){\r\n            this.fishMoveTimeId += dt;\r\n            if(this.fishMoveTimeId > this.runSpeed){\r\n                let spriteFrame = this.getImg();\r\n                if(!spriteFrame){\r\n                    if(this.MaxIndex === 0){\r\n                        this.MaxIndex = this.index;\r\n                    }\r\n                    this.index = 1;\r\n                    spriteFrame = this.getImg();\r\n                }\r\n                this.initSpr(spriteFrame);\r\n                this.index ++;\r\n                if(this.MaxIndex !== 0 && this.index >= this.MaxIndex){\r\n                    this.index = 1;\r\n                }\r\n                this.fishMoveTimeId = 0;\r\n            }\r\n        }\r\n    },\r\n    //设置帧动画\r\n    getImg(){\r\n        let spriteFrame = this.getSpriteAtlas(this.mcBaseName + this.index);\r\n        if(spriteFrame == null && this.index == 1){\r\n            console.error(\"找不到鱼图 frameName: \"+this.mcBaseName + this.index,\" data \",this.data);\r\n            this.mcBaseName =\"fish1_move\";\r\n            this.index = 1;\r\n            return spriteFrame = this.getSpriteAtlas(this.mcBaseName + this.index);\r\n        }\r\n        return spriteFrame;\r\n    },\r\n    //初始化图片\r\n    initSpr(spriteFrame){\r\n        this.node.getComponent(cc.Sprite).spriteFrame = spriteFrame;//目前只有正常鱼\r\n    },\r\n    //从图集获取图片\r\n    getSpriteAtlas(frameName){\r\n        if(this.fish_Atlas != null){\r\n            if(this.currAtl && this.fish_Atlas[this.currAtl].getSpriteFrame(frameName) != null){\r\n                return this.fish_Atlas[this.currAtl].getSpriteFrame(frameName);\r\n            }\r\n            let length = this.fish_Atlas.length;\r\n            let sprFrame;\r\n            for (let i = 0;i<length;i++){\r\n                sprFrame = this.fish_Atlas[i].getSpriteFrame(frameName);\r\n                if(sprFrame){\r\n                    this.currAtl = i;\r\n                    return sprFrame;\r\n                }\r\n            }\r\n        }else{\r\n            return glGame.getAtlasForTexture(this.filename,frameName);\r\n        }\r\n    },\r\n    OnDestroy() {\r\n        // this.logic          = null;\r\n        this.lineID         = null;\r\n        this.fishMoveTimeId = 0;\r\n        this.runSpeed       = 0;\r\n        this.isStart        = false;\r\n        this.data           = null;\r\n        this.index          = 0;\r\n        this.mcBaseName     = null;\r\n        this.currAtl        = null;\r\n    },\r\n});","/***\r\n *  捕鱼：鱼，初始化 播放图片、移动（同步状态）\r\n * **/\r\nlet CONST = require(\"fishConst\");\r\nglGame.movieClip.extend({\r\n    properties: {\r\n        resID : \"?\",\r\n        resType : 0,\r\n    },\r\n    onLoad () {\r\n        this.initFishMovieClip(0.1);//调用基类的初始化动画方法\r\n        this.whirlpool= null;\r\n        this.fishData = null;\r\n        this.fishLine = null;\r\n        this.fishPath = null;\r\n        this._bUpdate = false;\r\n        this.timeIndex= 0;\r\n        this.moveList = null;\r\n        this.posArray = null;\r\n        this.isHit    = false;\r\n        this.hitTime  = 0;\r\n        this.delayedPause = 0;\r\n        // this.isPlayStartMc = false;\r\n        this.isMouseDown = false;\r\n    },\r\n\r\n    //初始化鱼，状态同步中心\r\n    initFish(fishData){\r\n        this.fishData     = fishData;\r\n        this.moveList     = this.fishData.moveList;\r\n        this.posArray     = this.fishData.posArray;\r\n        this.showTime     = this.fishData.showTime;//配置表默认值\r\n        this.runTime      = this.fishData.runTime;//总时间\r\n        if(this.fishData.frequency != undefined){\r\n            this.runSpeed     = this.fishData.frequency;\r\n            cc.error(\">> 初始化鱼，状态同步中心 \"+this.runSpeed)\r\n        }\r\n        this._startTime   = (fishData.serverTime - fishData.createTime)/1000;//已经出生 ， 状态同步,包含显示时间,显示时间不参与移动\r\n        if(this._startTime < 0){\r\n            this.showTime += Math.abs(Number(this._startTime+\"\"));\r\n            this._startTime = 0;\r\n        }\r\n        this._allTime = this.runTime+this.showTime\r\n        if(this._startTime >= this._allTime){//超时 直接死亡\r\n            this.death(CONST.dieType0);\r\n            return;\r\n        }\r\n        if(this._startTime >= this.showTime){//出生值 >= 显示值\r\n            if(this.showTime > 0){\r\n                this._startTime -= this.showTime;\r\n            }\r\n            this._bUpdate     = true;\r\n            this.startMove();//直接开始移动\r\n        }else{\r\n            this.node.getComponent(cc.Sprite).enabled = false;\r\n            this.showTime -= Number(this._startTime + \"\");//等一会在移动\r\n            this._startTime -= Number(this._startTime + \"\");//等一会在移动\r\n            if(this._startTime < 0){\r\n                this._startTime = 0;\r\n            }\r\n            this._bUpdate     = true;\r\n        }\r\n        this.fishData.res = this.resID;\r\n        this._time = Date.now();\r\n        this.node.x = this.posArray[0].x;\r\n        this.node.y = this.posArray[0].y;\r\n        // let fishLocalData = this.logic.json_fishConfig[this.fishData.FishId];\r\n        let fishLocalData = {'level':100};\r\n        let zIndex = CONST.nodeZIndex.zIndexFish + (Number(fishLocalData.level) + Math.ceil(Math.random() * 30));\r\n        this.node.zIndex = zIndex > cc.macro.MAX_ZINDEX ? cc.macro.MAX_ZINDEX -1 : zIndex;\r\n    },\r\n    setTips(){\r\n        let lab_desc_id = glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout\").getChildByName(\"lab_desc_id\");\r\n        let lab_id = glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout\").getChildByName(\"lab_id\");\r\n        this.node.on(cc.Node.EventType.MOUSE_ENTER, (event) => {\r\n                glGame.editor.node.getChildByName(\"tips\").active = true;\r\n                lab_id.active  = true;\r\n                let data = glGame.fishTable[Number(this.node.fishTypeId)];\r\n                lab_desc_id.getComponent(cc.Label).string = \"fishTypeId:\"+data.fishTypeId;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_d\").getComponent(cc.Label).string = data.fishName+\"\";\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_d\").active = true;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_desc\").active = true;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"bg\").height = 150;\r\n                glGame.editor.node.getChildByName(\"tips\").getChildByName(\"bg\").width = 300;\r\n        }, this.node);\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, (event) => {\r\n            let pos  = glGame.editor.node.convertToNodeSpaceAR(event.getLocation());\r\n            pos.x -= 10;\r\n            glGame.editor.node.getChildByName(\"tips\").setPosition(pos);\r\n        }, this.node);\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_LEAVE, (event) => {\r\n            glGame.editor.node.getChildByName(\"tips\").active = false;\r\n        }, this.node);\r\n    },\r\n    start(){\r\n        if(this.node.name.indexOf(\"resList_fish_\") != -1) {//编辑资源\r\n            this.setTips();\r\n        }\r\n        // 鼠标按下\r\n        this.node.on(cc.Node.EventType.MOUSE_DOWN, (event) => {\r\n            // 鼠标左键\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_LEFT) {\r\n                event.stopPropagation();\r\n                if(this.node.name.indexOf(\"resList_fish_\") != -1){//编辑资源\r\n                    //编辑资源 模式就 赋值选中当前的鱼的颜色\r\n                    if(glGame.currentEditFish != null){\r\n                        glGame.currentEditFish.node.color = cc.color(255,255,255,255);\r\n                    }\r\n                    glGame.currentEditFish = this;\r\n                    glGame.currentEditFish.node.color = cc.color(190,0,0,255);\r\n                }else{\r\n                    if(this.node.name != \"fish\"){\r\n                        this.isMouseDown = true;\r\n                    }\r\n                }\r\n            }\r\n            // 鼠标右键\r\n            if (event.getButton() == cc.Event.EventMouse.BUTTON_RIGHT) {\r\n                if(this.node.name != \"fish\"){\r\n                    if(glGame.currLineItem && glGame.currLineItem.lineID != this.node.lineID && glGame.FList[glGame.currGIndex].fishLine[this.node.lineID] != null){\r\n                        glGame.currLineItem = glGame.FList[glGame.currGIndex].fishLine[this.node.lineID];\r\n                        glGame.editor.updateFishLineToCanvas(null,this.node.lineID);\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        let move = (event) => {\r\n            let delta = event.getDelta();\r\n            if(this.isMouseDown){\r\n                this.node.x += delta.x;\r\n                this.node.y += delta.y;\r\n                cc.game.canvas.style.cursor = \"all-scroll\";\r\n                let moveTargetNode = glGame.drawBezier.node.getChildByName(\"point_0\");\r\n                if(moveTargetNode){\r\n                    let mousePos = this.convertToNodeSpace(event);\r\n                    lcl.Events.emit(\"setMouseLocation\", mousePos);\r\n                    moveTargetNode.opacity = 100;\r\n                    cc.game.canvas.style.cursor = \"all-scroll\";\r\n                    //鼠标按下并且有指定目标节点\r\n                    if (moveTargetNode) {\r\n                        //把屏幕坐标转换到节点坐标下\r\n                        let mousePos = this.convertToNodeSpace(event);\r\n                        moveTargetNode.setPosition(mousePos);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //鼠标移动\r\n        this.node.parent.on(cc.Node.EventType.MOUSE_MOVE, move);\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, move);\r\n        let up = (event) => {\r\n            this.isMouseDown = false;\r\n            cc.game.canvas.style.cursor = \"auto\";\r\n        }\r\n        // 鼠标抬起\r\n        this.node.on(cc.Node.EventType.MOUSE_UP, up);\r\n        this.node.parent.on(cc.Node.EventType.MOUSE_UP, up);\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_ENTER, (event) => {\r\n            glGame.editor.node.getChildByName(\"tips\").active = true;\r\n            let fishResInfo = glGame.editor.getFishResConfig(this.node.filename);\r\n            if (!fishResInfo) {\r\n                glGame.editor.status(\"找不到资源配置\", glGame.Color.RED);\r\n            }\r\n            let lab_desc_id = glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout\").getChildByName(\"lab_desc_id\");\r\n            let lab_id = glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout\").getChildByName(\"lab_id\");\r\n            if (fishResInfo) {\r\n                lab_desc_id.getComponent(cc.Label).string = \"FishId:\" + fishResInfo.lineID;\r\n            }\r\n            if (glGame.FList[glGame.currGIndex] != null && glGame.FList[glGame.currGIndex].fishLine != null) {\r\n                let info2 = glGame.FList[glGame.currGIndex].fishLine[this.node.lineID] ? glGame.FList[glGame.currGIndex].fishLine[this.node.lineID] : null;\r\n                let rate = info2 ? info2.rate : -1;\r\n                if (fishResInfo) glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_d\").getComponent(cc.Label).string = fishResInfo.FishName + \"(\" + rate + \"s) 缩放:\" + this.editScale;\r\n            } else {\r\n                if (fishResInfo) glGame.editor.node.getChildByName(\"tips\").getChildByName(\"layout2\").getChildByName(\"lab_d\").getComponent(cc.Label).string = fishResInfo.FishName;\r\n            }\r\n            lab_id.active = this.showTime != undefined && this.showTime != 0;\r\n            if (this.showTime != undefined && this.showTime != 0) {\r\n                lab_id.getComponent(cc.Label).string = \"t:\" + this.showTime.toFixed(2);\r\n            }\r\n            glGame.editor.node.getChildByName(\"tips\").getChildByName(\"bg\").height = 80;\r\n        }, this.node);\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, (event) => {\r\n            let pos  = glGame.editor.node.convertToNodeSpaceAR(event.getLocation());\r\n                pos.x = pos.x+glGame.editor.node.getChildByName(\"tips\").width + 59;\r\n                glGame.editor.node.getChildByName(\"tips\").setPosition(pos);\r\n        }, this.node);\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_LEAVE, (event) => {\r\n            glGame.editor.node.getChildByName(\"tips\").active = false;\r\n        }, this.node);\r\n    },\r\n    // 屏幕坐标转换到节点坐标\r\n    convertToNodeSpace(event) {\r\n        return cc.find(\"Canvas\").convertToNodeSpaceAR(event.getLocation());\r\n    },\r\n    //死亡 - 开始 dieType: 0 自然死亡 1玩家攻击 2全屏炸弹 3闪电  4旋涡\r\n    death(dieType,isOne = true){\r\n        glGame.editor.node.getChildByName(\"fishGroupProgress\").getChildByName(\"slider\").lineID = null;\r\n        this._bUpdate = false;\r\n        glGame.pearssPush = null;\r\n        glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_pay\").active = true;\r\n        glGame.editor.node.getChildByName(\"editBar\").getChildByName(\"btn_push\").active = false;\r\n        if(isOne){\r\n            return;\r\n        }\r\n        if(dieType == CONST.dieType1){\r\n            let oldAngle = this.node.angle + \"\";\r\n            let angle = this.node.angle >　0 ? this.node.angle - 20 : this.node.angle + 20;\r\n            let act = cc.sequence(\r\n                cc.rotateTo(0.1,angle),\r\n                cc.rotateTo(0.1,Number(oldAngle))\r\n            );\r\n            this.node.stopAllActions();\r\n            this.node.runAction(cc.sequence(cc.repeat(act,2),cc.callFunc(()=>{\r\n                this.dispose();\r\n            })));\r\n        }else if(dieType == CONST.dieType4){\r\n            this.node.stopAllActions();\r\n            let act = cc.spawn(\r\n                cc.scaleTo(2,0.01,0.01),\r\n                cc.repeat(cc.rotateBy(0.5,360),5),\r\n                cc.sequence(\r\n                    cc.moveTo(0.6,this.node.x + 9,this.node.y - 9),\r\n                    cc.moveTo(0.6,this.node.x - 9,this.node.y + 9),\r\n                )\r\n            );\r\n            this.node.runAction(cc.sequence(act,cc.callFunc(()=>{\r\n                this.dispose();\r\n            })));\r\n        }else{\r\n            this.dispose();\r\n        }\r\n    },\r\n    //卸载自己\r\n    dispose(){\r\n        this._bUpdate = false;\r\n        glGame.pearssPush = null;\r\n        this.node.off(cc.Node.EventType.TOUCH_START);\r\n        this.fishData = null;\r\n        this.fishLine = null;\r\n        this.fishPath = null;\r\n        this.timeIndex= 0;\r\n        this.moveList = null;\r\n        this.posArray = null;\r\n        if(this.whirlpool)this.whirlpool.destroy();\r\n        this.node.destroy();\r\n    },\r\n    //冰冻/解冻\r\n    settingIcing(isInFreeze){\r\n        if(isInFreeze){\r\n            this._time = Date.now();\r\n        }\r\n        this._bUpdate = isInFreeze;\r\n    },\r\n    getPostFormPath(i){\r\n        let startPos = cc.v2(\r\n            this.path[i][\"start\"].x,\r\n            this.path[i][\"start\"].y\r\n        )\r\n        let controlPos = cc.v2(\r\n            this.path[i][\"control\"].x,\r\n            this.path[i][\"control\"].y\r\n        )\r\n        let endPos = cc.v2(\r\n            this.path[i][\"end\"].x,\r\n            this.path[i][\"end\"].y\r\n        )\r\n        return {startPos:startPos,controlPos:controlPos,endPos:endPos}\r\n    },\r\n    //初始化鱼 - 仅限编辑器\r\n    initEditorFish(resGroupId,restype,scale =1,frequency = glGame.runSpeed){\r\n        this.editScale      = scale;\r\n        this.filename       = \"fish\"+resGroupId;\r\n        this.resType        = restype;\r\n        this.fishPath       = {type:2,liveTime:Math.random() * 20000 + 1000};\r\n        this.fishLine       = this.fishPath;\r\n        this.fishData       = {filename:this.filename};\r\n        this.setFIsh(this.fishData);\r\n        this.runSpeed       = frequency;\r\n        this.isPlayStartMc  = true;\r\n        this.showTime       = 0;\r\n    },\r\n    //资源编辑\r\n    initResEditorFish(filename,maxW,scale =1,frequency = glGame.runSpeed){\r\n        this.editScale      = scale;\r\n        this.maxW           = maxW;\r\n        this.setResFIsh(filename);\r\n        this.runSpeed       = frequency;\r\n        this.isPlayStartMc  = true;\r\n        this.showTime       = 0;\r\n        this.fishData       = {fileName:filename};\r\n    },\r\n    updateData(){\r\n        let info = glGame.FList[glGame.currGIndex].fishLine[this.node.lineID];\r\n        this.moveList = info.moveList;\r\n        this.posArray = info.posArray;\r\n        let baseFrameRate   = Number(glGame.editor.getFishResConfig(Number(info.fishTypeId)).frameRate);//动态获取频率 * 倍率\r\n        this.updateFrequency(baseFrameRate * info.frequency * 10);\r\n    },\r\n    //设置移动数据 - 贝塞尔点以及 移动数据\r\n    setMoveData(fishLine){\r\n        this.posArray = fishLine.posArray;\r\n        this.moveList = fishLine.moveList;\r\n        this.showTime = fishLine.showTime;\r\n    },\r\n    editMove(){\r\n        let info = glGame.FList[glGame.currGIndex].fishLine[this.node.lineID];\r\n        this.moveList = info.moveList;\r\n        this.posArray = info.posArray;\r\n        this.showTime = info.showTime;\r\n        this.startMove();\r\n    },\r\n    getRunTime(){\r\n        let info = glGame.FList[glGame.currGIndex].fishLine[this.node.lineID];\r\n        this.moveList = info.moveList;\r\n        this.posArray = info.posArray;\r\n        this.showTime = info.showTime;\r\n        return this.getMaxIndexByTime();\r\n    },\r\n    startMove(isset = false){\r\n        this._runTimeALl = 0;\r\n        this._startTime = 0\r\n        this._time = Date.now();\r\n        this.node.x = this.posArray[0].x;\r\n        this.node.y = this.posArray[0].y;\r\n        this._bUpdate = true;\r\n        this.allTime = this.getMaxIndexByTime();\r\n        this.at = 0;\r\n        if(isset){\r\n            glGame.editor.node.getChildByName(\"fishGroupProgress\").getChildByName(\"slider\").lineID = this.node.lineID;\r\n        }\r\n        let info = glGame.FList[glGame.currGIndex].fishLine[this.node.lineID];\r\n        let baseFrameRate   = Number(glGame.editor.getFishResConfig(Number(info.fishTypeId)).frameRate);//动态获取频率 * 倍率\r\n        this.updateFrequency(baseFrameRate * info.frequency * 10);\r\n    },\r\n    setProgress(progress){\r\n        this._startTime = progress*this.allTime;\r\n        this._time = Date.now();\r\n        this.delayedPause = 1;\r\n        this._bUpdate = true;\r\n    },\r\n    //获取时间下标\r\n    getMaxIndexByTime() {\r\n        let timeIndex = 0;\r\n        let startTime = 0;\r\n        let nowTime = 0;\r\n        while (true){\r\n            timeIndex = this.getIndexByTime(startTime);\r\n            if(timeIndex == -1){\r\n                break;\r\n            }\r\n            let i = timeIndex > 0 ?  3 * timeIndex : 2 * timeIndex;\r\n            let a = this.posArray[i];\r\n            if(!a){//拿不到数据，到尽头了，销毁\r\n                break;\r\n            }\r\n            startTime = startTime + 0.017;\r\n            nowTime+=0.017;\r\n        }\r\n        return nowTime;\r\n    },\r\n    move(dt){\r\n        //开始移动\r\n        if (this._bUpdate && this.moveList && this.showTime > -1){\r\n            this.showTime -= dt;\r\n            if(this.showTime<=0){\r\n                this._startTime = 0\r\n                this._time = Date.now();\r\n                this.showTime = -1;\r\n            }\r\n        }\r\n        //移动\r\n        if (this._bUpdate && this.moveList && this.showTime <= 0) {\r\n            let l_time = Date.now()\r\n            this._startTime = this._startTime + (l_time - this._time) / 1000;\r\n            this._time = l_time\r\n            if (this.fishPath.type == 2) {//二阶贝塞尔曲线运动\r\n                // cc.log(\"==== \",this._startTime)\r\n                this.timeIndex = this.getIndexByTime(this._startTime);\r\n                let isr = false;\r\n                if(glGame.editor.node.getChildByName(\"fishGroupProgress\").isGroupPlay){\r\n                    if(glGame.editor.node.getChildByName(\"fishGroupProgress\").getChildByName(\"slider\").lineID == this.node.lineID){\r\n                        isr = true;\r\n                    }\r\n                }else{\r\n                    isr = true;\r\n                }\r\n                if(isr){\r\n                    let progress = this._startTime/this.allTime;\r\n                    glGame.editor.node.getChildByName(\"fishGroupProgress\").getChildByName(\"slider\").getComponent(cc.Slider).progress = progress;\r\n                    glGame.editor.node.getChildByName(\"fishGroupProgress\").getChildByName(\"progressBar\").getComponent(cc.ProgressBar).progress = progress;\r\n                    let timeProgress = \"\";\r\n                    if(this.allTime == undefined){\r\n                        this.allTime = 0;\r\n                    }\r\n                    timeProgress = this._startTime.toFixed(2)+\"/\"+this.allTime.toFixed(2)+\"s\";\r\n                    glGame.editor.node.getChildByName(\"fishGroupProgress\").getChildByName(\"progressBar\").getChildByName(\"bar\").getChildByName(\"lab_time\").getComponent(cc.Label).string = timeProgress;\r\n                }\r\n                if(this.timeIndex > 0){\r\n                    this.at = this.timeIndex;\r\n                }\r\n                this._runTimeALl += dt;\r\n                if (this.timeIndex == -1) {//到尽头了，销毁\r\n                    glGame.editor.status(\"运行时间：\"+this._runTimeALl.toFixed(2)+\"  1 timeEndIndex \"+this.at);\r\n                    this.death(CONST.dieType0);\r\n                    return\r\n                }\r\n                let t;\r\n                let currTime;\r\n                let nextTime;\r\n                if(this.lastIndex == null || this.timeIndex != this.lastIndex){\r\n                    currTime = this.getTimeByIndex(this.timeIndex);\r\n                    nextTime = this.getTimeByIndex(this.timeIndex + 1);\r\n                    this.currTime = currTime;\r\n                    this.nextTime = nextTime;\r\n                }else\r\n                {\r\n                    currTime = this.currTime;\r\n                    nextTime = this.nextTime;\r\n                }\r\n                let fz = this._startTime - currTime;\r\n                let fm = nextTime - currTime;\r\n                t  = fz/fm;\r\n                let i = this.timeIndex > 0 ?  3 * this.timeIndex : 2 * this.timeIndex;\r\n                let a = this.posArray[i];\r\n                let b = this.posArray[i + 1];\r\n                let c = this.posArray[i + 2];\r\n                if(!a){//拿不到数据，到尽头了，销毁\r\n                    glGame.editor.status(\"运行时间：\"+this._runTimeALl.toFixed(2)+\" 2 timeEndIndex \"+this.at);\r\n                    this.death(CONST.dieType0);\r\n                    return\r\n                }\r\n                //轨迹运动\r\n                let x = Math.pow(1 - t, 2) * a.x + 2 * t * (1 - t) * b.x + Math.pow(t, 2) * c.x;\r\n                let y = Math.pow(1 - t, 2) * a.y + 2 * t * (1 - t) * b.y + Math.pow(t, 2) * c.y;\r\n                //设置朝向\r\n                this.node.angle = this.setAngle(x,y,this.node.position);\r\n                this.node.x = x\r\n                this.node.y = y\r\n                this.lastIndex = this.timeIndex;\r\n            } else if (this.fishPath.type == 1) {//多阶贝塞尔曲线运动,编辑器不支持多阶贝塞尔曲线路线图绘制，如需使用，无法显示准确的路径\r\n                let t = this._startTime / this.fishLine.liveTime * 1000\r\n                if (t >= 1) {\r\n                    this.death(CONST.dieType0);\r\n                    return\r\n                }\r\n                let pos = this.getPos(t)\r\n                let x = pos.x\r\n                let y = pos.y\r\n                this.node.angle = this.setAngle(x,y,this.node.position);\r\n                this.node.x = pos.x\r\n                this.node.y = pos.y\r\n            }\r\n            if(this.delayedPause > 0){\r\n                this.delayedPause = 0;\r\n                this._bUpdate = false;\r\n            }\r\n        }\r\n    },\r\n    //循环体\r\n    update(dt){\r\n        //播放游的动画\r\n        if(this.isPlayStartMc){\r\n            this.playFishMovieClip(dt);\r\n        }\r\n        this.move(dt);\r\n        //子弹碰撞 变色 恢复颜色\r\n        if(this.isHit){\r\n            this.hitTime -= dt;\r\n            if(this.hitTime < 0){\r\n                this.isHit = false;\r\n                // if (this.fishData.resType == 0) {      //正常鱼\r\n                    this.node.color = cc.color(255,255,255,255);\r\n                // }else if (this.fishData.resType == 1) {//鱼群3\r\n                //     for (let i =1;i<4;i++){\r\n                //         let fish = this.node.getChildByName(\"ui_fish\"+i);\r\n                //         fish.color = cc.color(255,255,255,255);\r\n                //     }\r\n                // }else if (this.fishData.resType == 2) {//鱼群4\r\n                //     for (let i =1;i<5;i++){\r\n                //         let fish = this.node.getChildByName(\"ui_fish\"+i);\r\n                //         fish.color = cc.color(255,255,255,255);\r\n                //     }\r\n                // }else if (this.fishData.resType == 3) {//一网打尽\r\n                //     for (let i =1;i<2;i++) {\r\n                //         let fish = this.node.getChildByName(\"ui_fish\"+i);\r\n                //         fish.color = cc.color(255,255,255,255);\r\n                //     }\r\n                // }\r\n            }\r\n        }\r\n    },\r\n    //获取时间下标\r\n    getIndexByTime(existTime) {\r\n        let time = 0\r\n        for (let i = 0; i < this.moveList.length / 2; i++) {\r\n            let one = 2 * i;\r\n            let two = 2 * i + 1;\r\n            time = time + this.moveList[one] + this.moveList[two];\r\n            if (time >= existTime) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1\r\n    },\r\n    //通过下标获取时间\r\n    getTimeByIndex(index) {\r\n        let time = 0\r\n        for (let i = 0; i < this.moveList.length / 2; i++) {\r\n            if (i == index) {\r\n                break\r\n            }\r\n            let one = 2 * i;\r\n            let two = 2 * i + 1;\r\n            time = time + this.moveList[one] + this.moveList[two]\r\n        }\r\n        return time\r\n    },\r\n    setAngle(x2,y2,point){\r\n        let x1 = point.x;\r\n        let y1 = point.y;\r\n        this.setscale();\r\n        return Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\r\n    },\r\n    setscale(){\r\n        let  oneX = this.posArray[0].x;\r\n        this.node.scaleY = oneX > 0 ? -this.editScale : this.editScale;\r\n    },\r\n    //获取贝塞尔点\r\n    getPos(t) {\r\n        let x = this.multilevelBezier(1, t, this.posArray.length - 1, 0)\r\n        let y = this.multilevelBezier(2, t, this.posArray.length - 1, 0)\r\n        return cc.v2(x,y);\r\n    },\r\n    //获取贝塞尔点\r\n    multilevelBezier(type, t, k, i) {\r\n        if (k == 0) {\r\n            if (1 == type) {\r\n                return this.posArray[i].x\r\n            } else {\r\n                return this.posArray[i].y\r\n            }\r\n        } else {\r\n            return ((1 - t) * this.multilevelBezier(type, t, k - 1, i) + t * this.multilevelBezier(type, t, k - 1, i + 1))\r\n        }\r\n    },\r\n    //获取基础数据\r\n    getFishData(){\r\n        return this.fishData;\r\n    },\r\n    OnDestroy() {\r\n        this.moveList = [];\r\n        // this.logic = null;\r\n        this.fishData = null;\r\n        this.fishLine = null;\r\n        this.fishPath = null;\r\n        this.index= 0;\r\n        this.posArray = null;\r\n        this.isHit    = false;\r\n        this.hitTime  = 0;\r\n    },\r\n});","//单例管理器\r\nvar glGame = {};\r\nwindow.glGame = glGame;\r\nglGame.filePreFix = \"fish\"; //图集名字前缀\r\nglGame.drawStart = false;   //是否已初始化绘画\r\nglGame.isImport = false;    //是否是导入\r\n\r\nglGame.scale = 1;           //默认值全局scale，该值不会导出,仅限捕鱼编辑器使用\r\nglGame.runSpeed = 1;        //0.13默认值在鱼表这里是改变默认值的默认偏移量  鱼图播放/每帧速度\r\nglGame.speed = 5;           //默认值全局速度\r\nglGame.maxSpeed = 30;       //默认值 每个贝塞尔点的全局速度\r\nglGame.lineID = 1000;       //鱼线id - 每添加一条鱼++\r\nglGame.level = 10;          //鱼线默认层级\r\nglGame.showTime = 0;        //默认值出现时间\r\n\r\nglGame.startPoint = cc.v2(-1122, 300);   //创建鱼的第一条 贝塞尔 线 开始点\r\nglGame.controlPoint = cc.v2(57, 290);    //创建鱼的第一条 贝塞尔 线 控制点\r\nglGame.endPoint = cc.v2(1207, 300);      //创建鱼的第一条 贝塞尔 线 结束点\r\n\r\nglGame.FishRunGap = 2;      //鱼游 时长 间隙值，经过测试无误\r\n\r\nglGame.P13 = [\r\n    [cc.v2(-1122,303),cc.v2(-57,290),cc.v2(1207,283)],\r\n    [cc.v2(-1122,159),cc.v2(50,161),cc.v2(1207,169)],\r\n    [cc.v2(-1122,-212),cc.v2(61,-247),cc.v2(1207,-261)],\r\n    [cc.v2(-1122,-251),cc.v2(-133,-121),cc.v2(1207,-123)],\r\n    [cc.v2(1207,523),cc.v2(388,-208),cc.v2(-1150,-206)],\r\n    [cc.v2(1207,-474),cc.v2(-398,-348),cc.v2(20,696)],\r\n    [cc.v2(-1122,-529),cc.v2(155,-194),cc.v2(20,696)],\r\n    [cc.v2(-1122,681),cc.v2(38,-457),cc.v2(1207,684)],\r\n    [cc.v2(-1122,681),cc.v2(-11,-684),cc.v2(1207,-649)],\r\n    [cc.v2(-1122,544),cc.v2(897,-2),cc.v2(-1161,-556)],\r\n    [cc.v2(1207,552),cc.v2(-1076,33),cc.v2(1272,-560)],\r\n    [cc.v2(28,1207),cc.v2(-7,-2),cc.v2(15,-626)],\r\n    [cc.v2(-1122,-640),cc.v2(18,12),cc.v2(1224,634)],\r\n];\r\n\r\n\r\nglGame.FList                    = {};    //鱼组 保存当前所有的鱼线\r\nglGame.startGroupIndex          = 100000;//鱼组开始id\r\nglGame.currGIndex               = 100000;//当前鱼组id\r\n\r\nglGame.width  = 3600;                    //可绘画区域宽度\r\nglGame.height = 2200;                    //可绘画区域高度\r\n\r\n\r\nglGame.Color = {}\r\nglGame.Color.RED = cc.color(246,92,92);         //TPIS 颜色提示  红色\r\nglGame.Color.HAFEBCAK = cc.Color(156,156,156);  //TIPS 颜色提示  灰色\r\n\r\n//--------------------------------------------------------公共方法-------------------------------------------------------\r\nglGame.erxiangshi = function(start, end)\r\n{\r\n    let cs = 1, bcs= 1;\r\n    while (end > 0) {\r\n        cs *= start;\r\n        bcs *= end;\r\n        start--;\r\n        end--;\r\n    }\r\n    return (cs / bcs);\r\n}\r\nglGame.MultiPointBezier = function(points, t) {\r\n    let len = points.length;\r\n    let x = 0, y = 0;\r\n    for (let i = 0; i < len; i++) {\r\n        let point = points[i];\r\n        x += point.x * Math.pow((1 - t), (len - 1 - i)) * Math.pow(t, i) * (glGame.erxiangshi(len - 1, i));\r\n        y += point.y * Math.pow((1 - t), (len - 1 - i)) * Math.pow(t, i) * (glGame.erxiangshi(len - 1, i));\r\n    }\r\n    return { x: x, y: y };\r\n}\r\nglGame.CreateBezierPoints = function(anchorpoints, pointsAmount,points) {\r\n    // var points = [];\r\n    for (var i = 0; i < pointsAmount; i++) {\r\n        var point = glGame.MultiPointBezier(anchorpoints, i / pointsAmount);\r\n        points.push(point);\r\n    }\r\n    return points;\r\n}\r\nglGame.getPOst = function (v){\r\n    return {x:Number(v.x.toFixed(1)),y:Number(v.y.toFixed(1))}\r\n}\r\nglGame.getPosArrayAndmoveList = function (path,lineID,rate)\r\n{\r\n    let posArray = [];\r\n    let moveList = [];\r\n    for (let i = 0; i < path.length; i++) {\r\n        let pos = glGame.getPostFormPath(path,i);\r\n        posArray.push(glGame.getPOst(pos.startPos));\r\n        posArray.push(glGame.getPOst(pos.controlPos));\r\n        posArray.push(glGame.getPOst(pos.endPos));\r\n        let speed1 = path[i][\"start\"][\"speed\"] == undefined ? rate : Number(path[i][\"start\"][\"speed\"]);\r\n        let speed3 = path[i][\"end\"][\"speed\"] == undefined ? rate : Number(path[i][\"end\"][\"speed\"]);\r\n        if(i == 0){\r\n            moveList.push(speed1);//如果找不到当前线的速度就 使用默认值\r\n            moveList.push(0);//如果找不到当前线的速度就 使用默认值\r\n            moveList.push(0);//如果找不到当前线的速度就 使用默认值\r\n        }else{\r\n            moveList.push(speed1);//如果找不到当前线的速度就 使用默认值\r\n            moveList.push(0);//如果找不到当前线的速度就 使用默认值\r\n            moveList.push(speed3);//如果找不到当前线的速度就 使用默认值\r\n        }\r\n    }\r\n    return {posArray:posArray,moveList:moveList};\r\n}\r\nglGame.getPostFormPath = function(path,i){\r\n    let startPos,controlPos,endPos;\r\n    if(!path[i][\"start\"]){\r\n        startPos    = cc.v2(Number(path[0].x.toFixed(1)),Number(path[0].y.toFixed(1)));\r\n        controlPos  = cc.v2(Number(path[1].x.toFixed(1)),Number(path[1].y.toFixed(1)));\r\n        endPos      = cc.v2(Number(path[2].x.toFixed(1)),Number(path[2].y.toFixed(1)));\r\n    }else{\r\n        startPos = cc.v2(\r\n            path[i][\"start\"].x,\r\n            path[i][\"start\"].y\r\n        )\r\n        controlPos = cc.v2(\r\n            path[i][\"control\"].x,\r\n            path[i][\"control\"].y\r\n        )\r\n        endPos = cc.v2(\r\n            path[i][\"end\"].x,\r\n            path[i][\"end\"].y\r\n        )\r\n    }\r\n    return {startPos:startPos,controlPos:controlPos,endPos:endPos}\r\n}\r\nglGame.calcBezierLength = function(list, t)\r\n{\r\n    let pt0 = list[0], pt1 = list[1], pt2 = list[2];\r\n    var ax = pt0.x - 2 * pt1.x + pt2.x;\r\n    var ay = pt0.y - 2 * pt1.y + pt2.y;\r\n    var bx = 2 * pt1.x - 2 * pt0.x;\r\n    var by = 2 * pt1.y - 2 * pt0.y;\r\n\r\n    var A = 4 * (ax * ax + ay * ay);\r\n    var B = 4 * (ax * bx + ay * by);\r\n    var C = bx * bx + by * by;\r\n\r\n    var temp1 = Math.sqrt(C + t * (B + A * t));\r\n    var temp2 = (2 * A * t * temp1 + B * (temp1 - Math.sqrt(C)));\r\n    var temp3 = Math.log(B + 2 * Math.sqrt(A) * Math.sqrt(C));\r\n    var temp4 = Math.log(B + 2 * A * t + 2 * Math.sqrt(A) * temp1);\r\n    var temp5 = 2 * Math.sqrt(A) * temp2;\r\n    var temp6 = (B * B - 4 * A * C) * (temp3 - temp4);\r\n    return (temp5 + temp6) / (8 * Math.pow(A, 1.5));\r\n}\r\n//获取时间下标\r\nglGame.getMaxIndexByTime = function(posArray,moveList) {\r\n    let timeIndex = 0;\r\n    let startTime = 0;\r\n    let nowTime = 0;\r\n    while (true){\r\n        timeIndex = glGame.runTime(startTime,moveList);\r\n        if(timeIndex == -1){\r\n            break;\r\n        }\r\n        let i = timeIndex > 0 ?  3 * timeIndex : 2 * timeIndex;\r\n        let a = posArray[i];\r\n        if(!a){//拿不到数据，到尽头了，销毁\r\n            break;\r\n        }\r\n        startTime = startTime + 0.017;\r\n        nowTime+=0.017;\r\n    }\r\n    return Number(nowTime.toFixed(2));\r\n}\r\n//获取运行时间\r\nglGame.runTime = function(existTime,moveList) {\r\n    let time = 0\r\n    for (let i = 0; i < moveList.length / 2; i++) {\r\n        let one = 2 * i;\r\n        let two = 2 * i + 1;\r\n        time = time + moveList[one] + moveList[two];\r\n        if (time >= existTime) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1\r\n}\r\n//范围计算\r\nglGame.range = function(timeListTmp,t){\r\n    if(timeListTmp.length == 0){\r\n        return true;\r\n    }\r\n    if(timeListTmp.indexOf(t) != -1){\r\n        return false;\r\n    }\r\n    for (let i=0;i<timeListTmp.length;i++){\r\n        if(Math.abs(Math.abs(timeListTmp[i]) - Math.abs(t)) < glGame.FishRunGap){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n//获取边缘点时间\r\nglGame.edgeComputingToTime = function(posArray,moveList,runTime,showTime){\r\n    let time = 0;                   //模拟帧数运行 当前时间\r\n    let timeList = [];              // [[进时间,出时间], ... ]   的 数据 格式\r\n    let oldTimeList = [];           // [[方向，时间], ... ]     的 数据 格式\r\n    let timeListTmp = [];           //辅助 timeList 生成的 临时数组\r\n    let actionListTmp = [];         //辅助 timeList 生成的 临时数组\r\n    let lenTime = Number(runTime);  //游行时间 + showTime  = 总生命（出生到死亡最大时间，包含屏幕边缘内外游行以及等待游行时间）\r\n    let frequency = 0.001;          //每帧运行时间的颗粒度\r\n    while (time < lenTime){         //模拟 游行\r\n        let pos = glGame.getPosFormTime(time,posArray,moveList);//获得当前 time 的 位置\r\n        if(pos == undefined){   //获取不到就结束\r\n            // cc.log(\"数据忽略.....time \",time);\r\n            break;\r\n        }\r\n        let arraid_1920_1080 = Math.floor(Math.abs(pos.x)) == 960 || Math.floor(Math.abs(pos.y)) == 540;//x到达1920/2(960) 或 y 到达 1080/2(540)\r\n        if(arraid_1920_1080){//到达x 或 y 边缘的时候 则需记录\r\n            let t = Number(time.toFixed(0));\r\n            let t2 = Number(time.toFixed(2));\r\n            if(glGame.range(timeListTmp,t)){//如果是合适的范围才使用\r\n                if(actionListTmp.length == 0){\r\n                    let frist = glGame.getArea(glGame.getPosFormTime(0,posArray,moveList));\r\n                    actionListTmp.push(frist);\r\n                    let tmpTime1 = Number((showTime+t2).toFixed(2));\r\n                    // timeList.push({e:frist==1?0:1,t:tmpTime1});\r\n                    oldTimeList.push([frist==1?0:1,tmpTime1]);\r\n                    timeList.push([tmpTime1]);\r\n                }else{\r\n                    let e = actionListTmp[actionListTmp.length-1] == 1 ? 0 : 1;\r\n                    let tmpTime2 = Number((showTime+t2).toFixed(2));\r\n                    // timeList.push({e:e==1?0:1,t:tmpTime2});\r\n                    oldTimeList.push([e==1?0:1,tmpTime2]);\r\n                    if(timeList[timeList.length - 1].length == 1){\r\n                        timeList[timeList.length - 1].push(tmpTime2);\r\n                    }else{\r\n                        timeList.push([tmpTime2]);\r\n                    }\r\n                    actionListTmp.push(e);\r\n                }\r\n                timeListTmp.push(t);\r\n            }\r\n        }\r\n        time += frequency;\r\n    }\r\n    glGame.getPosFormTime_lastIndex = null;\r\n    glGame.getPosFormTime_currTime = null;\r\n    glGame.getPosFormTime_nextTime = null;\r\n\r\n    if(oldTimeList.length == 0){//该情况是 鱼一直在屏幕内或屏幕外游，但是在编辑规则里 只允许鱼一直在屏幕内游\r\n        return [[0,lenTime+showTime]];\r\n    } else if(oldTimeList.length == 1){\r\n        if(oldTimeList[0].length == 1){//进\r\n            return [timeListTmp[0],lenTime+showTime];\r\n        }else {                        //出\r\n            return [[0,timeListTmp[0]]];\r\n        }\r\n    }\r\n    // let endoldList = oldTimeList[oldTimeList.length-1];//最后一组数据 如果是单数 那么可能只有一个进 或者一个出 要补全\r\n    let endList = timeList[timeList.length-1];//最后一组数据2 没有方向的\r\n    if(endList.length == 1){\r\n        endList.push(lenTime+showTime); //endList[0][1] 是进来时间\r\n    }\r\n    return timeList\r\n}\r\n//获取是否是在屏幕内 1 是屏幕内 0 是屏幕外\r\nglGame.getArea = function (pos) {\r\n    if((Math.abs(pos.x) < 960) && (Math.abs(pos.y) < 540)){\r\n        return 1;//屏幕内\r\n    }\r\n    return 0;//屏幕外\r\n}\r\nglGame.getPosFormTime_lastIndex = null;\r\nglGame.getPosFormTime_currTime = null;\r\nglGame.getPosFormTime_nextTime = null;\r\n//通过时间获取当前坐标\r\nglGame.getPosFormTime = function (_startTime,posArray,moveList) {\r\n    let timeIndex = glGame.getIndexByTime(_startTime,moveList);\r\n    if (timeIndex == -1) {//到尽头了，销毁\r\n        // cc.warn(\"run over \")\r\n        return null;\r\n    }\r\n    let t;\r\n    let currTime;\r\n    let nextTime;\r\n    if(glGame.getPosFormTime_lastIndex == null || timeIndex != glGame.getPosFormTime_lastIndex){\r\n        currTime = glGame.getTimeByIndex(timeIndex,moveList);\r\n        nextTime = glGame.getTimeByIndex(timeIndex + 1,moveList);\r\n        glGame.getPosFormTime_currTime = currTime;\r\n        glGame.getPosFormTime_nextTime = nextTime;\r\n    }else\r\n    {\r\n        currTime = glGame.getPosFormTime_currTime;\r\n        nextTime = glGame.getPosFormTime_nextTime;\r\n    }\r\n    let fz = _startTime - currTime;\r\n    let fm = nextTime - currTime;\r\n    t  = fz/fm;\r\n    let i = timeIndex > 0 ?  3 * timeIndex : 2 * timeIndex;\r\n    let a = posArray[i];\r\n    let b = posArray[i + 1];\r\n    let c = posArray[i + 2];\r\n    if(!a){//拿不到数据，到尽头了，销毁\r\n        // cc.warn(\">> over 2\")\r\n        return null;\r\n    }\r\n    //轨迹运动\r\n    let x = Math.pow(1 - t, 2) * a.x + 2 * t * (1 - t) * b.x + Math.pow(t, 2) * c.x;\r\n    let y = Math.pow(1 - t, 2) * a.y + 2 * t * (1 - t) * b.y + Math.pow(t, 2) * c.y;\r\n    return {x:x,y:y,timeIndex:timeIndex};\r\n}\r\n//获取时间下标\r\nglGame.getIndexByTime = function(existTime,moveList) {\r\n    let time = 0\r\n    for (let i = 0; i < moveList.length / 2; i++) {\r\n        let one = 2 * i;\r\n        let two = 2 * i + 1;\r\n        time = time + moveList[one] + moveList[two];\r\n        if (time >= existTime) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1\r\n}\r\n//通过下标获取时间\r\nglGame.getTimeByIndex = function(index,moveList) {\r\n    let time = 0\r\n    for (let i = 0; i < moveList.length / 2; i++) {\r\n        if (i == index) {\r\n            break\r\n        }\r\n        let one = 2 * i;\r\n        let two = 2 * i + 1;\r\n        time = time + moveList[one] + moveList[two]\r\n    }\r\n    return time\r\n}\r\n//获取图片\r\nglGame.getAtlasForTexture = function(key,imgName){\r\n    if(glGame.atlasList != null && glGame.atlasList[key]){\r\n        let atlasPlist = glGame.atlasList[key].plist;\r\n        let atlasFrame = glGame.atlasList[key].frame;\r\n        if(atlasPlist == null || atlasPlist.frames == null){\r\n            console.error(\"无法获取图集\"+key+\",请检查！\")\r\n            glGame.editor.status(\"无法获取图集\"+key+\",请检查！\")\r\n            return null;\r\n        }\r\n        let frameDataObj = atlasPlist.frames[imgName+'.png'];\r\n        if(!frameDataObj){\r\n            return  null;\r\n        }\r\n        // 图片矩形信息\r\n        let rect = glGame.GetFrameData(frameDataObj.frame);\r\n        // 图片的原始大小\r\n        let size = glGame.GetSizeData(frameDataObj.sourceSize);\r\n        // 图片合图时的裁剪偏移\r\n        let offset = glGame.GetOffsetData(frameDataObj.offset);\r\n        // 创建此图的精灵帧\r\n        let newFrame = new cc.SpriteFrame();\r\n        newFrame.setTexture(atlasFrame, rect, frameDataObj.rotated, offset, size);\r\n        return newFrame;\r\n    }\r\n}\r\nglGame.atlasList = null;\r\nglGame.loadingAtlas = function(key,imageUrlStr,cb){\r\n    if(!glGame.atlasList)glGame.atlasList = {};\r\n    cc.loader.load(imageUrlStr+'/'+key+\".png\",  (error, atlasFrame) => {\r\n        if (error != null || atlasFrame == null) {\r\n            console.log(\"加载.png文件失败\");\r\n            if(error)console.log(error);\r\n            console.log(atlasFrame);\r\n        }\r\n        if(!glGame.atlasList[key])glGame.atlasList[key] = {};\r\n        glGame.atlasList[key].frame = atlasFrame;\r\n        cc.loader.load(imageUrlStr+'/'+key+\".plist\",  (error2, atlasPlist) => {\r\n            if (error2 != null || atlasPlist == null) {\r\n                console.log(\"加载.plist文件失败\");\r\n            }\r\n            if(error2)console.log(error2);\r\n            glGame.atlasList[key].plist = atlasPlist;\r\n            if(cb) {\r\n                cb();\r\n            }\r\n        });\r\n    });\r\n}\r\n//动态解析图集\r\nglGame.GetFrameData = function (imgName) {\r\n    let str = imgName;\r\n    // 13是这个rect结构至少要有的字符串长度，例如{{1000,389},{1022,768}}\r\n    if (str.length < 13) {\r\n        console.log(\"---解析plist的frame rect，数据错误-----\");\r\n        return null;\r\n    }\r\n    let newStr = str;\r\n    newStr = newStr.slice(2);\r\n    newStr = newStr.slice(0, newStr.length - 2);\r\n    let newList_0 = newStr.split('},{');\r\n    let newList_1 = newList_0[0].split(\",\");\r\n    let newList_2 = newList_0[1].split(\",\");\r\n    if (newList_1.length < 2 || newList_2.length < 2) {\r\n        Tools.log(\"---解析plist的frame rect，字符串数据错误-----\");\r\n        return null;\r\n    }\r\n    return cc.rect(parseInt(newList_1[0]), parseInt(newList_1[1]), parseInt(newList_2[0]), parseInt(newList_2[1]));\r\n};\r\nglGame.GetSizeData = function (str) {\r\n    // 5是这个size结构至少要有的字符串长度，例如{64,60}\r\n    if (str.length < 5) {\r\n        console.log(\"---解析plist的size，数据错误-----\");\r\n        return null;\r\n    }\r\n    let newStr = str;\r\n    newStr = newStr.slice(1);\r\n    newStr = newStr.slice(0, newStr.length - 1);\r\n    let newList_0 = newStr.split(',');\r\n    if (newList_0.length < 2) {\r\n        console.log(\"---解析plist的size，字符串数据错误-----\");\r\n        return null;\r\n    }\r\n    return cc.size(parseInt(newList_0[0]), parseInt(newList_0[1]));\r\n};\r\nglGame.GetOffsetData = function (str) {\r\n    // 5是这个offset结构至少要有的字符串长度，例如{22,-24}\r\n    if (str.length < 5) {\r\n        console.log(\"---解析plist的offset，数据错误-----\");\r\n        return null;\r\n    }\r\n    let newStr = str;\r\n    newStr = newStr.slice(1);\r\n    newStr = newStr.slice(0, newStr.length - 1);\r\n    let newList_0 = newStr.split(',');\r\n    if (newList_0.length < 2) {\r\n        console.log(\"---解析plist的offset，字符串数据错误-----\");\r\n        return null;\r\n    }\r\n    return cc.v2(parseInt(newList_0[0]), parseInt(newList_0[1]));\r\n};\r\n//三端导出的配置\r\nglGame.EditOutConfig   = {\r\n    \"line\": {\r\n        \"groupID\": \"groupID\",\r\n        \"fishTypeId\": \"fishTypeId\",\r\n        \"lineID\": \"lineID\",\r\n        \"resGroupId\": \"resGroupId\",\r\n        \"showTime\": \"showTime\",\r\n        \"frequency\": \"frequency\",\r\n        \"rate\": \"rate\",\r\n        \"scale\": \"scale\",\r\n        \"desc\": \"desc\",\r\n        \"runTime\": \"runTime\",\r\n        \"posArray\": \"posArray\",\r\n        \"moveList\": \"moveList\",\r\n        \"edgeList\": \"edgeList\"\r\n    },\r\n    \"line_isOut\": {\r\n        \"groupID\": true,\r\n        \"fishTypeId\": true,\r\n        \"lineID\": true,\r\n        \"resGroupId\": true,\r\n        \"showTime\": true,\r\n        \"frequency\": true,\r\n        \"rate\": true,\r\n        \"scale\": true,\r\n        \"desc\": true,\r\n        \"runTime\": true,\r\n        \"posArray\": true,\r\n        \"moveList\": true,\r\n        \"edgeList\": true\r\n    },\r\n    \"group\": {\r\n        \"id\": \"id\",\r\n        \"fishLine\": \"fishLine\",\r\n        \"type\": \"type\",\r\n        \"range\": \"range\",\r\n        \"desc\": \"desc\"\r\n    },\r\n    \"group_isOut\": {\r\n        \"id\": true,\r\n        \"fishLine\": true,\r\n        \"type\": true,\r\n        \"range\": true,\r\n        \"desc\": true\r\n    }\r\n};\r\nglGame.ServerOutConfig = {\r\n    \"line\": {\r\n        \"groupID\": \"groupID\",\r\n        \"fishTypeId\": \"fishTypeId\",\r\n        \"lineID\": \"lineID\",\r\n        \"resGroupId\": \"resGroupId\",\r\n        \"showTime\": \"showTime\",\r\n        \"frequency\": \"frequency\",\r\n        \"rate\": \"rate\",\r\n        \"scale\": \"scale\",\r\n        \"desc\": \"desc\",\r\n        \"runTime\": \"runTime\",\r\n        \"posArray\": \"posArray\",\r\n        \"moveList\": \"moveList\",\r\n        \"edgeList\": \"edgeList\"\r\n    },\r\n    \"line_isOut\": {\r\n        \"groupID\": false,\r\n        \"fishTypeId\": true,\r\n        \"lineID\": false,\r\n        \"resGroupId\": false,\r\n        \"showTime\": true,\r\n        \"frequency\": false,\r\n        \"rate\": false,\r\n        \"scale\": false,\r\n        \"desc\": false,\r\n        \"runTime\": true,\r\n        \"posArray\": false,\r\n        \"moveList\": false,\r\n        \"edgeList\": true\r\n    },\r\n    \"group\": {\r\n        \"id\": \"id\",\r\n        \"fishLine\": \"fishLine\",\r\n        \"type\": \"type\",\r\n        \"range\": \"range\",\r\n        \"desc\": \"desc\"\r\n    },\r\n    \"group_isOut\": {\r\n        \"id\": false,\r\n        \"fishLine\": true,\r\n        \"type\": true,\r\n        \"range\": false,\r\n        \"desc\": false\r\n    }\r\n};\r\nglGame.ClientOutConfig = {\r\n    \"line\": {\r\n        \"groupID\": \"groupID\",\r\n        \"fishTypeId\": \"fishTypeId\",\r\n        \"lineID\": \"lineID\",\r\n        \"resGroupId\": \"resGroupId\",\r\n        \"showTime\": \"showTime\",\r\n        \"frequency\": \"frequency\",\r\n        \"rate\": \"rate\",\r\n        \"scale\": \"scale\",\r\n        \"desc\": \"desc\",\r\n        \"runTime\": \"runTime\",\r\n        \"posArray\": \"posArray\",\r\n        \"moveList\": \"moveList\",\r\n        \"edgeList\": \"edgeList\"\r\n    },\r\n    \"line_isOut\": {\r\n        \"groupID\": false,\r\n        \"fishTypeId\": true,\r\n        \"lineID\": false,\r\n        \"resGroupId\": false,\r\n        \"showTime\": true,\r\n        \"frequency\": true,\r\n        \"rate\": true,\r\n        \"scale\": false,\r\n        \"desc\": false,\r\n        \"runTime\": true,\r\n        \"posArray\": true,\r\n        \"moveList\": true,\r\n        \"edgeList\": false\r\n    },\r\n    \"group\": {\r\n        \"id\": \"id\",\r\n        \"fishLine\": \"fishLine\",\r\n        \"type\": \"type\",\r\n        \"range\": \"range\",\r\n        \"desc\": \"desc\"\r\n    },\r\n    \"group_isOut\": {\r\n        \"id\": false,\r\n        \"fishLine\": true,\r\n        \"type\": false,\r\n        \"range\": false,\r\n        \"desc\": false\r\n    }\r\n};\r\n\r\n\r\n\r\n//测试鱼表\r\nglGame.fishTableTest = {\r\n    \"101\": {\r\n        \"fishTypeId\": \"101\",\r\n        \"fishName\": \"孔雀鱼\",\r\n        \"fishDesc\": \"孔雀鱼，也称为凤尾鱼是一种热带鱼，雌雄鱼的体型和色彩差别较大，体色绚烂多彩、体型优美。孔雀鱼性情温和，能与温和的中小性型热带鱼混养，平时活泼好动，寿命较短。\",\r\n        \"level\": 1,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 1,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 1,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"102\": {\r\n        \"fishTypeId\": \"102\",\r\n        \"fishName\": \"凤凰鱼\",\r\n        \"fishDesc\": \"凤凰鱼，是一种温和而胆小的热带鱼，适宜放置于比较安静又没有直射光照射的环境中。水箱中应多植水草供其躲藏栖身。它爱吃动物性食物，不挑食，可以和其他小型热带鱼混养。\",\r\n        \"level\": 1,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 2,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 2,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"103\": {\r\n        \"fishTypeId\": \"103\",\r\n        \"fishName\": \"天使鱼\",\r\n        \"fishDesc\": \"天使鱼，也称神仙鱼，可说是热带鱼的代表鱼类。背鳍和腹鳍很长，极像天使展开的翅膀。是一种有较高观赏价值的热带鱼，有“观赏鱼皇后”的美称。\",\r\n        \"level\": 1,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 3,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 3,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"104\": {\r\n        \"fishTypeId\": \"104\",\r\n        \"fishName\": \"小丑鱼\",\r\n        \"fishDesc\": \"小丑鱼，是对雀鲷科海葵鱼亚科鱼类的俗称，因为脸上都有一条或两条白色条纹，好似京剧中的丑角而得名，是一种热带咸水鱼。小丑鱼与海葵有着密不可分的共生关系，因此又称海葵鱼。\",\r\n        \"level\": 1,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 4,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 4,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"105\": {\r\n        \"fishTypeId\": \"105\",\r\n        \"fishName\": \"黑鲷鱼\",\r\n        \"fishDesc\": \"黑鲷鱼，属于热带、温带沿岸杂食性底栖鱼类，喜栖息在沙泥底质水域，有时会进入河口内湾。性格敏感多疑，警戒性强。可用烧烤或煮汤或红烧食用。是重要的养殖鱼类，具高经济价值。\",\r\n        \"level\": 1,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 5,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 5,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"201\": {\r\n        \"fishTypeId\": \"201\",\r\n        \"fishName\": \"河豚\",\r\n        \"fishDesc\": \"河豚鱼，其肉味鲜美、营养丰富，是一种名贵的高档水产品，被誉为“菜肴之冠”，但其卵巢、肝脏、肾脏、眼睛、血液中含有剧毒，处理不当或误食，轻者中毒，重者丧命。\",\r\n        \"level\": 2,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 6,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 2,\r\n        \"priority\": 6,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"202\": {\r\n        \"fishTypeId\": \"202\",\r\n        \"fishName\": \"罗汉鱼\",\r\n        \"fishDesc\": \"罗汉鱼，因其头部隆起似罗汉而得名。该鱼体型魁梧，头顶大鼓包，短身高背，花纹秀丽，具有鲜艳夺目的色彩，且色彩变化丰富，具有很高的观赏价值，受到人们的广泛喜爱。\",\r\n        \"level\": 2,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 7,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 2,\r\n        \"priority\": 7,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"203\": {\r\n        \"fishTypeId\": \"203\",\r\n        \"fishName\": \"中华鲎\",\r\n        \"fishDesc\": \"中华鲎，鲎由三部分组成：头胸甲略呈马蹄形，腹部呈六角形两侧具棘刺，尾部是一根长的尾剑。鲎的附肢基部有许多刺状突起并围在口的周围以咀嚼食物，故又称肢口动物。生活在浅海沙质海底。主要是肉食性动物，取食环节动物和软体动物等，有时也取食海底藻类。鲎的血液因含有铜离子显示蓝色。中华鲎血液为蓝色。\",\r\n        \"level\": 2,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 8,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 2,\r\n        \"priority\": 8,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"204\": {\r\n        \"fishTypeId\": \"204\",\r\n        \"fishName\": \"灯笼鱼\",\r\n        \"fishDesc\": \"灯笼鱼，为中型底栖鱼类，多潜伏海底，眼睛几乎无用武之地，不善游泳，多靠腹鳍爬行。口内有锐利而且朝内倾斜的长牙，基本上，被咬中的猎物绝不可能逃走。身体裸露无鳞。特别之处是有一支由前背鳍演化而成的发光钓竿，钓竿顶端内上百万只的发光菌，状似小鱼，会发出亮光，吸引小生物成为它们的食物。\",\r\n        \"level\": 2,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 9,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 2,\r\n        \"priority\": 9,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"205\": {\r\n        \"fishTypeId\": \"205\",\r\n        \"fishName\": \"龙虾\",\r\n        \"fishDesc\": \"龙虾，是节肢动物门软甲纲十足目龙虾科下物种的通称。它头胸部较粗大，外壳坚硬，色彩斑斓，腹部短小，体长一般在20～40厘米之间，重0.5公斤上下，部分无螯，腹肢可后天演变成螯。最重的能达到5公斤以上，人称龙虾虎。体呈粗圆筒状，背腹稍平扁，头胸甲发达，坚厚多棘，前缘中央有一对强大的眼上棘，具封闭的鳃室。主要分布于热带海域，是名贵海产品。\",\r\n        \"level\": 2,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 10,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 2,\r\n        \"priority\": 10,\r\n        \"chatVoiceType\": 0,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"301\": {\r\n        \"fishTypeId\": \"301\",\r\n        \"fishName\": \"中华鲟\",\r\n        \"fishDesc\": \"中华鲟，是长江中最大的鱼，生活于大江和近海中，故有“长江鱼王”之称。中华鲟生命周期较长，最长寿命可达40龄。是中国一级重点保护野生动物，也是活化石，有“水中大熊猫”之称。夏秋两季，生活在长江口外浅海域的中华鲟回游到长江，历经3000多公里的溯流博击，才回到金沙江一带产卵繁殖。产后待幼鱼长大到15厘米左右，又携带它们旅居外海。它们就这样世世代代在江河上游出生，在大海里生长。\",\r\n        \"level\": 3,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 11,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 2,\r\n        \"priority\": 11,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": -1,\r\n        \"voiceFile\": -1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"302\": {\r\n        \"fishTypeId\": \"302\",\r\n        \"fishName\": \"海龟\",\r\n        \"fishDesc\": \"海龟，生活于亚热带近海上层，终身生活于海洋中。大多数海龟居住在沿岸的浅滩水域，有些种类的海龟冬季居住在食物丰富的水域，到了季产卵季节会作一次长途迁徙。食性很杂，主要分布于太平洋、大西洋及印度洋中的温暖海域。\",\r\n        \"level\": 3,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 12,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 3,\r\n        \"priority\": 12,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"干得好，爱你\",\r\n        \"voiceFile\": 1,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"303\": {\r\n        \"fishTypeId\": \"303\",\r\n        \"fishName\": \"剑鱼\",\r\n        \"fishDesc\": \"剑鱼，亦称“箭鱼”。是热带、亚热带海洋中一种常见鱼类，因其上颌向前延伸呈剑状而得名。剑鱼分布于除北冰洋之外各大洋，其本身也是一种主要的食用鱼，具有重要渔业价值。当剑鱼向前游泳时，强壮有力的尾柄能产生巨大推动力，长矛般的长颌起着劈水的作用。以每小时130公里高速前进的剑鱼，坚硬的上颌能将很厚的船底刺穿。\",\r\n        \"level\": 3,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 13,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 3,\r\n        \"priority\": 13,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"嗯？&&来点宵夜如何\",\r\n        \"voiceFile\": 2,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"304\": {\r\n        \"fishTypeId\": \"304\",\r\n        \"fishName\": \"水母\",\r\n        \"fishDesc\": \"水母，是水生环境中重要的浮游生物，水母是一种非常漂亮的水生动物。它的身体外形就像一把透明伞，水母身体的主要成分是水，不但透明，而且有漂浮作用。有些水母的伞状体还带有各色花纹，在蓝色的海洋里，这些游动着的色彩各异的水母显得十分美丽。\",\r\n        \"level\": 3,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 14,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 3,\r\n        \"priority\": 14,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"眼睛进了沙子&&有没有人心疼\",\r\n        \"voiceFile\": 3,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"305\": {\r\n        \"fishTypeId\": \"305\",\r\n        \"fishName\": \"魔鬼鱼\",\r\n        \"fishDesc\": \"魔鬼鱼，是一种庞大的热带鱼类。魔鬼鱼看上去令人生畏，其实它是很温和的。它的个头和力气常使潜水员害怕，因为只要它发起怒来，只需用它那强有力的“双翅”一拍，就会碰断人的骨头，致人于死地。所以人们叫它“魔鬼鱼”。\",\r\n        \"level\": 3,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 15,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 3,\r\n        \"priority\": 15,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"最恐怖的生物&&明明是人类\",\r\n        \"voiceFile\": 4,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"306\": {\r\n        \"fishTypeId\": \"306\",\r\n        \"fishName\": \"鲨鱼\",\r\n        \"fishDesc\": \"鲨鱼，海生，少数种类进入淡水，为一群游速快的中大型海洋鱼类，鲨鱼的感觉器官相当灵敏，甚至能嗅出几千米之外的血腥味。它们具有感应电的能力，并可以此发觉隐藏在沙底下的猎物。在中国民间，鲨软骨提取物、鲨肝油等早已被用于治疗癌症等疾病。\",\r\n        \"level\": 3,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 16,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 3,\r\n        \"priority\": 16,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"你自己闯进来的\",\r\n        \"voiceFile\": 5,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"601\": {\r\n        \"fishTypeId\": \"601\",\r\n        \"fishName\": \"鱼妖\",\r\n        \"fishDesc\": \"鱼妖众之一，由巨大的鲸鱼变化而成，喜欢金闪闪的东西来装饰自己，随着阳光的折射，游动时散发出金色的光芒，十分绚丽，据说持续捕获鱼妖，收集的妖气会吸引“深渊龙王”的出现。\",\r\n        \"level\": 4,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 17,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 4,\r\n        \"priority\": 17,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"啊~吃撑了\",\r\n        \"voiceFile\": 6,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"602\": {\r\n        \"fishTypeId\": \"602\",\r\n        \"fishName\": \"鱼妖2\",\r\n        \"fishDesc\": \"鱼妖众之一，吸收深渊龙王的妖气后变化而成，喜财，贪玩，是它的个性，喜欢用钱币装饰自己，据说持续捕获鱼妖，收集的妖气会吸引“深渊龙王”的出现。\",\r\n        \"level\": 4,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 18,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 4,\r\n        \"priority\": 18,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"喜欢人家的尾巴？&&小心喜欢会致命哦~\",\r\n        \"voiceFile\": 7,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"603\": {\r\n        \"fishTypeId\": \"603\",\r\n        \"fishName\": \"鱼妖3\",\r\n        \"fishDesc\": \"鱼妖众之一，喜欢顶着聚宝盆四处游荡，据说持续捕获鱼妖，收集的妖气会吸引“深渊龙王”的出现。\",\r\n        \"level\": 4,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 19,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 4,\r\n        \"priority\": 19,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"嗯哈哈哈哈\",\r\n        \"voiceFile\": 8,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"604\": {\r\n        \"fishTypeId\": \"604\",\r\n        \"fishName\": \"鱼妖4\",\r\n        \"fishDesc\": \"鱼妖众之一，变异龙虾，十分巨大，喜欢金闪闪的颜色，据说持续捕获鱼妖，收集的妖气会吸引“深渊龙王”的出现。\",\r\n        \"level\": 4,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 20,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 4,\r\n        \"priority\": 20,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"我~？&&是你惹不起的~！\",\r\n        \"voiceFile\": 9,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"605\": {\r\n        \"fishTypeId\": \"605\",\r\n        \"fishName\": \"鱼妖5\",\r\n        \"fishDesc\": \"鱼妖众之一，魔鬼鱼，由于某种原因，全身血液都已经变成金色，据说持续捕获鱼妖，收集的妖气会吸引“深渊龙王”的出现。\",\r\n        \"level\": 4,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 21,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 4,\r\n        \"priority\": 21,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"迷倒的就是你\",\r\n        \"voiceFile\": 10,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"606\": {\r\n        \"fishTypeId\": \"606\",\r\n        \"fishName\": \"鱼妖6\",\r\n        \"fishDesc\": \"鱼妖众之一，灯笼鱼，它的牙齿已经金质化，十分锋利，收集的妖气会吸引“深渊龙王”的出现。\",\r\n        \"level\": 4,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 22,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 4,\r\n        \"priority\": 22,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"啦啦啦啦啦~&&啦啦啦~啦啦啦~\",\r\n        \"voiceFile\": 11,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"701\": {\r\n        \"fishTypeId\": \"701\",\r\n        \"fishName\": \"闪电蟹\",\r\n        \"fishDesc\": \"闪电蟹，体内含有电流元素，捕获时，可获得闪电炮台，对目标数条鱼造成连锁闪电效果。\",\r\n        \"level\": 7,\r\n        \"deadEvent\": 2,\r\n        \"resGroupId\": 23,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 23,\r\n        \"chatVoiceType\": 6,\r\n        \"chatBubble\": \"额，额别，别别别\",\r\n        \"voiceFile\": 12,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"702\": {\r\n        \"fishTypeId\": \"702\",\r\n        \"fishName\": \"炎爆蟹\",\r\n        \"fishDesc\": \"炎爆蟹，体内含有爆炸元素，捕获时，可获得炎爆炮台，对目标鱼及其周围造成大范围爆炸的效果。\",\r\n        \"level\": 7,\r\n        \"deadEvent\": 3,\r\n        \"resGroupId\": 24,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 24,\r\n        \"chatVoiceType\": 6,\r\n        \"chatBubble\": \"生气了，哼！\",\r\n        \"voiceFile\": 13,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"703\": {\r\n        \"fishTypeId\": \"703\",\r\n        \"fishName\": \"龙息蟹\",\r\n        \"fishDesc\": \"龙息蟹，体内含有喷射性火元素，捕获时，可获得龙息炮台，对直线距离上所有经过的鱼类造成效果。\",\r\n        \"level\": 7,\r\n        \"deadEvent\": 4,\r\n        \"resGroupId\": 25,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 25,\r\n        \"chatVoiceType\": 6,\r\n        \"chatBubble\": \"嘿嘿？嚯嚯~\",\r\n        \"voiceFile\": 14,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"704\": {\r\n        \"fishTypeId\": \"704\",\r\n        \"fishName\": \"负剑蟹\",\r\n        \"fishDesc\": \"负剑蟹，体内含有数个尖锐利器，捕获时，可获得仙剑炮台，直线飞行并反弹，沿途刺击路径上的鱼，且最终会范围性喷射细剑，再次对范围内鱼群造成刺击效果。\",\r\n        \"level\": 7,\r\n        \"deadEvent\": 5,\r\n        \"resGroupId\": 26,\r\n        \"shock\": 0,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 26,\r\n        \"chatVoiceType\": 6,\r\n        \"chatBubble\": \"啊哈哈&&做条鲜鱼怎么样？\",\r\n        \"voiceFile\": 15,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"801\": {\r\n        \"fishTypeId\": \"801\",\r\n        \"fishName\": \"聚宝盆\",\r\n        \"fishDesc\": \"聚宝盆，内有大量金银财宝，捕获时，可获得数量不等的金币。\",\r\n        \"level\": \"8\",\r\n        \"deadEvent\": 6,\r\n        \"resGroupId\": 27,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 27,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"想什么呢？朋友\",\r\n        \"voiceFile\": 16,\r\n        \"fixedResource\": 1,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"802\": {\r\n        \"fishTypeId\": \"802\",\r\n        \"fishName\": \"玉如意\",\r\n        \"fishDesc\": \"如意如意，如我心意，捕获时可获得数量不等的金币，但有时候不如意。\",\r\n        \"level\": \"8\",\r\n        \"deadEvent\": 7,\r\n        \"resGroupId\": 28,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 1,\r\n        \"priority\": 28,\r\n        \"chatVoiceType\": 1,\r\n        \"chatBubble\": \"记住~你的未来&&只能属于我\",\r\n        \"voiceFile\": 17,\r\n        \"fixedResource\": 1,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"901\": {\r\n        \"fishTypeId\": \"901\",\r\n        \"fishName\": \"财神\",\r\n        \"fishDesc\": \"财神，背着一麻袋的红包走来走去，捕获越多，可获得的红包次数也越多。\",\r\n        \"level\": \"9\",\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 29,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 0,\r\n        \"priority\": 29,\r\n        \"chatVoiceType\": 3,\r\n        \"chatBubble\": \"诶嘿~&&对面的朋友看过来~\",\r\n        \"voiceFile\": 18,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"902\": {\r\n        \"fishTypeId\": \"902\",\r\n        \"fishName\": \"熔岩玄武\",\r\n        \"fishDesc\": \"熔岩玄武，全身覆盖火红的龟壳，为了长期适应生活在海底火山区域，已经完全蜕变，寿命不详，捕获时，触发全屏爆炸\",\r\n        \"level\": \"9\",\r\n        \"deadEvent\": 1,\r\n        \"resGroupId\": 30,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 4,\r\n        \"priority\": 30,\r\n        \"chatVoiceType\": 6,\r\n        \"chatBubble\": \"好~好舒服哇！！！\",\r\n        \"voiceFile\": 19,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    },\r\n    \"903\": {\r\n        \"fishTypeId\": \"903\",\r\n        \"fishName\": \"深渊龙王\",\r\n        \"fishDesc\": \"恐怖的深渊龙王，千万不要激怒它，否则小心你的钱币……\",\r\n        \"level\": 9,\r\n        \"deadEvent\": 0,\r\n        \"resGroupId\": 31,\r\n        \"shock\": 1,\r\n        \"effectRotate\": 4,\r\n        \"priority\": 31,\r\n        \"chatVoiceType\": 3,\r\n        \"chatBubble\": \"年轻人,别因为&&头脑发热站错队\",\r\n        \"voiceFile\": 20,\r\n        \"fixedResource\": 0,\r\n        \"frameRate\": 0.013\r\n    }\r\n}","//设置面板\r\ncc.Class({\r\n    extends: cc.Component,\r\n    start () {\r\n        let speed_editbox = this.node.getChildByName(\"layourt\").getChildByName(\"speed_editbox\");\r\n        let runSpeed_editbox = this.node.getChildByName(\"layourt\").getChildByName(\"runSpeed_editbox\");\r\n        let fishID_editbox = this.node.getChildByName(\"layourt\").getChildByName(\"fishID_editbox\");\r\n        let groupID_editbox = this.node.getChildByName(\"layourt\").getChildByName(\"groupID_editbox\");\r\n        speed_editbox.getComponent(cc.EditBox).string = glGame.speed;\r\n        fishID_editbox.getComponent(cc.EditBox).string = glGame.lineID;\r\n        groupID_editbox.getComponent(cc.EditBox).string = glGame.startGroupIndex;\r\n\r\n        speed_editbox.on(\"text-changed\", (editbox) => {\r\n            glGame.speed = Number(editbox.string);\r\n        })\r\n        runSpeed_editbox.on(\"text-changed\", (editbox) => {\r\n            glGame.runSpeed = Number(editbox.string);\r\n        })\r\n        fishID_editbox.on(\"text-changed\", (editbox) => {\r\n            glGame.lineID = Number(editbox.string);\r\n        })\r\n        groupID_editbox.on(\"text-changed\", (editbox) => {\r\n            glGame.startGroupIndex = Number(editbox.string);\r\n        })\r\n        let len = 0;\r\n        let len2 = 0;\r\n        for (let key in glGame.FList){\r\n            len ++;\r\n            let groupList = glGame.FList[key];\r\n            for (let key in groupList.fishLine){\r\n                len2++;\r\n            }\r\n        }\r\n        this.node.getChildByName(\"lab_info1\").getComponent(cc.Label).string = \"当前鱼组数量：\"+len;\r\n        this.node.getChildByName(\"lab_info2\").getComponent(cc.Label).string = \"当前总鱼线：\"+len2;\r\n    },\r\n    closeView(){\r\n        this.node.active = false;\r\n    },\r\n});\r\n"],"file":"project.js"}